{"version":3,"file":"1217.f0f1dfda2bbabce4bd04.js","mappings":"8IAGIA,EAAY,OAAO,eACnBC,EAAa,OAAO,iBACpBC,EAAoB,OAAO,0BAC3BC,EAAsB,OAAO,sBAC7BC,EAAe,OAAO,UAAU,eAChCC,EAAe,OAAO,UAAU,qBAChCC,EAAkB,CAACC,EAAKC,EAAKC,IAAUD,KAAOD,EAAMP,EAAUO,EAAKC,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAC,CAAM,CAAC,EAAIF,EAAIC,CAAG,EAAIC,EACtJC,EAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAC,GACtBR,EAAa,KAAKQ,EAAGC,CAAI,GAC3BP,EAAgBK,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIV,EACF,QAASU,KAAQV,EAAoBS,CAAC,EAChCP,EAAa,KAAKO,EAAGC,CAAI,GAC3BP,EAAgBK,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,EAAgB,CAACH,EAAGC,IAAMX,EAAWU,EAAGT,EAAkBU,CAAC,CAAC,EAC5DG,EAAY,CAACC,EAAQC,IAAY,CACnC,IAAIC,EAAS,CAAC,EACd,QAASL,KAAQG,EACXZ,EAAa,KAAKY,EAAQH,CAAI,GAAKI,EAAQ,QAAQJ,CAAI,EAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAC9B,GAAIG,GAAU,MAAQb,EACpB,QAASU,KAAQV,EAAoBa,CAAM,EACrCC,EAAQ,QAAQJ,CAAI,EAAI,GAAKR,EAAa,KAAKW,EAAQH,CAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAEhC,OAAOK,CACT,EACA,MAAMC,EAAiBC,GAAO,CAC5B,IAAIC,EAAKD,EAAI,CAAE,SAAAE,CAAS,EAAID,EAAIE,EAAQR,EAAUM,EAAI,CAAC,UAAU,CAAC,EAClE,OAAuB,gBAAoB,IAAsBP,EAAcJ,EAAe,CAAC,EAAGa,CAAK,EAAG,CAAE,KAAM,SAAU,CAAC,EAAGD,CAAQ,CAC1I,C,mFCjCItB,EAAY,OAAO,eACnBC,EAAa,OAAO,iBACpBC,EAAoB,OAAO,0BAC3BC,EAAsB,OAAO,sBAC7BC,EAAe,OAAO,UAAU,eAChCC,EAAe,OAAO,UAAU,qBAChCC,EAAkB,CAACC,EAAKC,EAAKC,IAAUD,KAAOD,EAAMP,EAAUO,EAAKC,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAC,CAAM,CAAC,EAAIF,EAAIC,CAAG,EAAIC,EACtJC,EAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAC,GACtBR,EAAa,KAAKQ,EAAGC,CAAI,GAC3BP,EAAgBK,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIV,EACF,QAASU,KAAQV,EAAoBS,CAAC,EAChCP,EAAa,KAAKO,EAAGC,CAAI,GAC3BP,EAAgBK,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,EAAgB,CAACH,EAAGC,IAAMX,EAAWU,EAAGT,EAAkBU,CAAC,CAAC,EAChE,MAAMY,EAAuB,CAAC,CAC5B,SAAAF,EACA,MAAAG,EACA,YAAAC,EACA,cAAAC,GAAgB,GAChB,gBAAAC,EAAkB,GAClB,KAAAC,EAAO,UACP,UAAAC,EACF,IAAM,CACJ,KAAM,CAAE,OAAAC,EAAQ,WAAAC,GAAY,QAAAC,EAAQ,KAAI,MAAU,EAC5C,CAACC,EAAQC,CAAS,KAAI,YAASR,GAAgBC,EAAkB,EAAI,EACrEQ,EAAWF,EAAS,WAAa,aACjCG,EAAeR,IAAS,cACxBS,EAA6B,GAAGJ,EAAS,WAAa,QAAQ,YAAYT,CAAK,GAC/Ec,EAAS,CACb,UAAQ,OAAI,CACV,QAAS,OACT,eAAgB,gBAChB,WAAY,QACd,CAAC,EACD,SAAO,OAAI,CACT,OAAQ,CACV,CAAC,EACD,YAAU,OAAI,CACZ,OAAQ,EACR,WAAYP,GAAW,iBACzB,CAAC,EACD,mBAAiB,OAAIlB,EAAcJ,EAAe,CAChD,UAAWuB,GAAQI,EAAe,IAAO,EAAG,EAC5C,aAAc,CAChB,EAAGL,GAAW,SAAS,EAAG,CACxB,MAAOD,EAAO,KAAK,SACrB,CAAC,CAAC,EACF,WAAS,OAAI,CACX,UAAWE,GAAQ,CAAC,CACtB,CAAC,CACH,EACA,OAAuB,gBAAoB,MAAO,CAAE,UAAAH,EAAU,EAAmB,gBAAoB,MAAO,CAAE,UAAWS,EAAO,MAAO,EAAGV,IAAS,UAA4B,gBAAoB,KAAM,CAAE,UAAWU,EAAO,KAAM,EAAGd,CAAK,EAAoB,gBAAoB,KAAM,CAAE,UAAWc,EAAO,QAAS,EAAGd,CAAK,EAAGE,IAAiC,gBAChW,IACA,CACE,KAAMS,EACN,QAAS,IAAMD,EAAU,CAACD,CAAM,EAChC,KAAM,SACN,KAAM,KACN,aAAcI,CAChB,CACF,CAAC,EAAGZ,GAA+B,gBAAoB,IAAK,CAAE,UAAWa,EAAO,eAAgB,EAAGb,CAAW,EAAGQ,GAA0B,gBAAoB,MAAO,CAAE,UAAWK,EAAO,OAAQ,EAAGjB,CAAQ,CAAC,CAChN,C,uGChEA,SAASkB,EAAS,CAAE,MAAAC,EAAO,SAAAC,EAAU,UAAAZ,CAAU,EAAG,CAChD,MAAMa,KAAQ,MAAU,EAClBJ,EAASK,EAAUD,CAAK,EACxBE,EAAc,cAAgBJ,EAAOC,EAAS,QAASA,EAAS,IAAI,EAC1E,OAAuB,gBACrB,MACA,CACE,aAAW,MAAGH,EAAO,YAAa,yBAA0BT,CAAS,EACrE,aAAc,WACd,wBAAyB,CAAE,OAAQ,KAAS,SAASe,CAAW,CAAE,CACpE,CACF,CACF,CACA,MAAMD,EAAaD,IACV,CACL,eAAa,OAAI,CACf,WAAYA,EAAM,WAAW,oBAC7B,SAAUA,EAAM,WAAW,UAAU,QACvC,CAAC,CACH,E,4YCnBK,MAAMG,GAA6B,CAAC,MAAM,EAEpCC,GAAqB,sBAE3B,SAASC,GAAeC,EAAyD,CACtF,MAAO,CAAC,CAACA,EAAG,WAAaH,GAA2B,SAASG,EAAG,IAAI,CACtE,CAEO,SAASC,GAAaC,EAAc,CAEzC,MAAMC,EADU,eACI,KAAKD,CAAI,EAC7B,OAAIC,GAAOA,EAAI,OAAS,EACfA,EAAI,CAAC,EAAE,KAAK,EAEd,EACT,CAEO,SAASC,GAAeC,EAAuB,CAEpD,MAAMF,EADU,2BACI,KAAKE,CAAa,EACtC,OAAIF,GAAOA,EAAI,OAAS,EACf,KAAKA,EAAI,CAAC,EAAE,KAAK,CAAC,KAEpB,EACT,CAEO,SAASG,GAAgBJ,EAAc,CAE5C,MAAMC,EADU,gCACI,KAAKD,CAAI,EAC7B,OAAIC,GAAOA,EAAI,OAAS,EACfA,EAAI,CAAC,EAAE,KAAK,EAEd,EACT,CAEO,MAAMI,GAAoBC,GAAyB,CACxD,GAAI,CAACA,EACH,MAAO,GAET,MAAMC,EAAaD,EAAI,KAAK,EAAE,QAAQ,SAAU,EAAE,EAElD,MADgB,yDACD,KAAKC,CAAU,CAChC,EAEaC,GAA0BC,GAAgC,CACrE,MAAMC,EAAkB,CAAC,EACzB,OAAID,EAAM,QACRA,EAAM,QAAST,GAAS,CAClB,OAAOA,EAAK,MAAM,GACpBU,EAAM,KAAK,OAAOV,EAAK,MAAM,CAAC,CAElC,CAAC,EAEIU,CACT,EAEaC,GAAsB,CACjCD,EACAE,IACG,CACH,MAAMC,KAAwB,KAC5B,0DACA,8EACF,EACMC,KAAc,KAClB,+CACA,mEACF,EACA,OAAOF,EAAM,IAAKG,GAAS,CACzB,GAAIA,EAAK,aAAeA,EAAK,aAAe,QAAS,CACnD,MAAMC,KAAmB,KACvB,qDACA,YAAYD,EAAK,WAAW,0DAC9B,EACAA,EAAK,QAAUC,CACjB,MAAWD,EAAK,kBAAoBA,EAAK,OACvCA,EAAK,QAAUF,EACNE,EAAK,QAAU,CAACL,EAAM,SAASK,EAAK,MAAM,IACnDA,EAAK,QAAUD,GAEjB,MAAO,CAAE,GAAGC,CAAK,CACnB,CAAC,CACH,EAEaE,GAAgC,CAACP,EAAiBE,IAAsB,CACnF,MAAME,EAAc,EAClB,+CACA,2EACF,EACA,OAAOF,EAAM,IAAKG,IAGZA,EAAK,QAAU,CAACL,EAAM,SAAS,OAAOK,EAAK,MAAM,CAAC,IACpDA,EAAK,QAAUD,GAGV,CAAE,GAAGC,CAAK,EAClB,CACH,ECtFaG,GAAe,CAAC,CAAE,UAAAC,EAAW,MAAA7D,EAAO,SAAA8D,EAAU,MAAAC,EAAO,SAAAC,CAAS,IAAa,CACtF,KAAM,CAACC,EAAWC,CAAY,KAAI,YAASzB,GAAazC,CAAK,CAAC,EACxDkC,KAAQ,MAAU,EAClBJ,KAAS,MAAWK,EAAS,EAEnC,sBAAU,IAAM,CACT0B,GACHK,EAAazB,GAAazC,CAAK,CAAC,CAEpC,EAAG,CAAC6D,EAAW7D,CAAK,CAAC,KAGnB,OAAC,OAAI,UAAW8B,EAAO,QACpB,SAAA+B,KACC,mBACE,mBAACM,EAAA,GACC,UAAWrC,EAAO,MAClB,MAAOmC,EACP,SAAWG,GAAU,CACnB,MAAMpE,EAAQoE,EAAM,cAAc,MAClCF,EAAalE,CAAK,EACdgE,GACFA,EAAS,KAAKhE,CAAK,IAAI,CAE3B,EACA,QAAS,CAAC,CAAC+D,EACX,OACEA,MACE,OAACM,EAAA,EAAO,CAAC,QAASN,EAChB,mBAACO,EAAA,EAAI,CAAC,KAAK,sBAAuB,GACpC,EAGN,EACF,KAEA,OAAC,QAAK,MAAO,CAAE,MAAOR,EAAW5B,EAAM,OAAO,KAAK,SAAW,OAAQ,EACpE,mBAACH,GAAA,EAAQ,CAAC,MAAO/B,EAAO,SAAU,CAAE,QAAS,MAAa,KAAM,OAAQ,EAAG,EAC7E,EAEJ,CAEJ,EAEMmC,GAAaD,IACV,CACL,WAAS,OAAI,CACX,QAASA,EAAM,QAAQ,EAAG,CAAC,CAC7B,CAAC,EACD,SAAO,OAAI,CACT,UAAW,CACT,WAAYA,EAAM,WAAW,mBAC/B,CACF,CAAC,CACH,GCpDWqC,GAAsC,CAAC,CAAE,SAAAC,CAAS,IAAM,CACnE,MAAM1C,KAAS,MAAW,EAAS,EAC7B,CACJ,aAAA2C,EACA,SAAAC,EACA,QAAAC,EACA,MAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACtB,KAAI,MAAsB,CACxB,KAAM,UACR,CAAC,EAEKC,EAAOF,EAAM,MAAM,EACnBlC,EAAOkC,EAAM,MAAM,EAEnBG,EAAU,IACPD,EAAO,GAAK/B,GAAiBL,CAAI,EAG1C,SACE,QAAC,OAAI,UAAWZ,EAAO,UACrB,oBAAC,MAAG,UAAWA,EAAO,QAAS,yBAAa,KAC5C,QAAC,OAAI,UAAWA,EAAO,QAAS,yBACrB,OAAC8B,GAAY,CAAC,MAAM,iDAAiD,SAAU,GAAM,GAChG,KAEA,OAAC,QAAK,GAAG,WAAW,SAAUa,EAAaD,CAAQ,EAAG,UAAW1C,EAAO,KACtE,oBAACkD,EAAA,EAAK,CAAC,IAAK,EAAG,UAAU,SACvB,oBAACC,EAAA,EAAK,CAAC,MAAM,OACX,mBAAC,MACC,OAAQ,CAAC,CAAE,MAAO,CAAE,SAAAjB,EAAU,IAAAkB,EAAK,GAAGC,CAAM,CAAE,OAC5C,OAACC,EAAA,EAAU,CAAE,GAAGD,EAAO,WAAaE,GAAMrB,EAASqB,EAAE,OAAO,EAAE,EAAG,UAAWvD,EAAO,WAAY,EAEjG,QAAA6C,EACA,KAAK,OACL,MAAO,CAAE,SAAU,CAAE,MAAO,GAAM,QAAS,UAAW,CAAE,EAC1D,EACF,KACA,OAACM,EAAA,EAAK,CAAC,MAAM,OAAO,QAAS,CAAC,CAACJ,EAAO,KAAM,MAAOA,GAAQ,MAAM,QAC/D,mBAACV,EAAA,GACC,UAAWrC,EAAO,MAClB,KAAK,OACJ,GAAG4C,EAAS,OAAQ,CACnB,SAAU,mBACV,SAAWY,GAAQvC,GAAiBuC,CAAG,GAAK,0BAC9C,CAAC,EACD,YAAY,iDACZ,QAAS,CAAC,CAACT,EAAO,KACpB,EACF,KACA,OAAC,OAAI,UAAW/C,EAAO,gBACrB,mBAACyD,EAAA,GAAM,CAAC,KAAK,SAAS,SAAU,CAACR,EAAQ,EACvC,mBAAC,KAAK,CAAC,QAAQ,sCAAsC,gBAAI,EAC3D,EACF,GACF,EACF,GACF,CAEJ,EAEM,GAAa7C,IACV,CACL,aAAW,OAAI,CACb,QAASA,EAAM,QAAQ,CAAC,CAC1B,CAAC,EACD,WAAS,OAAI,CACX,MAAOA,EAAM,OAAO,KAAK,QACzB,OAAQ,OAAOA,EAAM,QAAQ,CAAC,CAAC,KAC/B,SAAUA,EAAM,WAAW,GAAG,QAChC,CAAC,EACD,WAAS,OAAI,CACX,aAAcA,EAAM,QAAQ,CAAC,EAC7B,MAAOA,EAAM,OAAO,KAAK,UACzB,SAAUA,EAAM,WAAW,KAAK,EAClC,CAAC,EACD,QAAM,OAAI,CACR,QAAS,OACT,cAAe,SACf,IAAKA,EAAM,QAAQ,CAAC,EACpB,MAAO,OACP,SAAU,OACZ,CAAC,EACD,SAAO,OAAI,CACT,MAAO,OACP,UAAW,CACT,WAAYA,EAAM,WAAW,oBAC7B,MAAO,MACT,CACF,CAAC,EACD,cAAY,OAAI,CACd,MAAO,MACT,CAAC,EACD,mBAAiB,OAAI,CACnB,QAAS,OACT,eAAgB,WAChB,UAAWA,EAAM,QAAQ,CAAC,CAC5B,CAAC,CACH,G,wCC1GK,MAAMsD,GAAY,CAAC,CAAE,KAAAV,EAAM,SAAAhB,EAAU,QAAA2B,CAAQ,IAAa,CAC/D,MAAM3D,KAAS,MAAW,EAAS,EAEnC,OAAKgD,EAKD,CAACA,EAAK,MAAQ,CAACA,EAAK,aACf,QAAC,QAAK,UAAWhD,EAAO,SAAU,0BAAcgD,EAAK,GAAG,cAAU,KAIzE,QAAC,OAAI,UAAWhD,EAAO,QACpB,UAAAgD,EAAK,cAAa,OAACY,GAAA,EAAM,CAAC,IAAKZ,EAAK,UAAW,IAAI,EAAG,MACvD,OAAC,QAAK,aAAW,MAAGhD,EAAO,MAAO,CAAE,CAACA,EAAO,QAAQ,EAAGgC,CAAS,CAAC,EAAI,SAAAgB,EAAK,KAAK,EAC9EW,MACC,OAACpB,EAAA,EAAO,CAAC,WAAS,OAACsB,EAAA,EAAG,CAAE,SAAAF,CAAA,CAAQ,EAC9B,mBAACnB,EAAA,EAAI,CAAC,KAAK,uBAAuB,UAAWxC,EAAO,QAAS,EAC/D,GAEJ,KAjBO,oBAAE,CAmBb,EAEM,GAAaI,IACV,CACL,WAAS,OAAI,CACX,QAAS,OACT,WAAY,QACd,CAAC,EACD,SAAO,OAAI,CACT,SAAU,SACV,WAAYA,EAAM,QAAQ,CAAC,EAC3B,YAAaA,EAAM,QAAQ,CAAC,CAC9B,CAAC,EACD,UAAQ,OAAI,CACV,MAAO,OACP,OAAQ,MACV,CAAC,EACD,YAAU,OAAI,CACZ,MAAOA,EAAM,OAAO,KAAK,SAC3B,CAAC,EACD,YAAU,OAAI,CACZ,MAAOA,EAAM,OAAO,KAAK,QAC3B,CAAC,EACD,WAAS,OAAI,CACX,MAAOA,EAAM,OAAO,QAAQ,IAC9B,CAAC,CACH,GC1CW0D,GAAe,CAAC,CAAE,UAAAC,EAAW,KAAAf,EAAM,SAAAhB,EAAU,SAAAE,EAAU,QAAAyB,CAAQ,IAAyB,CACnG,KAAM,CAACK,EAAcC,CAAe,KAAI,YAAkC,CAAC,CAAC,EACtE,CAACC,EAAaC,CAAc,KAAI,YAA6C,CAAC,CAAC,EAC/E,CAAC9C,EAAO+C,CAAQ,KAAI,YAASL,CAAS,EACtC,CAAChB,EAAQsB,CAAS,KAAI,YAA6C,CAAC,CAAC,EACrErE,KAAS,MAAW,EAAS,EAMnC,MAJA,aAAU,IAAM,CACdoE,EAASL,CAAS,CACpB,EAAG,CAACA,CAAS,CAAC,EAEV,CAACA,GAAW,OACd,OAAO,KAGT,MAAMO,GAAa,CAACC,EAAarG,IAAmB,CAClDiG,EAAe,CAAE,GAAGD,EAAa,CAACK,CAAG,EAAKrG,EAAQmD,EAAMkD,CAAG,EAAI,MAAU,CAAC,EAC1EN,EAAgB,CAAE,GAAGD,EAAc,CAACO,CAAG,EAAGrG,CAAM,CAAC,CACnD,EAEMsG,GAAe,CAACD,EAAarG,IAAkB,CACnDiG,EAAe,CAAE,GAAGD,EAAa,CAACK,CAAG,EAAGrG,CAAM,CAAC,CACjD,EAEMuG,GAAUF,GAAgB,CAC9B,MAAMG,EAAUR,EAAYK,CAAG,EAC/B,GAAIG,EAAS,CACX,GAAI,CAACzD,GAAiByD,CAAO,EAAG,CAC9BL,EAAU,CAAE,GAAGtB,EAAQ,CAACwB,CAAG,EAAG,0BAA2B,CAAC,EAC1D,MACF,CACA,MAAMI,GAAWtD,EAAM,IAAI,CAACT,GAAMgE,KACzBA,KAAML,GAAOG,EAAUA,EAAW9D,EAC1C,EACDsB,EAASyC,EAAQ,EACjBV,EAAgB,CAAE,GAAGD,EAAc,CAACO,CAAG,EAAG,EAAM,CAAC,CACnD,CACF,EAEMM,GAAYN,GAAgB,CAChC,MAAMI,EAAWtD,EAAM,MAAM,EAAGkD,CAAG,EAAE,OAAOlD,EAAM,MAAMkD,EAAM,CAAC,CAAC,EAChErC,EAASyC,CAAQ,CACnB,EAEMG,GAAY,IAAM,CACtBb,EAAgB,CAAE,GAAGD,EAAc,CAAC3C,EAAM,MAAM,EAAG,EAAK,CAAC,EACzD+C,EAAS/C,EAAM,OAAO,EAAE,CAAC,CAC3B,EAEM0D,EAAYR,GAAgB,CAChCD,GAAWC,EAAK,EAAK,EACjBA,IAAQlD,EAAM,OAAS,GAAK,CAACA,EAAMkD,CAAG,GAExCH,EAAS/C,EAAM,MAAM,EAAG,EAAE,CAAC,CAE/B,EAEA,SACE,oBACE,qBAAC,MAA2B,KAAK,MAC/B,oBAAC,MACC,mBAACqC,GAAS,CAAC,KAAAV,EAAY,QAAAW,CAAA,CAAkB,EAC3C,KACA,OAAC,OAAG,KACJ,OAAC,MACC,mBAAC7B,GAAA,CACC,MAAOT,EAAM,CAAC,EACd,UAAW2C,EAAa,CAAC,EACzB,MAAOjB,EAAO,CAAC,EACf,SAAW7E,GAAUsG,GAAa,EAAGtG,CAAK,EAC5C,EACF,KACA,OAAC,MACE,SAAC8D,KAmCA,OAAC,OAAI,UAAWhC,EAAO,YACrB,mBAACyD,EAAA,GAAM,CAAC,QAAQ,mBAAmB,KAAK,KAAK,KAAK,MAAO,GAC3D,KApCA,QAAC,OAAI,UAAWzD,EAAO,YACpB,UAAAqB,GAAO,SAAW,GAAK,CAAC2C,EAAa,CAAC,MACrC,OAAC,OAAI,UAAWhE,EAAO,YACrB,mBAACgF,GAAA,GACC,KAAK,cACL,QAAQ,eACR,aAAW,gBACX,QAAS,IAAMF,GAAU,EAC3B,EACF,EAEAd,EAAa,CAAC,KAKd,oBACE,oBAAC,OAAI,UAAWhE,EAAO,WACrB,mBAACyD,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,UAAU,QAAS,IAAMgB,GAAO,CAAC,EAAG,gBAE9D,EACF,KACA,OAAC,OAAI,UAAWzE,EAAO,WACrB,mBAACyD,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAAS,IAAMsB,EAAS,CAAC,EAAG,kBAElE,EACF,GACF,KAfA,OAAC,OAAI,UAAW/E,EAAO,WACrB,mBAACgF,GAAA,EAAU,CAAC,KAAK,MAAM,aAAW,iBAAiB,QAAS,IAAMV,GAAW,EAAG,EAAI,EAAG,EACzF,KAeF,OAAC,OAAI,UAAWtE,EAAO,YACrB,mBAACiF,GAAA,EAAY,CAAC,aAAY,cAAe,KAAK,KAAK,UAAW,IAAMJ,GAAS,CAAC,EAAG,EACnF,GACF,CAIA,CAEJ,IArDO,GAAG7B,EAAK,EAAE,IAsDnB,EACC3B,EAAM,OAAS,GACdA,EAAM,MAAM,CAAC,EAAE,IAAI,CAAC6D,EAAUX,OAC5B,QAAC,MAAiC,KAAK,MACrC,oBAAC,OAAG,KACJ,OAAC,MAAG,UAAWvE,EAAO,OAAQ,cAAE,KAChC,OAAC,MACC,mBAAC8B,GAAA,CACC,MAAOoD,EACP,UAAWlB,EAAaO,EAAM,CAAC,EAC/B,MAAOxB,EAAOwB,EAAM,CAAC,EACrB,SAAWrG,IAAUsG,GAAaD,EAAM,EAAGrG,EAAK,EAClD,EACF,KACA,OAAC,MACE,SAAC8D,KAmCA,OAAC,OAAI,UAAWhC,EAAO,YACrB,mBAACyD,EAAA,GAAM,CAAC,QAAQ,mBAAmB,KAAK,KAAK,KAAK,MAAO,GAC3D,KApCA,QAAC,OAAI,UAAWzD,EAAO,YACpB,UAAAuE,IAAQlD,GAAO,OAAS,GAAK,CAAC2C,EAAaO,EAAM,CAAC,MACjD,OAAC,OAAI,UAAWvE,EAAO,YACrB,mBAACgF,GAAA,GACC,KAAK,cACL,QAAQ,eACR,aAAW,gBACX,QAAS,IAAMF,GAAU,EAC3B,EACF,EAEAd,EAAaO,EAAM,CAAC,KAKpB,oBACE,oBAAC,OAAI,UAAWvE,EAAO,WACrB,mBAACyD,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,UAAU,QAAS,IAAMgB,GAAOF,EAAM,CAAC,EAAG,gBAEpE,EACF,KACA,OAAC,OAAI,UAAWvE,EAAO,WACrB,mBAACyD,EAAA,GAAM,CAAC,KAAK,KAAK,QAAQ,YAAY,QAAS,IAAMsB,EAASR,EAAM,CAAC,EAAG,kBAExE,EACF,GACF,KAfA,OAAC,OAAI,UAAWvE,EAAO,WACrB,mBAACgF,GAAA,EAAU,CAAC,KAAK,MAAM,aAAW,iBAAiB,QAAS,IAAMV,GAAWC,EAAM,EAAG,EAAI,EAAG,EAC/F,KAeF,OAAC,OAAI,UAAWvE,EAAO,YACrB,mBAACiF,GAAA,EAAY,CAAC,aAAY,cAAe,KAAK,KAAK,UAAW,IAAMJ,GAASN,EAAM,CAAC,EAAG,EACzF,GACF,CAIA,CAEJ,IAnDO,GAAGvB,EAAK,EAAE,IAAIuB,EAAM,CAAC,EAoD9B,CACD,GACL,CAEJ,EAEM,GAAanE,IACV,CACL,cAAY,OAAI,CACd,QAAS,OACT,WAAY,SACZ,WAAYA,EAAM,QAAQ,CAAC,CAC7B,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,WAAY,SACZ,WAAYA,EAAM,QAAQ,CAAC,EAC3B,YAAaA,EAAM,QAAQ,EAAG,CAChC,CAAC,EACD,eAAa,OAAI,CACf,QAAS,OACT,eAAgB,MAChB,WAAY,QACd,CAAC,EACD,UAAQ,OAAI,CACV,MAAOA,EAAM,OAAO,KAAK,SAC3B,CAAC,CACH,G,gBC/MK,SAAS+E,GAAYC,EAAgC,CAC1D,MAAO,OAAOC,GAAa,CACzB,MAAMC,EAAiB,QAAM,MAAc,EAAE,IAAI,uBAAuBF,CAAG,aAAa,EACxFC,KAAS,OAAeC,CAAc,CAAC,CACzC,CACF,CAEO,SAASC,GAAoBH,EAAaI,EAAyC,CACxF,MAAO,OAAOH,GAAa,CACzB,QAAM,MAAc,EAAE,IAAI,uBAAuBD,CAAG,cAAe,CAAE,GAAGI,CAAK,CAAC,EAC9EH,EAASF,GAAYC,CAAG,CAAC,CAC3B,CACF,CCYA,SAASK,GAAgBC,EAA6B,CACpD,MAAO,CACL,eAAgBA,EAAM,UAAU,cAClC,CACF,CAEA,MAAMC,GAAqB,CACzB,YAAW,GACX,oBAAmB,EACrB,EAEaC,MAAY,WAAQH,GAAiBE,EAAkB,EAGvDE,GAA4B,CAAC,CACxC,eAAAP,EACA,iBAAAQ,EACA,SAAAC,EACA,iBAAAC,EACA,YAAAb,EACA,oBAAAI,EACA,MAAA/D,CACF,IAAa,CACX,KAAM,CAACF,EAAO2E,CAAQ,KAAI,YAAyD,CAAC,CAAC,EAC/E,CAACC,EAAcC,CAAe,KAAI,YAAS,EAAK,EAChD,CAACC,EAAkBC,CAAmB,KAAI,YAAsB,IAAI,GAAa,EACjF,CAACC,EAA4BC,EAA6B,KAAI,YAAsB,IAAI,GAAa,EACrG,CAACC,GAAkBC,EAAmB,KAAI,YAAsB,IAAI,GAAa,EACjF,CAACC,GAAiCC,EAAiC,KAAI,YAAsB,IAAI,GAAa,EAC9GC,KAAgB,WAAQ,IAAMtB,GAAgB,OAAS,CAAC,EAAG,CAACA,GAAgB,KAAK,CAAC,EAClFtF,KAAS,MAAW,EAAS,EAC7B,CAAC6G,EAAsBC,EAAuB,KAAI,YAAS,EAAK,KAEtE,aAAU,IAAM,CACd3B,EAAYW,EAAiB,GAAG,CAClC,EAAG,CAACA,EAAiB,IAAKX,CAAW,CAAC,KAEtC,aAAU,IAAM,EACK,SAAY,CAC7B,MAAM4B,EAAUH,EAAc,IAAKI,GAAMA,EAAE,MAAM,EACjD,GAAI,CAACD,GAAS,OACZ,OAMF,MAAMzF,IAFS,QAAM,MAAc,EAAE,IAAI,oBAAqB,CAAE,OAAQyF,CAAQ,CAAC,IAC9C,OACV,IAAK/D,IAAU,CACtC,GAAIA,EAAK,GACT,MAAOA,EAAK,GACZ,OAAQA,EAAK,GACb,KAAMA,EAAK,KACX,UAAWA,EAAK,SAClB,EAAE,EACFiD,EAAS3E,CAAK,CAChB,GACW,CACb,EAAG,CAACsF,CAAa,CAAC,KAElB,aAAU,IAAM,CACd,GAAI,CAACpF,GAAO,OACV,OAEF,MAAMyF,EAAY,IAAI,IAAIL,EAAc,IAAKI,GAAMA,EAAE,MAAM,CAAC,EACtDE,EAAgB,IAAI,IAAI1F,EAAM,IAAKwF,GAAMA,EAAE,MAAM,CAAC,EAClDG,EAAuC,IAAI,IAAI3F,EAAM,OAAQwF,GAAMA,EAAE,gBAAgB,EAAE,IAAKA,GAAMA,EAAE,EAAE,CAAC,EACvGI,EAA6B,IAAI,IACrC5F,EACG,OAAQwF,GAAM,OAAOA,EAAE,aAAgB,UAAYA,EAAE,YAAY,KAAK,IAAM,IAAMA,EAAE,aAAe,OAAO,EAC1G,IAAKA,GAAMA,EAAE,WAAqB,CACvC,EAEMK,EAAgC,IAAI,IACxC,MAAM,KAAKH,CAAa,EACrB,OAAQI,GAAMA,IAAM,QAAa,CAACL,EAAU,IAAIK,EAAE,SAAS,CAAC,CAAC,EAC7D,IAAKA,GAAMA,GAAG,SAAS,GAAK,EAAE,CACnC,EACMZ,EAAkC,IAAI,IAC1C,MAAM,KAAKO,CAAS,EAAE,OAAQK,GAAMA,GAAK,CAACJ,EAAc,IAAI,OAAOI,CAAC,CAAC,CAAC,CACxE,EAEIZ,GACFC,GAAkCD,CAA+B,EAE/DW,GACFZ,GAAoBY,CAAgB,EAElCF,GACFZ,GAA8BY,CAAuB,EAEnDC,GACFf,EAAoBe,CAAa,CAErC,EAAG,CAAC5F,EAAOoF,CAAa,CAAC,EAEzB,MAAMW,MAA2B,eAC/B,MAAOlG,GAAsB,CAC3B,MAAMkE,EAAoBO,EAAiB,IAAK,CAAE,MAAAzE,CAAM,CAAC,EACzD,MAAM2E,EAAiB,CACzB,EACA,CAACF,EAAiB,IAAKE,EAAkBT,CAAmB,CAC9D,EAEMiC,GAAe,MAAO,CAAE,KAAAxE,EAAM,KAAApC,CAAK,IAAoB,CAC3D,IAAI6G,EAA2B,CAAC,EACNb,EAAc,KAAM7C,GAAcA,EAAU,SAAWf,EAAK,SAAS,CAAC,EAE9FyE,EAAeb,EAAc,IAAK7C,GAC5BA,EAAU,SAAWf,EAAK,SAAS,EAC9B,CAAE,GAAGe,EAAW,MAAO,CAAC,GAAGA,EAAU,MAAOjD,GAAeF,CAAI,CAAC,CAAE,EAEpE,CAAE,GAAGmD,CAAU,CACvB,EAED0D,EAAeb,EAAc,OAAO,CAAE,OAAQ5D,EAAK,SAAS,EAAG,MAAO,CAAClC,GAAeF,CAAI,CAAC,CAAE,CAAC,EAEhG,MAAM2G,GAAyBE,CAAY,EAC3CtB,EAAgB,EAAK,CACvB,EAEMuB,GAAgB,MAAOC,EAAgBF,IAA2B,CACtE,MAAMG,EAAmBhB,EAAc,IAAKI,GACtCA,EAAE,SAAWW,EACR,CAAE,GAAGX,EAAG,MAAOS,CAAa,EAE9BT,CACR,EACD,MAAMO,GAAyBK,CAAgB,CACjD,EAEMC,GAAU,KAAW,cAAc,sBAAkB,2BAA2B,GAAK,CAAC9B,EACtF+B,GAAkBnG,GAA6B,CACnD,GAAIA,EAAK,OACP,OAAOA,EAAK,UACP,GAAIA,EAAK,OACd,OAAOA,EAAK,KACP,GAAIA,EAAK,YACd,OAAOA,EAAK,WAGhB,EACA,SACE,QAACkC,EAAA,EAAG,CAAC,cAAe,EACjB,UAAAkC,MAAY,OAACgC,GAAA,EAAyB,EAAC,KACxC,QAAC7E,EAAA,EAAK,CAAC,UAAU,SAAS,IAAK,EAC7B,qBAACtE,EAAA,GACC,MAAM,cACN,YAAY,oGAEV,WAAA8H,GAAgC,KAAO,GACvCF,GAAiB,KAAO,GACxBF,EAA2B,KAAO,GAClCF,EAAiB,KAAO,GACxBQ,EAAc,OAAS,OACrB,QAAC/C,EAAA,EAAG,CAAC,aAAc,EACjB,oBAACmE,GAAA,GACC,MACEnB,EACE,yCAEA,QAAC3D,EAAA,EAAK,CAAC,UAAU,MAAM,WAAW,SAAS,IAAK,EAC9C,oBAACX,EAAA,EAAO,CAAC,QAAQ,wBACf,mBAACC,EAAA,EAAI,CAAC,KAAK,uBAAuB,UAAWxC,EAAO,QAAS,EAC/D,KACA,OAAC,QAAK,+CAAmC,GAC3C,EAGJ,OAAQ6G,EACR,SAAU,IAAMC,GAAwB,CAACD,CAAoB,EAC/D,EACCA,MACC,QAACoB,GAAA,EAAK,CAAC,MAAM,iCAAiC,SAAS,UACrD,oBAAC,KAAE,iFAAqE,KACxE,QAAC,MAAG,UAAWjI,EAAO,YACnB,UAAA0G,GAAgC,KAAO,MACtC,QAAC,MACC,oBAAC,UAAO,kCAAsB,EAAS,sJAEvC,OAAC,MACE,eAAM,KAAKA,EAA+B,EAAE,IAAK1D,GAAS,CACzD,MAAMkF,EAAW5G,GAAO,KAAMiC,GAAMA,EAAE,IAAI,SAAS,IAAMP,CAAI,GAAG,KAChE,SACE,OAAC,MAAG,UAAWhD,EAAO,YACnB,SAAAkI,CAAA,EADqClF,CAExC,CAEJ,CAAC,EACH,GACF,EAEDwD,GAAiB,KAAO,MACvB,QAAC,MACC,oBAAC,UAAO,gCAAoB,EAAS,mFAErC,OAAC,MACE,eAAM,KAAKA,EAAgB,EAAE,IAAKxD,GAAS,CAC1C,MAAM4B,EAAIpD,GAAO,KAAM+B,GAAMA,EAAE,QAAQ,SAAS,IAAMP,CAAI,EAC1D,OAAK4B,KAIH,OAAC,MAAG,UAAW5E,EAAO,YACnB,SAAA8H,GAAelD,CAAC,GADqB5B,CAExC,EALO,IAOX,CAAC,EACH,GACF,EAEDsD,EAA2B,KAAO,MACjC,QAAC,MACC,oBAAC,UAAO,iBAAK,EAAS,sGACtB,OAAC,MACE,eAAM,KAAKA,CAA0B,EAAE,IAAK6B,GAAmB,CAC9D,MAAMC,EAAO5G,GAAO,KAAM+B,GAAMA,EAAE,KAAO4E,CAAc,EACvD,OAAKC,KAIH,OAAC,MACC,UAAWpI,EAAO,YAElB,6BAAoB8H,GAAeM,CAAI,CAAC,IADnCD,CACsC,EANtC,IAQX,CAAC,EACH,GACF,EAED/B,EAAiB,KAAO,MACvB,QAAC,MACC,oBAAC,UAAO,uCAA2B,EAAS,sEAE5C,OAAC,MACE,eAAM,KAAKA,CAAgB,EAAE,IAAKiC,MAC1B,OAAC,MAAG,UAAWrI,EAAO,YAAyB,kBAASqI,CAAI,IAApBA,CAAuB,CACvE,EACH,GACF,GAEJ,GACF,GAEJ,KAEJ,QAACnF,EAAA,EAAK,CAAC,UAAU,SAAS,IAAK,EAC7B,qBAACW,EAAA,EAAG,CACF,oBAAC,MAAG,6CAAiC,KACrC,QAAC,KAAE,iFAED,OAAC,MACC,KAAK,OACL,KAAK,oBACL,QAAQ,YACR,KAAK,KACL,KAAK,0HACL,OAAO,SACP,IAAI,sBACL,uCAED,GACF,GACF,EACCgE,OACC,QAAChE,EAAA,EAAG,CACF,oBAAC,MACC,QAAS,IAAMsC,EAAgB,CAACD,CAAY,EAC5C,KAAMA,EAAe,aAAe,OAEnC,SAAAA,EAAe,iBAAmB,kBACrC,EACCA,MACC,OAACrC,EAAA,EAAG,CAAC,UAAW,EACd,mBAACpB,GAAkB,CAAC,SAAU+E,EAAA,CAAc,EAC9C,GAEJ,GAEJ,GACF,EAEC,IAAC,WAAQZ,CAAa,MACrB,QAAC/C,EAAA,EAAG,CACF,qBAAC,SAAM,UAAW7D,EAAO,MAAO,KAAK,OAAO,kBAAgB,kBAC1D,oBAAC,SACC,oBAAC,MACC,oBAAC,MAAG,MAAO,CAAE,MAAO,KAAM,EAAG,gBAAI,KACjC,OAAC,MAAG,MAAO,CAAE,MAAO,IAAK,EAAG,KAC5B,OAAC,MAAG,0BAAc,KAClB,OAAC,MAAG,MAAO,CAAE,MAAO,IAAK,EAAG,GAC9B,EACF,KACA,OAAC,SACE,SAAA4G,EAAc,IAAI,CAAC7C,EAAWQ,IAAQ,CACrC,MAAMlD,EAAQ0C,EAAU,MAClB4D,EAAS5D,EAAU,OACzB,IAAIJ,EAAU,GACd,OAAI+C,GAAgC,IAAI3C,EAAU,MAAM,IACtDJ,EAAU,0EAGV,OAACG,GAAA,CAEC,UAAWzC,EACX,SAAU,CAACwG,GACX,KACEvG,EAAM,KAAMiC,GAAMA,EAAE,IAAI,SAAS,IAAMoE,CAAM,GAAK,CAChD,GAAI,OAAOA,CAAM,EACjB,KAAM,GACN,UAAW,EACb,EAEF,SAAWF,GAAiBC,GAAcC,EAAQF,CAAY,EAC9D,QAAA9D,CAAA,EAXKY,CAYP,CAEJ,CAAC,EACH,GACF,KACA,OAACV,EAAA,EAAG,CAAC,UAAW,EACd,mBAACyE,GAAA,EAAI,CAAC,QAAQ,YAAY,MAAM,YAAY,4JAG5C,EACF,GACF,GAEJ,GACF,CAEJ,EAEM,GAAalI,IACV,CACL,WAAS,OAAI,CACX,GAAGA,EAAM,WAAW,UACpB,MAAOA,EAAM,OAAO,QAAQ,IAC9B,CAAC,EACD,eAAa,OAAI,CACf,GAAGA,EAAM,WAAW,UACpB,kBAAmB,SACnB,WAAYA,EAAM,QAAQ,CAAC,CAC7B,CAAC,EACD,SAAO,OAAI,CACT,GAAGA,EAAM,WAAW,UACpB,MAAO,OACP,eAAgB,WAChB,aAAc,CACZ,QAASA,EAAM,QAAQ,CAAC,EACxB,aAAc,aAAaA,EAAM,OAAO,OAAO,IAAI,EACrD,EACA,OAAQ,CACN,UAAW,OACX,WAAYA,EAAM,WAAW,gBAC/B,CACF,CAAC,CACH,GAGWmI,GAAiB3C,GAAUC,EAAyB,EC/WjE,SAAS,GAAgBH,EAA6B1G,EAAsB,CAC1E,KAAM,CAAE,IAAAoG,CAAI,EAAIpG,EAChB,MAAO,CACL,WAAYoG,EACZ,iBAAkBM,EAAM,YAAY,WACpC,eAAgBA,EAAM,UAAU,cAClC,CACF,CAEA,MAAM,GAAqB,CACzB,eAAc,KACd,mBAAkB,KAClB,iBAAgB,IAClB,EA8EA,MA5EyB,WAAQ,GAAiB,EAAkB,EAItC,CAAC,CAC7B,WAAA8C,EACA,iBAAA1C,EACA,eAAAR,EACA,eAAAmD,EACA,mBAAAC,EACA,iBAAAC,CACF,IAAa,IACX,aAAU,IAAM,CACdF,EAAeD,CAAU,CAC3B,EAAG,CAACA,EAAYC,CAAc,CAAC,EAE/B,MAAMG,EAAoB,KAAW,wBACnC,sBAAkB,4BAClB9C,CACF,KAEA,aAAU,IAAM,CAEd2C,EAAeD,CAAiB,EAAE,KAAKE,CAAkB,CAC3D,EAAG,CAACD,EAAgBC,EAAoBF,CAAU,CAAC,EAEnD,MAAMxC,EAAmB,IAAM,CAC7ByC,EAAeD,CAAU,CAC3B,EAEMK,EAAkB,IACdrH,GAAgC,CACtC,GAAI,CAACsH,GAAgB,CAACxD,GAAgB,OAAO,OAC3C,OAAO9D,EAET,MAAMuH,GAAsB3H,GAAuBkE,GAAgB,KAAK,EACxE,OAAO/D,GAAoBwH,GAAqBvH,CAAK,CACvD,EAGI,CAAE,SAAAuE,EAAU,eAAAiD,CAAe,KAAI,MAAoBlD,EAAiB,GAAG,EACvEgD,EAAeG,EAAA,EAAO,eAAe,iBAAmBxI,GAAeqF,CAAgB,EACvFoD,EAAenD,GAAY,CAAC6C,GAAqB,CAACI,EAExD,SACE,QAAC9F,EAAA,EAAK,CAAC,UAAW,SAAU,IAAK,EAC9B,mBAAe,MACd,OAACiG,EAAA,IACC,UAAW,0BACX,aAAc,QACd,YAAa,0BACb,KAAM,4EACR,KAEF,OAAC,KACC,SAAS,cACT,WAAAX,EACA,kBAAAI,EACA,YAAaE,EAAeD,EAAgB,EAAI,OAChD,SACEC,EACKtH,MACC,OAAC+G,GAAA,CACC,iBAAAzC,EACA,SAAUoD,EACV,iBAAAlD,EACA,MAAAxE,CAAA,CACF,EAEF,OAER,GACF,CAEJ,CAE8C,C,wEC/GvC,MAAM4H,EACX,yIAEK,SAASrB,GAA4B,CAC1C,SACE,OAAC,IAAK,CAAC,cAAa,KAAa,MAAM,WAAW,SAAU,SAAS,OAAO,MAAM,0BAC/E,SAAAqB,CAAA,CACH,CAEJ,C,2DCLO,MAAMC,KAA2B,iBAAiC,GAAkB,C,+QCmBpF,MAAMC,EAA6BlE,GAAgB,CACxD,MAAMC,KAAW,eAAY,KAE7B,aAAU,KACRA,KAAS,MAAuBD,CAAG,CAAC,EAE7B,UAAmB,CACxBC,KACE,KAAc,CACZ,cAAgBK,GAAWA,EAAM,mBAAqB,IACxD,CAAC,CACH,CACF,GACC,CAACN,EAAKC,CAAQ,CAAC,CACpB,EAEakE,EAAqBnE,GAAgB,CAChD,MAAMC,KAAW,eAAY,EACvBmE,EAAoBC,EAAqB,EAE/C,MAAO,IAAMpE,KAAS,MAAeD,EAAKoE,EAAkB,IAAI,CAAC,CACnE,EAEaE,EAAqB,IAAM,CACtC,MAAMrE,KAAW,eAAY,EACvBsE,KAAY,eAAajE,GAAUA,EAAM,YAAY,oBAAoB,EACzEkE,KAAc,eAAalE,GAAUA,EAAM,YAAY,WAAW,EAExE,sBAAU,IAAM,CACdL,KAAS,MAAgB,CAAC,CAC5B,EAAG,CAACA,CAAQ,CAAC,EAEN,CAAE,UAAAsE,EAAW,YAAAC,CAAY,CAClC,EAEaC,EAAqBzE,GAAgB,CAChD,MAAMC,EAAW,YAAY,EAE7B,UAAU,IAAM,CACdA,EAAS,eAAeD,CAAG,CAAC,CAC9B,EAAG,CAACC,EAAUD,CAAG,CAAC,CACpB,EAEa0E,EAA2B,IAAM,CAC5C,MAAMzE,KAAW,eAAY,KAE7B,aAAU,IAAM,CACdA,KAAS,MAAsB,CAAC,CAClC,EAAG,CAACA,CAAQ,CAAC,CACf,EAEa0E,EAAmB,IAAM,CACpC,MAAM1E,KAAW,eAAY,EACvBmE,EAAoBC,EAAqB,EAE/C,OAAQO,GAAiC,CACvC3E,KAAS,MAAc2E,EAAQR,EAAkB,IAAI,CAAC,CACxD,CACF,EAEaS,GAAsB,IAAM,CACvC,MAAM5E,KAAW,eAAY,EAE7B,MAAO,OAAO6E,GAAmC7E,KAAS,MAAiB6E,CAAU,CAAC,CACxF,EAEaC,EAA4B,IAAM,CAC7C,MAAM9E,KAAW,eAAY,EACvB,CAAE,KAAA+E,CAAK,KAAI,eAAa1E,GAAUA,EAAM,YAAY,UAAU,EAEpE,MAAO,IAAM,CACX,IAAU,QACR,IAAI,KAAsB,CACxB,MAAO,SACP,KAAM,wCAAwC0E,CAAI,iBAClD,QAAS,SACT,KAAM,YACN,UAAW,IAAM/E,KAAS,MAAuB,CAAC,CACpD,CAAC,CACH,CACF,CACF,EAEagF,EAAiBjF,MACrB,eAAaM,MAAU,MAAcA,EAAM,YAAaN,CAAG,CAAC,EAGxDkF,GAA2BlF,GAAgB,CACtD,MAAM8E,EAAaG,EAAcjF,CAAG,EACpC,SAAO,KAA8B8E,CAAU,CACjD,EAEaK,EAAqBC,MACzB,eAAa9E,MAAU,MAAkBA,EAAM,YAAa8E,CAAU,CAAC,EAGnEC,GAAwB,OAC5B,eAAa/E,GAAUA,EAAM,kBAAkB,EAG3CgF,GAAuBtF,GAAkC,CACpE,MAAM8E,EAAaG,EAAcjF,CAAG,EAC9BW,EAAWmE,EAAW,WAAa,GACnClB,EAAiB,KAAW,wBAAwB,sBAAoB,iBAAkBkB,CAAU,EACpGS,EAAkB,KAAW,wBAAwB,sBAAoB,kBAAmBT,CAAU,EAE5G,MAAO,CACL,SAAAnE,EACA,eAAAiD,EACA,gBAAA2B,CACF,CACF,EAEalB,EAAuB,OAC3B,cAAW,GAAwB,C,8dC1IrC,MAAMmB,EAAiCV,GAA2D,CACvG,MAAMW,EAAe,KAAK,UAAU,CAAE,WAAYX,EAAW,KAAM,QAAS,SAAU,CAAC,EAGvF,OAFmB,KAAQ,UAAU,IAAa,cAAc,UAAU,EAAG,CAAE,KAAMW,CAAa,CAAC,CAGrG,C","sources":["webpack://grafana/./node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/ConfigSection.js","webpack://grafana/./node_modules/@grafana/experimental/dist/esm/ConfigEditor/ConfigSection/GenericConfigSection.js","webpack://grafana/./node_modules/@grafana/experimental/dist/esm/VisualQueryBuilder/components/RawQuery.js","webpack://grafana/./public/app/extensions/teamLBAC/utils.ts","webpack://grafana/./public/app/extensions/teamLBAC/EditableCell.tsx","webpack://grafana/./public/app/extensions/teamLBAC/AddTeamLBACForm.tsx","webpack://grafana/./public/app/extensions/teamLBAC/TeamLabel.tsx","webpack://grafana/./public/app/extensions/teamLBAC/TeamRulesRow.tsx","webpack://grafana/./public/app/extensions/teamLBAC/state/actions.ts","webpack://grafana/./public/app/extensions/teamLBAC/TeamLBACEditor.tsx","webpack://grafana/./public/app/extensions/permissions/DataSourcePermissions.tsx","webpack://grafana/./public/app/features/datasources/components/DataSourceReadOnlyMessage.tsx","webpack://grafana/./public/app/features/datasources/state/contexts.ts","webpack://grafana/./public/app/features/datasources/state/hooks.ts","webpack://grafana/./public/app/features/datasources/utils.ts"],"sourcesContent":["import React from 'react';\nimport { GenericConfigSection } from './GenericConfigSection.js';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst ConfigSection = (_a) => {\n  var _b = _a, { children } = _b, props = __objRest(_b, [\"children\"]);\n  return /* @__PURE__ */ React.createElement(GenericConfigSection, __spreadProps(__spreadValues({}, props), { kind: \"section\" }), children);\n};\n\nexport { ConfigSection };\n//# sourceMappingURL=ConfigSection.js.map\n","import React, { useState } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, IconButton } from '@grafana/ui';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst GenericConfigSection = ({\n  children,\n  title,\n  description,\n  isCollapsible = false,\n  isInitiallyOpen = true,\n  kind = \"section\",\n  className\n}) => {\n  const { colors, typography, spacing } = useTheme2();\n  const [isOpen, setIsOpen] = useState(isCollapsible ? isInitiallyOpen : true);\n  const iconName = isOpen ? \"angle-up\" : \"angle-down\";\n  const isSubSection = kind === \"sub-section\";\n  const collapsibleButtonAriaLabel = `${isOpen ? \"Collapse\" : \"Expand\"} section ${title}`;\n  const styles = {\n    header: css({\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    }),\n    title: css({\n      margin: 0\n    }),\n    subtitle: css({\n      margin: 0,\n      fontWeight: typography.fontWeightRegular\n    }),\n    descriptionText: css(__spreadProps(__spreadValues({\n      marginTop: spacing(isSubSection ? 0.25 : 0.5),\n      marginBottom: 0\n    }, typography.bodySmall), {\n      color: colors.text.secondary\n    })),\n    content: css({\n      marginTop: spacing(2)\n    })\n  };\n  return /* @__PURE__ */ React.createElement(\"div\", { className }, /* @__PURE__ */ React.createElement(\"div\", { className: styles.header }, kind === \"section\" ? /* @__PURE__ */ React.createElement(\"h3\", { className: styles.title }, title) : /* @__PURE__ */ React.createElement(\"h6\", { className: styles.subtitle }, title), isCollapsible && /* @__PURE__ */ React.createElement(\n    IconButton,\n    {\n      name: iconName,\n      onClick: () => setIsOpen(!isOpen),\n      type: \"button\",\n      size: \"xl\",\n      \"aria-label\": collapsibleButtonAriaLabel\n    }\n  )), description && /* @__PURE__ */ React.createElement(\"p\", { className: styles.descriptionText }, description), isOpen && /* @__PURE__ */ React.createElement(\"div\", { className: styles.content }, children));\n};\n\nexport { GenericConfigSection };\n//# sourceMappingURL=GenericConfigSection.js.map\n","import { cx, css } from '@emotion/css';\nimport Prism from 'prismjs';\nimport React from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nfunction RawQuery({ query, language, className }) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const highlighted = Prism.highlight(query, language.grammar, language.name);\n  return /* @__PURE__ */ React.createElement(\n    \"div\",\n    {\n      className: cx(styles.editorField, \"prism-syntax-highlight\", className),\n      \"aria-label\": \"selector\",\n      dangerouslySetInnerHTML: { __html: textUtil.sanitize(highlighted) }\n    }\n  );\n}\nconst getStyles = (theme) => {\n  return {\n    editorField: css({\n      fontFamily: theme.typography.fontFamilyMonospace,\n      fontSize: theme.typography.bodySmall.fontSize\n    })\n  };\n};\n\nexport { RawQuery };\n//# sourceMappingURL=RawQuery.js.map\n","import { DataSourceJsonData, DataSourceSettings } from '@grafana/data';\nimport { ResourcePermission } from 'app/core/components/AccessControl/types';\nimport { t } from 'app/core/internationalization';\n\nimport { TeamRule } from '../types';\n\nexport const DataSourcesWithLBACSupport = ['loki'];\n\nexport const LBACHTTPHeaderName = 'X-Prom-Label-Policy';\n\nexport function hasLBACSupport(ds: DataSourceSettings<DataSourceJsonData, {}>): boolean {\n  return !!ds.basicAuth && DataSourcesWithLBACSupport.includes(ds.type);\n}\n\nexport function trimLBACRule(rule: string) {\n  const pattern = /\\{([^{}]*)\\}/;\n  const res = pattern.exec(rule);\n  if (res && res.length > 1) {\n    return res[1].trim();\n  }\n  return '';\n}\n\nexport function formatLBACRule(labelSelector: string) {\n  const pattern = /\\{{0,1}([^\\{\\}]*)\\}{0,1}/;\n  const res = pattern.exec(labelSelector);\n  if (res && res.length > 1) {\n    return `{ ${res[1].trim()} }`;\n  }\n  return '';\n}\n\nexport function extractLBACRule(rule: string) {\n  const pattern = /\\w+\\:\\{{0,1}([^\\{\\}]*)\\}{0,1}/;\n  const res = pattern.exec(rule);\n  if (res && res.length > 1) {\n    return res[1].trim();\n  }\n  return '';\n}\n\nexport const validateLBACRule = (str: string): boolean => {\n  if (!str) {\n    return false;\n  }\n  const trimmedStr = str.trim().replace(/^{|}$/g, '');\n  const pattern = /^\\s*(?:\\s*\\w+\\s*(?:=|!=|=~|!~)\\s*\\\"[^\\\"]+\\\"\\s*,*)+\\s*$/;\n  return pattern.test(trimmedStr);\n};\n\nexport const getLBACTeamsConfigured = (rules: TeamRule[]): number[] => {\n  const teams: number[] = [];\n  if (rules.length) {\n    rules.forEach((rule) => {\n      if (Number(rule.teamId)) {\n        teams.push(Number(rule.teamId));\n      }\n    });\n  }\n  return teams;\n};\n\nexport const addTeamLBACWarnings = (\n  teams: number[],\n  items: ResourcePermission[],\n) => {\n  const warningServiceAccount = t(\n    'access-control.permissions.lbac-warning-service-account',\n    'Warning: This service account has full data access if no LBAC rules are set.'\n  );\n  const warningTeam = t(\n    'access-control.permissions.lbac-warning-team',\n    'Warning: This team has full data access if no LBAC rules are set.'\n  );\n  return items.map((item) => {\n    if (item.builtInRole && item.permission !== 'Admin') {\n      const warningBasicRole = t(\n        'access-control.permissions.lbac-warning-basic-role',\n        `Warning: ${item.builtInRole} may have full data access if permission is not removed.`\n      );\n      item.warning = warningBasicRole;\n    } else if (item.isServiceAccount && item.userId) {\n      item.warning = warningServiceAccount;\n    } else if (item.teamId && !teams.includes(item.teamId)) {\n      item.warning = warningTeam;\n    }\n    return { ...item };\n  });\n};\n\nexport const addTeamLBACWarningsToLBACRule = (teams: number[], items: TeamRule[]) => {\n  const warningTeam = t(\n    'access-control.permissions.lbac-warning-rule',\n    'Warning: This team might not have permission to the query the datasource.'\n  );\n  return items.map((item) => {\n    // teamspermissions does not exists\n    // but we have items.teamId\n    if (item.teamId && !teams.includes(Number(item.teamId))) {\n      item.warning = warningTeam;\n    }\n    // check ruleTeamIds does not include any of the teams id\n    return { ...item };\n  });\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { RawQuery } from '@grafana/experimental';\nimport { Icon, Input, Tooltip, useStyles2, useTheme2 } from '@grafana/ui';\nimport lokiGrammar from 'app/plugins/datasource/loki/syntax';\n\nimport { trimLBACRule } from './utils';\n\ninterface Props {\n  value: string;\n  isEditing?: boolean;\n  disabled?: boolean;\n  onChange?: (value: string) => void;\n  error?: string;\n}\n\nexport const EditableCell = ({ isEditing, value, disabled, error, onChange }: Props) => {\n  const [cellValue, setCellValue] = useState(trimLBACRule(value));\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    if (!isEditing) {\n      setCellValue(trimLBACRule(value));\n    }\n  }, [isEditing, value]);\n\n  return (\n    <div className={styles.wrapper}>\n      {isEditing ? (\n        <>\n          <Input\n            className={styles.input}\n            value={cellValue}\n            onChange={(event) => {\n              const value = event.currentTarget.value;\n              setCellValue(value);\n              if (onChange) {\n                onChange(`{ ${value} }`);\n              }\n            }}\n            invalid={!!error}\n            suffix={\n              error && (\n                <Tooltip content={error}>\n                  <Icon name=\"exclamation-triangle\" />\n                </Tooltip>\n              )\n            }\n          />\n        </>\n      ) : (\n        <span style={{ color: disabled ? theme.colors.text.disabled : 'unset' }}>\n          <RawQuery query={value} language={{ grammar: lokiGrammar, name: 'logql' }} />\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      padding: theme.spacing(0, 1),\n    }),\n    input: css({\n      '& input': {\n        fontFamily: theme.typography.fontFamilyMonospace,\n      },\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, Field, Input, Stack, useStyles2 } from '@grafana/ui';\nimport { TeamPicker } from 'app/core/components/Select/TeamPicker';\nimport { Trans } from 'app/core/internationalization';\n\nimport { EditableCell } from './EditableCell';\nimport { validateLBACRule } from './utils';\n\nexport interface LBACFormData {\n  team: number;\n  rule: string;\n}\n\ninterface Props {\n  onSubmit: (data: LBACFormData) => void;\n}\n\nexport const CreateTeamLBACForm: React.FC<Props> = ({ onSubmit }) => {\n  const styles = useStyles2(getStyles);\n  const {\n    handleSubmit,\n    register,\n    control,\n    watch,\n    formState: { errors },\n  } = useForm<LBACFormData>({\n    mode: 'onChange',\n  });\n\n  const team = watch('team');\n  const rule = watch('rule');\n\n  const isValid = () => {\n    return team > 0 && validateLBACRule(rule);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h5 className={styles.heading}>New LBAC Rule</h5>\n      <div className={styles.example}>\n        Example: <EditableCell value='{ cluster=\"us-west-0\", namespace=~\"dev|prod\" }' disabled={true} />\n      </div>\n\n      <form id=\"lbacForm\" onSubmit={handleSubmit(onSubmit)} className={styles.form}>\n        <Stack gap={2} direction=\"column\">\n          <Field label=\"Team\">\n            <Controller\n              render={({ field: { onChange, ref, ...field } }) => (\n                <TeamPicker {...field} onSelected={(t) => onChange(t.value?.id)} className={styles.teamPicker} />\n              )}\n              control={control}\n              name=\"team\"\n              rules={{ required: { value: true, message: 'Required' } }}\n            />\n          </Field>\n          <Field label=\"Rule\" invalid={!!errors.rule} error={errors?.rule?.message}>\n            <Input\n              className={styles.input}\n              type=\"text\"\n              {...register('rule', {\n                required: 'Rule is required',\n                validate: (val) => validateLBACRule(val) || 'Invalid LBAC rule syntax',\n              })}\n              placeholder='{ cluster=\"us-west-0\", namespace=~\"dev|prod\" }'\n              invalid={!!errors.rule}\n            />\n          </Field>\n          <div className={styles.buttonContainer}>\n            <Button type=\"submit\" disabled={!isValid()}>\n              <Trans i18nKey=\"access-control.add-permissions.save\">Save</Trans>\n            </Button>\n          </div>\n        </Stack>\n      </form>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      padding: theme.spacing(2),\n    }),\n    heading: css({\n      color: theme.colors.text.primary,\n      margin: `0 0 ${theme.spacing(2)} 0`,\n      fontSize: theme.typography.h5.fontSize,\n    }),\n    example: css({\n      marginBottom: theme.spacing(2),\n      color: theme.colors.text.secondary,\n      fontSize: theme.typography.size.sm,\n    }),\n    form: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(2),\n      width: '100%',\n      maxWidth: '500px',\n    }),\n    input: css({\n      width: '100%',\n      '& input': {\n        fontFamily: theme.typography.fontFamilyMonospace,\n        width: '100%',\n      },\n    }),\n    teamPicker: css({\n      width: '100%',\n    }),\n    buttonContainer: css({\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginTop: theme.spacing(2),\n    }),\n  };\n};\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Avatar, Box, Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { Team } from 'app/types';\n\ninterface Props {\n  team?: Partial<Pick<Team, 'name' | 'avatarUrl' | 'id'>>;\n  disabled?: boolean;\n  warning?: string;\n}\n\nexport const TeamLabel = ({ team, disabled, warning }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  if (!team) {\n    return <></>;\n  }\n\n  // Show placeholder if team not found\n  if (!team.name && !team.avatarUrl) {\n    return <span className={styles.notFound}>Team with id {team.id} not found</span>;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {team.avatarUrl && <Avatar src={team.avatarUrl} alt=\"\" />}\n      <span className={cx(styles.label, { [styles.disabled]: disabled })}>{team.name}</span>\n      {warning && (\n        <Tooltip content={<Box>{warning}</Box>}>\n          <Icon name=\"exclamation-triangle\" className={styles.warning} />\n        </Tooltip>\n      )}\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css({\n      display: 'flex',\n      alignItems: 'center',\n    }),\n    label: css({\n      overflow: 'hidden',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    }),\n    avatar: css({\n      width: '24px',\n      height: '24px',\n    }),\n    notFound: css({\n      color: theme.colors.text.secondary,\n    }),\n    disabled: css({\n      color: theme.colors.text.disabled,\n    }),\n    warning: css({\n      color: theme.colors.warning.main,\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, DeleteButton, IconButton, useStyles2 } from '@grafana/ui';\nimport { Team } from 'app/types';\n\nimport { EditableCell } from './EditableCell';\nimport { TeamLabel } from './TeamLabel';\nimport { validateLBACRule } from './utils';\n\ninterface TeamRulesRowProps {\n  teamRules: string[];\n  team: Pick<Team, 'name' | 'avatarUrl' | 'id'>;\n  disabled?: boolean;\n  onChange: (teamRules: string[]) => void;\n  warning?: string;\n}\n\nexport const TeamRulesRow = ({ teamRules, team, disabled, onChange, warning }: TeamRulesRowProps) => {\n  const [rulesEditing, setRulesEditing] = useState<Record<number, boolean>>({});\n  const [rulesValues, setRulesValues] = useState<Record<number, string | undefined>>({});\n  const [rules, setRules] = useState(teamRules);\n  const [errors, setErrors] = useState<Record<number, string | undefined>>({});\n  const styles = useStyles2(getStyles);\n\n  useEffect(() => {\n    setRules(teamRules);\n  }, [teamRules]);\n\n  if (!teamRules?.length) {\n    return null;\n  }\n\n  const onRuleEdit = (idx: number, value: boolean) => {\n    setRulesValues({ ...rulesValues, [idx]: !!value ? rules[idx] : undefined });\n    setRulesEditing({ ...rulesEditing, [idx]: value });\n  };\n\n  const onRuleChange = (idx: number, value: string) => {\n    setRulesValues({ ...rulesValues, [idx]: value });\n  };\n\n  const onSave = (idx: number) => {\n    const newRule = rulesValues[idx];\n    if (newRule) {\n      if (!validateLBACRule(newRule)) {\n        setErrors({ ...errors, [idx]: 'Invalid LBAC rule syntax' });\n        return;\n      }\n      const newRules = rules.map((rule, i) => {\n        return i === idx && newRule ? newRule! : rule;\n      });\n      onChange(newRules);\n      setRulesEditing({ ...rulesEditing, [idx]: false });\n    }\n  };\n\n  const onDelete = (idx: number) => {\n    const newRules = rules.slice(0, idx).concat(rules.slice(idx + 1));\n    onChange(newRules);\n  };\n\n  const onAddRule = () => {\n    setRulesEditing({ ...rulesEditing, [rules.length]: true });\n    setRules(rules.concat(''));\n  };\n\n  const onCancel = (idx: number) => {\n    onRuleEdit(idx, false);\n    if (idx === rules.length - 1 && !rules[idx]) {\n      // Handle cancel when adding new rule\n      setRules(rules.slice(0, -1));\n    }\n  };\n\n  return (\n    <>\n      <tr key={`${team.id}-${0}`} role=\"row\">\n        <td>\n          <TeamLabel team={team} warning={warning} />\n        </td>\n        <td></td>\n        <td>\n          <EditableCell\n            value={rules[0]}\n            isEditing={rulesEditing[0]}\n            error={errors[0]}\n            onChange={(value) => onRuleChange(0, value)}\n          />\n        </td>\n        <td>\n          {!disabled ? (\n            <div className={styles.buttonsCell}>\n              {rules?.length === 1 && !rulesEditing[0] && (\n                <div className={styles.buttonRight}>\n                  <IconButton\n                    name=\"plus-circle\"\n                    tooltip=\"Add new rule\"\n                    aria-label=\"add team rule\"\n                    onClick={() => onAddRule()}\n                  />\n                </div>\n              )}\n              {!rulesEditing[0] ? (\n                <div className={styles.editButton}>\n                  <IconButton name=\"pen\" aria-label=\"edit team rule\" onClick={() => onRuleEdit(0, true)} />\n                </div>\n              ) : (\n                <>\n                  <div className={styles.editButton}>\n                    <Button size=\"sm\" variant=\"primary\" onClick={() => onSave(0)}>\n                      Save\n                    </Button>\n                  </div>\n                  <div className={styles.editButton}>\n                    <Button size=\"sm\" variant=\"secondary\" onClick={() => onCancel(0)}>\n                      Cancel\n                    </Button>\n                  </div>\n                </>\n              )}\n              <div className={styles.buttonRight}>\n                <DeleteButton aria-label={'Delete rule'} size=\"sm\" onConfirm={() => onDelete(0)} />\n              </div>\n            </div>\n          ) : (\n            <div className={styles.buttonsCell}>\n              <Button tooltip=\"Provisioned rule\" size=\"sm\" icon=\"lock\" />\n            </div>\n          )}\n        </td>\n      </tr>\n      {rules.length > 1 &&\n        rules.slice(1).map((teamRule, idx) => (\n          <tr key={`${team.id}-${idx + 1}`} role=\"row\">\n            <td></td>\n            <td className={styles.ruleOr}>OR</td>\n            <td>\n              <EditableCell\n                value={teamRule}\n                isEditing={rulesEditing[idx + 1]}\n                error={errors[idx + 1]}\n                onChange={(value) => onRuleChange(idx + 1, value)}\n              />\n            </td>\n            <td>\n              {!disabled ? (\n                <div className={styles.buttonsCell}>\n                  {idx === rules?.length - 2 && !rulesEditing[idx + 1] && (\n                    <div className={styles.buttonRight}>\n                      <IconButton\n                        name=\"plus-circle\"\n                        tooltip=\"Add new rule\"\n                        aria-label=\"add team rule\"\n                        onClick={() => onAddRule()}\n                      />\n                    </div>\n                  )}\n                  {!rulesEditing[idx + 1] ? (\n                    <div className={styles.editButton}>\n                      <IconButton name=\"pen\" aria-label=\"edit team rule\" onClick={() => onRuleEdit(idx + 1, true)} />\n                    </div>\n                  ) : (\n                    <>\n                      <div className={styles.editButton}>\n                        <Button size=\"sm\" variant=\"primary\" onClick={() => onSave(idx + 1)}>\n                          Save\n                        </Button>\n                      </div>\n                      <div className={styles.editButton}>\n                        <Button size=\"sm\" variant=\"secondary\" onClick={() => onCancel(idx + 1)}>\n                          Cancel\n                        </Button>\n                      </div>\n                    </>\n                  )}\n                  <div className={styles.buttonRight}>\n                    <DeleteButton aria-label={'Delete rule'} size=\"sm\" onConfirm={() => onDelete(idx + 1)} />\n                  </div>\n                </div>\n              ) : (\n                <div className={styles.buttonsCell}>\n                  <Button tooltip=\"Provisioned rule\" size=\"sm\" icon=\"lock\" />\n                </div>\n              )}\n            </td>\n          </tr>\n        ))}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    editButton: css({\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: theme.spacing(2),\n    }),\n    buttonRight: css({\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(0.5),\n    }),\n    buttonsCell: css({\n      display: 'flex',\n      justifyContent: 'end',\n      alignItems: 'center',\n    }),\n    ruleOr: css({\n      color: theme.colors.text.secondary,\n    }),\n  };\n};\n","import { getBackendSrv } from '@grafana/runtime';\nimport { ThunkResult } from 'app/types';\n\nimport { TeamLBACConfig } from '../../types';\n\nimport { teamLBACLoaded } from './reducers';\n\nexport function getTeamLBAC(uid: string): ThunkResult<void> {\n  return async (dispatch) => {\n    const teamLBACConfig = await getBackendSrv().get(`api/datasources/uid/${uid}/lbac/teams`);\n    dispatch(teamLBACLoaded(teamLBACConfig));\n  };\n}\n\nexport function updateTeamLBACRules(uid: string, data: TeamLBACConfig): ThunkResult<void> {\n  return async (dispatch) => {\n    await getBackendSrv().put(`api/datasources/uid/${uid}/lbac/teams`, { ...data });\n    dispatch(getTeamLBAC(uid));\n  };\n}\n","import { css } from '@emotion/css';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ConnectedProps, connect } from 'react-redux';\n\nimport { DataSourceJsonData, DataSourceSettings, GrafanaTheme2 } from '@grafana/data';\nimport { ConfigSection } from '@grafana/experimental';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Alert, Box, Collapse, Icon, LinkButton, Stack, Text, Tooltip, useStyles2 } from '@grafana/ui';\nimport { ResourcePermission } from 'app/core/components/AccessControl/types';\nimport { contextSrv } from 'app/core/core';\nimport { DataSourceReadOnlyMessage } from 'app/features/datasources/components/DataSourceReadOnlyMessage';\nimport { Team } from 'app/types';\n\nimport { AccessControlAction as EnterpriseActions, EnterpriseStoreState, TeamRule } from '../types';\n\nimport { CreateTeamLBACForm, LBACFormData } from './AddTeamLBACForm';\nimport { TeamRulesRow } from './TeamRulesRow';\nimport { getTeamLBAC, updateTeamLBACRules } from './state/actions';\nimport { formatLBACRule } from './utils';\n\n\n\nexport interface OwnProps {\n  dataSourceConfig: DataSourceSettings<DataSourceJsonData, {}>;\n  readOnly?: boolean;\n  onTeamLBACUpdate: () => Promise<DataSourceSettings> | void;\n  getWarnings?: (items: TeamRule[]) => TeamRule[];\n  items?: ResourcePermission[];\n}\n\nfunction mapStateToProps(state: EnterpriseStoreState) {\n  return {\n    teamLBACConfig: state.teamLBAC?.teamLBACConfig,\n  };\n}\n\nconst mapDispatchToProps = {\n  getTeamLBAC,\n  updateTeamLBACRules,\n};\n\nexport const connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport const TeamLBACEditorUnconnected = ({\n  teamLBACConfig,\n  dataSourceConfig,\n  readOnly,\n  onTeamLBACUpdate,\n  getTeamLBAC,\n  updateTeamLBACRules,\n  items,\n}: Props) => {\n  const [teams, setTeams] = useState<Array<Pick<Team, 'name' | 'avatarUrl' | 'id'>>>([]);\n  const [showLBACForm, setShowLBACForm] = useState(false);\n  const [rolesWithoutLBAC, setRolesWithoutLBAC] = useState<Set<string>>(new Set<string>());\n  const [serviceAccountsWithoutLBAC, setServiceAccountsWithoutLBAC] = useState<Set<number>>(new Set<number>());\n  const [teamsWithoutLBAC, setTeamsWithoutLBAC] = useState<Set<string>>(new Set<string>());\n  const [lbacTeamsWithoutTeamPermissions, setLBACTeamsWithoutTeamPermission] = useState<Set<string>>(new Set<string>());\n  const teamLBACRules = useMemo(() => teamLBACConfig?.rules || [], [teamLBACConfig?.rules]);\n  const styles = useStyles2(getStyles);\n  const [recommendationIsOpen, setRecommendationIsOpen] = useState(false);\n\n  useEffect(() => {\n    getTeamLBAC(dataSourceConfig.uid);\n  }, [dataSourceConfig.uid, getTeamLBAC]);\n\n  useEffect(() => {\n    const fetchTeams = async () => {\n      const teamIds = teamLBACRules.map((r) => r.teamId);\n      if (!teamIds?.length) {\n        return;\n      }\n\n      // TODO: to only get the teams which have query permissions to the datasource\n      const result = await getBackendSrv().get('/api/teams/search', { teamId: teamIds });\n      const teamsArray: Team[] = result?.teams;\n      const teams = teamsArray.map((team) => ({\n        id: team.id,\n        value: team.id,\n        teamId: team.id,\n        name: team.name,\n        avatarUrl: team.avatarUrl,\n      }));\n      setTeams(teams);\n    };\n    fetchTeams();\n  }, [teamLBACRules]);\n\n  useEffect(() => {\n    if (!items?.length) {\n      return;\n    }\n    const lbacTeams = new Set(teamLBACRules.map((r) => r.teamId));\n    const resourceTeams = new Set(items.map((r) => r.teamId));\n    const resourceServiceAccounts: Set<number> = new Set(items.filter((r) => r.isServiceAccount).map((r) => r.id));\n    const resourceRoles: Set<string> = new Set(\n      items\n        .filter((r) => typeof r.builtInRole === 'string' && r.builtInRole.trim() !== '' && r.permission !== 'Admin')\n        .map((r) => r.builtInRole as string) // Assert that r.builtInRole is a string\n    );\n\n    const teamsWithoutLbac: Set<string> = new Set(\n      Array.from(resourceTeams)\n        .filter((x) => x !== undefined && !lbacTeams.has(x.toString()))\n        .map((x) => x?.toString() || '')\n    );\n    const lbacTeamsWithoutTeamPermissions = new Set(\n      Array.from(lbacTeams).filter((x) => x && !resourceTeams.has(Number(x)))\n    );\n\n    if (lbacTeamsWithoutTeamPermissions) {\n      setLBACTeamsWithoutTeamPermission(lbacTeamsWithoutTeamPermissions);\n    }\n    if (teamsWithoutLbac) {\n      setTeamsWithoutLBAC(teamsWithoutLbac);\n    }\n    if (resourceServiceAccounts) {\n      setServiceAccountsWithoutLBAC(resourceServiceAccounts);\n    }\n    if (resourceRoles) {\n      setRolesWithoutLBAC(resourceRoles);\n    }\n  }, [items, teamLBACRules]);\n\n  const onTeamLBACUpdateInternal = useCallback(\n    async (rules: TeamRule[]) => {\n      await updateTeamLBACRules(dataSourceConfig.uid, { rules });\n      await onTeamLBACUpdate();\n    },\n    [dataSourceConfig.uid, onTeamLBACUpdate, updateTeamLBACRules]\n  );\n\n  const onSubmitLBAC = async ({ team, rule }: LBACFormData) => {\n    let updatedRules: TeamRule[] = [];\n    const existingTeamRules = teamLBACRules.find((teamRules) => teamRules.teamId === team.toString());\n    if (existingTeamRules) {\n      updatedRules = teamLBACRules.map((teamRules) => {\n        if (teamRules.teamId === team.toString()) {\n          return { ...teamRules, rules: [...teamRules.rules, formatLBACRule(rule)] };\n        }\n        return { ...teamRules };\n      });\n    } else {\n      updatedRules = teamLBACRules.concat({ teamId: team.toString(), rules: [formatLBACRule(rule)] });\n    }\n    await onTeamLBACUpdateInternal(updatedRules);\n    setShowLBACForm(false);\n  };\n\n  const onRulesUpdate = async (teamId: string, updatedRules: string[]) => {\n    const updatedTeamRules = teamLBACRules.map((r) => {\n      if (r.teamId === teamId) {\n        return { ...r, rules: updatedRules };\n      }\n      return r;\n    });\n    await onTeamLBACUpdateInternal(updatedTeamRules);\n  };\n\n  const canEdit = contextSrv.hasPermission(EnterpriseActions.DataSourcesPermissionsWrite) && !readOnly;\n  const getDescription = (item: ResourcePermission) => {\n    if (item.userId) {\n      return item.userLogin;\n    } else if (item.teamId) {\n      return item.team;\n    } else if (item.builtInRole) {\n      return item.builtInRole;\n    }\n    return;\n  };\n  return (\n    <Box paddingBottom={2}>\n      {readOnly && <DataSourceReadOnlyMessage />}\n      <Stack direction=\"column\" gap={3}>\n        <ConfigSection\n          title=\"Data access\"\n          description=\"Here you can configure access to specific data within the datasource using LogQL label selectors.\"\n        >\n          {(lbacTeamsWithoutTeamPermissions.size > 0 ||\n            teamsWithoutLBAC.size > 0 ||\n            serviceAccountsWithoutLBAC.size > 0 ||\n            rolesWithoutLBAC.size > 0 &&\n            teamLBACRules.length > 0) && (\n              <Box marginBottom={3}>\n                <Collapse\n                  label={\n                    recommendationIsOpen ? (\n                      'Hide Access Control Recommendations'\n                    ) : (\n                      <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                        <Tooltip content=\"Found recommendations\">\n                          <Icon name=\"exclamation-triangle\" className={styles.warning} />\n                        </Tooltip>\n                        <span>Show Access Control Recommendations</span>\n                      </Stack>\n                    )\n                  }\n                  isOpen={recommendationIsOpen}\n                  onToggle={() => setRecommendationIsOpen(!recommendationIsOpen)}\n                />\n                {recommendationIsOpen && (\n                  <Alert title=\"Access Control Recommendations\" severity=\"warning\">\n                    <p>To ensure proper access control, please follow these recommendations:</p>\n                    <ul className={styles.warningList}>\n                      {lbacTeamsWithoutTeamPermissions.size > 0 && (\n                        <li>\n                          <strong>Add Query Permissions:</strong> The following teams do not have query permissions for\n                          the data source, and are therefore not able to query logs with the configured LBAC rules.\n                          <ul>\n                            {Array.from(lbacTeamsWithoutTeamPermissions).map((team) => {\n                              const teamName = teams?.find((t) => t.id?.toString() === team)?.name;\n                              return (\n                                <li className={styles.warningList} key={team}>\n                                  {teamName}\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </li>\n                      )}\n                      {teamsWithoutLBAC.size > 0 && (\n                        <li>\n                          <strong>Add Team LBAC Rules:</strong> The following teams can query all logs. Please add Team\n                          LBAC rules for them:\n                          <ul>\n                            {Array.from(teamsWithoutLBAC).map((team) => {\n                              const i = items?.find((t) => t.teamId?.toString() === team);\n                              if (!i) {\n                                return null;\n                              }\n                              return (\n                                <li className={styles.warningList} key={team}>\n                                  {getDescription(i)}\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </li>\n                      )}\n                      {serviceAccountsWithoutLBAC.size > 0 && (\n                        <li>\n                          <strong>Note:</strong> LBAC rules cannot be applied to service accounts. Consider reviewing their access if necessary.\n                          <ul>\n                            {Array.from(serviceAccountsWithoutLBAC).map((serviceaccount) => {\n                              const sAID = items?.find((t) => t.id === serviceaccount);\n                              if (!sAID) {\n                                return null;\n                              }\n                              return (\n                                <li\n                                  className={styles.warningList}\n                                  key={serviceaccount}\n                                >{`Service Account: ${getDescription(sAID)}`}</li>\n                              );\n                            })}\n                          </ul>\n                        </li>\n                      )}\n                      {rolesWithoutLBAC.size > 0 && (\n                        <li>\n                          <strong>Remove Unrestricted Access:</strong> The following roles currently have unrestricted\n                          access to logs.\n                          <ul>\n                            {Array.from(rolesWithoutLBAC).map((role) => {\n                              return <li className={styles.warningList} key={role}>{`Role: ${role}`}</li>;\n                            })}\n                          </ul>\n                        </li>\n                      )}\n                    </ul>\n                  </Alert>\n                )}\n              </Box>\n            )}\n          <Stack direction=\"column\" gap={2}>\n            <Box>\n              <h4>LBAC (Label-based access control)</h4>\n              <p>\n                Configure LBAC rules to restrict team log queries based on LogQL.\n                <LinkButton\n                  fill=\"text\"\n                  icon=\"external-link-alt\"\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  href=\"https://grafana.com/docs/grafana/latest/administration/data-source-management/teamlbac/create-teamlbac-rules/#lbac-rule\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Learn more about LBAC rules\n                </LinkButton>\n              </p>\n            </Box>\n            {canEdit && (\n              <Box>\n                <LinkButton\n                  onClick={() => setShowLBACForm(!showLBACForm)}\n                  icon={showLBACForm ? 'angle-down' : 'plus'}\n                >\n                  {showLBACForm ? 'Hide LBAC rule' : 'Add a LBAC rule'}\n                </LinkButton>\n                {showLBACForm && (\n                  <Box marginTop={2}>\n                    <CreateTeamLBACForm onSubmit={onSubmitLBAC} />\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Stack>\n        </ConfigSection>\n\n        {!isEmpty(teamLBACRules) && (\n          <Box>\n            <table className={styles.table} role=\"grid\" aria-labelledby=\"team_lbac_rules\">\n              <thead>\n                <tr>\n                  <th style={{ width: '30%' }}>Team</th>\n                  <th style={{ width: '1%' }} />\n                  <th>Label selector</th>\n                  <th style={{ width: '1%' }} />\n                </tr>\n              </thead>\n              <tbody>\n                {teamLBACRules.map((teamRules, idx) => {\n                  const rules = teamRules.rules;\n                  const teamId = teamRules.teamId;\n                  let warning = '';\n                  if (lbacTeamsWithoutTeamPermissions.has(teamRules.teamId)) {\n                    warning = 'Warning: This team may not have permission to query the datasource.';\n                  }\n                  return (\n                    <TeamRulesRow\n                      key={idx}\n                      teamRules={rules}\n                      disabled={!canEdit}\n                      team={\n                        teams.find((t) => t.id?.toString() === teamId) || {\n                          id: Number(teamId),\n                          name: '',\n                          avatarUrl: '',\n                        }\n                      }\n                      onChange={(updatedRules) => onRulesUpdate(teamId, updatedRules)}\n                      warning={warning}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n            <Box marginTop={2}>\n              <Text variant=\"bodySmall\" color=\"secondary\">\n                Note: LBAC rules will NOT apply to the query if the authenticated Cloud Access Policy token has any label\n                selectors configured in Grafana Cloud.\n              </Text>\n            </Box>\n          </Box>\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    warning: css({\n      ...theme.typography.bodySmall,\n      color: theme.colors.warning.text,\n    }),\n    warningList: css({\n      ...theme.typography.bodySmall,\n      listStylePosition: 'inside',\n      marginLeft: theme.spacing(2),\n    }),\n    table: css({\n      ...theme.typography.bodySmall,\n      width: '100%',\n      borderCollapse: 'collapse',\n      '& th, & td': {\n        padding: theme.spacing(2),\n        borderBottom: `1px solid ${theme.colors.border.weak}`,\n      },\n      '& th': {\n        textAlign: 'left',\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    }),\n  };\n};\n\nexport const TeamLBACEditor = connector(TeamLBACEditorUnconnected);\n","import { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config } from '@grafana/runtime';\nimport { Stack } from '@grafana/ui';\nimport { Permissions } from 'app/core/components/AccessControl';\nimport { ResourcePermission } from 'app/core/components/AccessControl/types';\nimport { UpgradeBox } from 'app/core/components/Upgrade/UpgradeBox';\nimport { contextSrv } from 'app/core/core';\nimport { highlightTrial } from 'app/features/admin/utils';\nimport { useDataSourceRights } from 'app/features/datasources/state';\nimport { loadDataSource, loadDataSourceMeta, updateDataSource } from 'app/features/datasources/state/actions';\n\nimport { TeamLBACEditor } from '../teamLBAC/TeamLBACEditor';\nimport {\n  addTeamLBACWarnings,\n  getLBACTeamsConfigured,\n  hasLBACSupport,\n} from '../teamLBAC/utils';\nimport { AccessControlAction as EnterpriseActions, EnterpriseStoreState  } from '../types';\n\ntype ExternalProps = { uid: string };\n\nfunction mapStateToProps(state: EnterpriseStoreState, props: ExternalProps) {\n  const { uid } = props;\n  return {\n    resourceId: uid,\n    dataSourceConfig: state.dataSources.dataSource,\n    teamLBACConfig: state.teamLBAC?.teamLBACConfig,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadDataSource,\n  loadDataSourceMeta,\n  updateDataSource,\n};\n\nexport const connector = connect(mapStateToProps, mapDispatchToProps);\nexport type Props = ConnectedProps<typeof connector>;\n\n// The RBAC version for data source permissions\nconst DataSourcePermissions = ({\n  resourceId,\n  dataSourceConfig,\n  teamLBACConfig,\n  loadDataSource,\n  loadDataSourceMeta,\n  updateDataSource,\n}: Props) => {\n  useEffect(() => {\n    loadDataSource(resourceId);\n  }, [resourceId, loadDataSource]);\n\n  const canSetPermissions = contextSrv.hasPermissionInMetadata(\n    EnterpriseActions.DataSourcesPermissionsWrite,\n    dataSourceConfig\n  );\n\n  useEffect(() => {\n    // Initialize DS metadata on page load to populate tab navigation\n    loadDataSource(resourceId as any).then(loadDataSourceMeta);\n  }, [loadDataSource, loadDataSourceMeta, resourceId]);\n\n  const onTeamLBACUpdate = () => {\n    loadDataSource(resourceId);\n  };\n\n  const getLBACWarnings = () => {\n    return (items: ResourcePermission[]) => {\n      if (!showTeamLBAC || !teamLBACConfig?.rules?.length) {\n        return items;\n      }\n      const lbacTeamsConfigured = getLBACTeamsConfigured(teamLBACConfig?.rules);\n      return addTeamLBACWarnings(lbacTeamsConfigured, items);\n    };\n  };\n\n  const { readOnly, hasWriteRights } = useDataSourceRights(dataSourceConfig.uid);\n  const showTeamLBAC = config.featureToggles.teamHttpHeaders && hasLBACSupport(dataSourceConfig);\n  const readOnlyLBAC = readOnly || !canSetPermissions || !hasWriteRights;\n\n  return (\n    <Stack direction={'column'} gap={2}>\n      {highlightTrial() && (\n        <UpgradeBox\n          featureId={'data-source-permissions'}\n          eventVariant={'trial'}\n          featureName={'data source permissions'}\n          text={'Enable data source permissions for free during your trial of Grafana Pro.'}\n        />\n      )}\n      <Permissions\n        resource=\"datasources\"\n        resourceId={resourceId}\n        canSetPermissions={canSetPermissions}\n        getWarnings={showTeamLBAC ? getLBACWarnings() : undefined}\n        epilogue={\n          showTeamLBAC\n            ? (items) => (\n                <TeamLBACEditor\n                  dataSourceConfig={dataSourceConfig}\n                  readOnly={readOnlyLBAC}\n                  onTeamLBACUpdate={onTeamLBACUpdate}\n                  items={items}\n                />\n              )\n            : undefined\n        }\n      />\n    </Stack>\n  );\n};\n\nexport default connector(DataSourcePermissions);\n","import { selectors as e2eSelectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nexport const readOnlyMessage =\n  'This data source was added by config and cannot be modified using the UI. Please contact your server admin to update this data source.';\n\nexport function DataSourceReadOnlyMessage() {\n  return (\n    <Alert data-testid={e2eSelectors.pages.DataSource.readOnly} severity=\"info\" title=\"Provisioned data source\">\n      {readOnlyMessage}\n    </Alert>\n  );\n}\n","import { createContext } from 'react';\n\nimport { DATASOURCES_ROUTES } from '../constants';\nimport { DataSourcesRoutes } from '../types';\n\n// The purpose of this context is to be able to override the data-sources routes (used for links for example) used under\n// the app/features/datasources modules, so we can reuse them more easily in different parts of the application (e.g. under Connections)\nexport const DataSourcesRoutesContext = createContext<DataSourcesRoutes>(DATASOURCES_ROUTES);\n","import { useContext, useEffect } from 'react';\n\nimport { DataSourcePluginMeta, DataSourceSettings } from '@grafana/data';\nimport { cleanUpAction } from 'app/core/actions/cleanUp';\nimport appEvents from 'app/core/app_events';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\n\nimport { DataSourceRights } from '../types';\nimport { constructDataSourceExploreUrl } from '../utils';\n\nimport {\n  initDataSourceSettings,\n  testDataSource,\n  loadDataSource,\n  loadDataSources,\n  loadDataSourcePlugins,\n  addDataSource,\n  updateDataSource,\n  deleteLoadedDataSource,\n} from './actions';\nimport { DataSourcesRoutesContext } from './contexts';\nimport { initialDataSourceSettingsState } from './reducers';\nimport { getDataSource, getDataSourceMeta } from './selectors';\n\nexport const useInitDataSourceSettings = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initDataSourceSettings(uid));\n\n    return function cleanUp() {\n      dispatch(\n        cleanUpAction({\n          cleanupAction: (state) => (state.dataSourceSettings = initialDataSourceSettingsState),\n        })\n      );\n    };\n  }, [uid, dispatch]);\n};\n\nexport const useTestDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return () => dispatch(testDataSource(uid, dataSourcesRoutes.Edit));\n};\n\nexport const useLoadDataSources = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.dataSources.isLoadingDataSources);\n  const dataSources = useSelector((state) => state.dataSources.dataSources);\n\n  useEffect(() => {\n    dispatch(loadDataSources());\n  }, [dispatch]);\n\n  return { isLoading, dataSources };\n};\n\nexport const useLoadDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSource(uid));\n  }, [dispatch, uid]);\n};\n\nexport const useLoadDataSourcePlugins = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSourcePlugins());\n  }, [dispatch]);\n};\n\nexport const useAddDatasource = () => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return (plugin: DataSourcePluginMeta) => {\n    dispatch(addDataSource(plugin, dataSourcesRoutes.Edit));\n  };\n};\n\nexport const useUpdateDatasource = () => {\n  const dispatch = useDispatch();\n\n  return async (dataSource: DataSourceSettings) => dispatch(updateDataSource(dataSource));\n};\n\nexport const useDeleteLoadedDataSource = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.dataSources.dataSource);\n\n  return () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: `Are you sure you want to delete the \"${name}\" data source?`,\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => dispatch(deleteLoadedDataSource()),\n      })\n    );\n  };\n};\n\nexport const useDataSource = (uid: string) => {\n  return useSelector((state) => getDataSource(state.dataSources, uid));\n};\n\nexport const useDataSourceExploreUrl = (uid: string) => {\n  const dataSource = useDataSource(uid);\n  return constructDataSourceExploreUrl(dataSource);\n};\n\nexport const useDataSourceMeta = (pluginType: string): DataSourcePluginMeta => {\n  return useSelector((state) => getDataSourceMeta(state.dataSources, pluginType));\n};\n\nexport const useDataSourceSettings = () => {\n  return useSelector((state) => state.dataSourceSettings);\n};\n\nexport const useDataSourceRights = (uid: string): DataSourceRights => {\n  const dataSource = useDataSource(uid);\n  const readOnly = dataSource.readOnly === true;\n  const hasWriteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesWrite, dataSource);\n  const hasDeleteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesDelete, dataSource);\n\n  return {\n    readOnly,\n    hasWriteRights,\n    hasDeleteRights,\n  };\n};\n\nexport const useDataSourcesRoutes = () => {\n  return useContext(DataSourcesRoutesContext);\n};\n","import { DataSourceJsonData, DataSourceSettings, urlUtil, locationUtil } from '@grafana/data';\n\nexport const constructDataSourceExploreUrl = (dataSource: DataSourceSettings<DataSourceJsonData, {}>) => {\n  const exploreState = JSON.stringify({ datasource: dataSource.name, context: 'explore' });\n  const exploreUrl = urlUtil.renderUrl(locationUtil.assureBaseUrl('/explore'), { left: exploreState });\n\n  return exploreUrl;\n};\n"],"names":["__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__spreadProps","__objRest","source","exclude","target","ConfigSection","_a","_b","children","props","GenericConfigSection","title","description","isCollapsible","isInitiallyOpen","kind","className","colors","typography","spacing","isOpen","setIsOpen","iconName","isSubSection","collapsibleButtonAriaLabel","styles","RawQuery","query","language","theme","getStyles","highlighted","DataSourcesWithLBACSupport","LBACHTTPHeaderName","hasLBACSupport","ds","trimLBACRule","rule","res","formatLBACRule","labelSelector","extractLBACRule","validateLBACRule","str","trimmedStr","getLBACTeamsConfigured","rules","teams","addTeamLBACWarnings","items","warningServiceAccount","warningTeam","item","warningBasicRole","addTeamLBACWarningsToLBACRule","EditableCell","isEditing","disabled","error","onChange","cellValue","setCellValue","Input","event","Tooltip","Icon","CreateTeamLBACForm","onSubmit","handleSubmit","register","control","watch","errors","team","isValid","Stack","Field","ref","field","TeamPicker","t","val","Button","TeamLabel","warning","Avatar","Box","TeamRulesRow","teamRules","rulesEditing","setRulesEditing","rulesValues","setRulesValues","setRules","setErrors","onRuleEdit","idx","onRuleChange","onSave","newRule","newRules","i","onDelete","onAddRule","onCancel","IconButton","DeleteButton","teamRule","getTeamLBAC","uid","dispatch","teamLBACConfig","updateTeamLBACRules","data","mapStateToProps","state","mapDispatchToProps","connector","TeamLBACEditorUnconnected","dataSourceConfig","readOnly","onTeamLBACUpdate","setTeams","showLBACForm","setShowLBACForm","rolesWithoutLBAC","setRolesWithoutLBAC","serviceAccountsWithoutLBAC","setServiceAccountsWithoutLBAC","teamsWithoutLBAC","setTeamsWithoutLBAC","lbacTeamsWithoutTeamPermissions","setLBACTeamsWithoutTeamPermission","teamLBACRules","recommendationIsOpen","setRecommendationIsOpen","teamIds","r","lbacTeams","resourceTeams","resourceServiceAccounts","resourceRoles","teamsWithoutLbac","x","onTeamLBACUpdateInternal","onSubmitLBAC","updatedRules","onRulesUpdate","teamId","updatedTeamRules","canEdit","getDescription","DataSourceReadOnlyMessage","Collapse","Alert","teamName","serviceaccount","sAID","role","Text","TeamLBACEditor","resourceId","loadDataSource","loadDataSourceMeta","updateDataSource","canSetPermissions","getLBACWarnings","showTeamLBAC","lbacTeamsConfigured","hasWriteRights","config","readOnlyLBAC","UpgradeBox","readOnlyMessage","DataSourcesRoutesContext","useInitDataSourceSettings","useTestDataSource","dataSourcesRoutes","useDataSourcesRoutes","useLoadDataSources","isLoading","dataSources","useLoadDataSource","useLoadDataSourcePlugins","useAddDatasource","plugin","useUpdateDatasource","dataSource","useDeleteLoadedDataSource","name","useDataSource","useDataSourceExploreUrl","useDataSourceMeta","pluginType","useDataSourceSettings","useDataSourceRights","hasDeleteRights","constructDataSourceExploreUrl","exploreState"],"sourceRoot":""}