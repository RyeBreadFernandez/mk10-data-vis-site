"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[6843],{7521:(Y,x,e)=>{e.d(x,{A:()=>S});var a=e(74848),c=e(32196),E=e(13544),g=e(14578),y=e(42418),C=e(55852),r=e(76442);const u=(0,c.css)({textAlign:"center"}),M=(0,c.css)({maxWidth:"700px",margin:"0 auto"}),S=({title:I,buttonIcon:f,buttonLink:j,buttonTitle:B,buttonDisabled:A,onClick:$,proTip:L,proTipLink:U,proTipLinkTitle:F,proTipTarget:G,infoBox:p,infoBoxTitle:Q})=>{const h=()=>(0,a.jsxs)(a.Fragment,{children:[L?(0,a.jsxs)("span",{children:[(0,a.jsx)(g.I,{name:"rocket"}),(0,a.jsxs)(a.Fragment,{children:[" ProTip: ",L," "]}),U&&(0,a.jsx)("a",{href:U,target:G,className:"text-link",children:F})]},"proTipFooter"):"",p?(0,a.jsx)(y.F,{severity:"info",title:Q??"",className:M,children:(0,a.jsx)("div",{dangerouslySetInnerHTML:p})}):""]}),z=h()?"":(0,c.css)({marginBottom:"20px"}),V=j?C.z9:C.$n,X=(0,a.jsx)(V,{size:"lg",onClick:$,href:j,icon:f,className:z,"data-testid":E.Tp.components.CallToActionCard.buttonV2(B),disabled:A,children:B});return(0,a.jsx)(r.c,{className:u,message:I,footer:h(),callToActionElement:X})}},2889:(Y,x,e)=>{e.d(x,{jG:()=>H,Ay:()=>Z});var a=e(74848),c=e(96540),E=e(71468),g=e(67061),y=e(40845),C=e(77454),r=e(10096),u=e(35538),M=e(34258),l=e(13680),S=e(7521);const I=t=>{const{enableDataSourceCache:s,dataSource:o,pageId:n}=t,i=r.TP.hasPermissionInMetadata(l.AccessControlAction.DataSourcesCachingWrite,o);return o.jsonData?.disableGrafanaCache?(0,a.jsx)(S.A,{title:"Caching cannot be enabled for this data source.",buttonTitle:"Enable",buttonIcon:"database",proTip:"This data source's configuration does not permit caching to be enabled.",buttonDisabled:!0}):(0,a.jsx)(S.A,{title:"Caching is not enabled for this data source.",buttonTitle:"Enable",buttonIcon:"database",onClick:()=>{s(n)},proTip:"Enabling caching can reduce the amount of redundant requests sent to the data source.",proTipLink:"https://grafana.com/docs/grafana/latest/enterprise/query-caching/",proTipLinkTitle:"Learn more",buttonDisabled:!i})};var f=e(55852),j=e(96374);const B=t=>{const{cleanCache:s,dataSource:o,pageId:n}=t,[i,d]=(0,c.useState)(!1),m=W=>()=>{d(W)},b=()=>{s(n),d(!1)},D=r.TP.hasPermissionInMetadata(l.AccessControlAction.DataSourcesCachingWrite,o);return(0,a.jsxs)("div",{children:[(0,a.jsx)(f.$n,{variant:"destructive",onClick:m(!0),disabled:!D,children:"Clear cache"}),(0,a.jsx)(j.u,{isOpen:i,title:"Clear cache",body:"Warning: This action impacts all cache-enabled data sources. If you are using Memcached, the system clears all data from the Memcached instance. Do you want to continue?",confirmText:"Clear cache",onConfirm:b,onDismiss:m(!1)})]})};var A=e(88575),$=e(15292),L=e(10354),U=e(60029),F=e(56034),G=e(14578);const p=t=>{const{disableDataSourceCache:s,dataSource:o,pageId:n}=t,i=r.TP.hasPermissionInMetadata(l.AccessControlAction.DataSourcesCachingWrite,o);return(0,a.jsx)(f.$n,{variant:"destructive",onClick:()=>s(n),disabled:!i,children:"Disable"})},Q=t=>{const{updateDataSourceCache:s,pageId:o,useDefaultTTL:n,setUseDefaultTTL:i,defaultTTLMs:d,ttlQueriesMs:m,setTtlQueriesMs:b,ttlResourcesMs:D,setTtlResourcesMs:W,loading:T,enabled:P,dataSource:O,dataSourceID:N,dataSourceUID:K}=t,v=r.TP.hasPermissionInMetadata(l.AccessControlAction.DataSourcesCachingWrite,O);return(0,a.jsxs)(g.B,{direction:"column",alignItems:"flex-start",children:[(0,a.jsx)(A.D,{description:`Enable this to use the default TTL set in Grafana's configuration (${d} ms)`,label:"Use default TTL",disabled:T||!v,children:(0,a.jsx)($.d,{value:n,onChange:()=>{i(!n)}})}),(0,a.jsx)(A.D,{description:"The time-to-live for a query cache item in milliseconds. Example: 5000",label:"Query TTL",disabled:T||n||!v,children:(0,a.jsx)(L.p,{type:"number",className:"max-width-10",placeholder:"1000",min:0,value:(n?d:m)||0,onChange:R=>{b(R.currentTarget.valueAsNumber)}})}),(0,a.jsx)(A.D,{description:"The time-to-live for resources cache items in milliseconds. Example: 5000",label:(0,a.jsxs)(U.J,{children:[(0,a.jsx)("span",{children:"Resource TTL"}),(0,a.jsx)(F.m,{content:(0,a.jsxs)("div",{children:["Resources are dynamic values that Grafana data source plugins retrieve from data sources for use in the query editor. Examples are Splunk namespaces, Prometheus labels, and CloudWatch metric names. Since these values update less frequently, you might prefer a longer cache TTL for Resources than queries. See the ",(0,a.jsx)("a",{href:"https://grafana.com/docs/grafana/latest/enterprise/query-caching/",children:"docs"})," ","for more info."]}),children:(0,a.jsx)(G.I,{name:"question-circle"})})]}),disabled:T||n||!v,children:(0,a.jsx)(L.p,{type:"number",className:"max-width-10",placeholder:"1000",min:0,value:(n?d:D)||0,onChange:R=>{W(R.currentTarget.valueAsNumber)}})}),(0,a.jsxs)(g.B,{gap:2,alignItems:"flex-start",justifyContent:"flex-start",children:[(0,a.jsx)(p,{...t}),(0,a.jsx)(f.$n,{disabled:T||!v,onClick:()=>s(o,{dataSourceID:N,dataSourceUID:K,enabled:P,defaultTTLMs:d,ttlQueriesMs:m,ttlResourcesMs:D,useDefaultTTL:n}),children:"Save"})]})]})};var h=e(69841);function z(t,s){return{...t.dataSourceCache,pageId:s.uid,dataSource:t.dataSources.dataSource}}const V={disableDataSourceCache:h.wn,updateDataSourceCache:h.$b,enableDataSourceCache:h.lx,loadDataSourceCache:h.W3,loadDataSource:M.ak,cleanCache:h.gn,loadDataSourceMeta:M.xI},X=(0,E.connect)(z,V),J=t=>{const[s,o]=(0,c.useState)(t.enabled),[n,i]=(0,c.useState)(!0),[d,m]=(0,c.useState)(t.useDefaultTTL),[b,D]=(0,c.useState)(t.ttlQueriesMs),[W,T]=(0,c.useState)(t.ttlResourcesMs),{pageId:P,dataSource:O,loadDataSource:N,loadDataSourceCache:K,loadDataSourceMeta:v,enableDataSourceCache:R}=t;(0,c.useEffect)(()=>{o(O.jsonData?.disableGrafanaCache?!1:t.enabled),m(t.useDefaultTTL),D(t.ttlQueriesMs),T(t.ttlResourcesMs),i(!1)},[t.useDefaultTTL,t.ttlQueriesMs,t.ttlResourcesMs,t.enabled,O.jsonData?.disableGrafanaCache]),(0,c.useEffect)(()=>{N(P).then(v),K(P)},[K,N,v,P]);const k=r.TP.hasPermissionInMetadata(l.AccessControlAction.DataSourcesCachingWrite,O),q=s?Q({...t,loading:n,useDefaultTTL:d,setUseDefaultTTL:m,ttlQueriesMs:b,setTtlQueriesMs:D,ttlResourcesMs:W,setTtlResourcesMs:T}):(0,u.z5)()?(0,a.jsx)(H,{action:k?{text:"Enable caching",onClick:()=>{R(P)}}:void 0}):I(t);return(0,a.jsxs)(a.Fragment,{children:[(0,u.z5)()&&(0,a.jsx)(C.Iz,{featureId:"query-caching",eventVariant:"trial",featureName:"query caching",text:"Enable query caching for free during your trial of Grafana Pro."}),(0,a.jsxs)("div",{className:"page-action-bar",children:[s&&!(0,u.z5)()&&(0,a.jsx)("h3",{className:"page-sub-heading",children:"Caching"}),(0,a.jsx)("div",{className:"page-action-bar__spacer"}),(0,a.jsx)(g.B,{gap:2,alignItems:"flex-end",justifyContent:"flex-end",children:s&&(0,a.jsx)(B,{...t})})]}),q]})},H=({action:t})=>{const s=(0,y.$j)();return(0,a.jsx)(C.El,{action:t,listItems:["Load dashboards in less than a second from the cache, even when they include big queries and lots of users are looking at once","Save money and avoid rate limiting by reducing the number of API calls you make to data sources like Splunk, CloudWatch and Github","Author dashboards more smoothly by caching the data used to construct queries, like fields in ServiceNow or metrics available from Datadog"],image:`query-caching-${s.isLight?"light":"dark"}.png`,featureUrl:"https://grafana.com/docs/grafana/latest/enterprise/query-caching",featureName:"query caching",description:"With query caching, you can load dashboards faster and reduce costly queries to data sources by temporarily storing query results in memory, Redis, or Memcached."})},Z=X(J)},1202:(Y,x,e)=>{e.r(x),e.d(x,{DataSourceCachePage:()=>u,default:()=>M});var a=e(74848),c=e(54148),E=e(21780),g=e(17422),y=e(74984),C=e(31678),r=e(2889);const u=()=>{const{uid:l=""}=(0,c.g)(),S=(0,y.$m)("cache"),I=(0,C.useSelector)(j=>j.navIndex),f=(0,g.tc)(I,`datasource-cache-${l}`,S);return(0,a.jsx)(E.YW,{navId:"datasources",pageNav:f.main,children:(0,a.jsx)(E.YW.Contents,{children:(0,a.jsx)(r.Ay,{uid:l})})})},M=u}}]);

//# sourceMappingURL=DataSourceCachePage.dd06cb309ce65bf4ea94.js.map