{"version":3,"file":"DataSourcePermissionsPage.5f1a0a50dbcf37bc2ef2.js","mappings":"kPAUO,MAAMA,EAA4B,IAAM,CAC7C,KAAM,CAAE,IAAAC,EAAM,EAAG,KAAI,KAA2B,EAC1CC,KAAuB,MAAwB,aAAa,EAC5DC,KAAW,eAAaC,GAAsBA,EAAM,QAAQ,EAC5DC,KAAW,MAAYF,EAAU,0BAA0BF,CAAG,GAAIC,CAAoB,EAE5F,SACE,OAAC,KAAI,CAAC,MAAM,cAAc,QAASG,EAAS,KAC1C,mBAAC,KAAK,SAAL,CACC,mBAAC,IAAqB,CAAC,IAAAJ,CAAA,CAAU,EACnC,EACF,CAEJ,EAEA,EAAeD,C","sources":["webpack://grafana/./public/app/extensions/permissions/DataSourcePermissionsPage.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom-v5-compat';\n\nimport { Page } from 'app/core/components/Page/Page';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { getDataSourceLoadingNav } from 'app/features/datasources/state/navModel';\nimport { StoreState, useSelector } from 'app/types';\n\nimport DataSourcePermissions from './DataSourcePermissions';\n\n// The RBAC version of the data source permissions page\nexport const DataSourcePermissionsPage = () => {\n  const { uid = '' } = useParams<{ uid: string }>();\n  const dataSourceLoadingNav = getDataSourceLoadingNav('permissions');\n  const navIndex = useSelector((state: StoreState) => state.navIndex);\n  const navModel = getNavModel(navIndex, `datasource-permissions-${uid}`, dataSourceLoadingNav);\n\n  return (\n    <Page navId=\"datasources\" pageNav={navModel.main}>\n      <Page.Contents>\n        <DataSourcePermissions uid={uid} />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default DataSourcePermissionsPage;\n"],"names":["DataSourcePermissionsPage","uid","dataSourceLoadingNav","navIndex","state","navModel"],"sourceRoot":""}