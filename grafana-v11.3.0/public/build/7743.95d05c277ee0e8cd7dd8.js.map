{"version":3,"file":"7743.95d05c277ee0e8cd7dd8.js","mappings":"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","sources":["webpack://grafana/./public/app/core/components/EmptyListCTA/EmptyListCTA.tsx","webpack://grafana/./public/app/features/datasources/components/DashboardsTable.tsx","webpack://grafana/./public/app/features/datasources/state/contexts.ts","webpack://grafana/./public/app/features/datasources/state/hooks.ts","webpack://grafana/./public/app/features/datasources/utils.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginAngularBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDeprecatedBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Changelog.tsx","webpack://grafana/./public/app/features/plugins/admin/components/VersionList.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginConfig.tsx","webpack://grafana/./public/app/features/plugins/admin/components/AppConfigWrapper.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDashboards.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginUsage.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsBody.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDisabledError.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsRightPanel.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginDetailsTabs.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithApp.tsx","webpack://grafana/./public/app/features/plugins/admin/permissions.ts","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithDataSource.tsx","webpack://grafana/./public/app/features/plugins/admin/components/GetStartedWithPlugin/GetStartedWithPlugin.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsWarning.tsx","webpack://grafana/./public/app/features/plugins/admin/tracking.ts","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/InstallControlsButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/InstallControls/ExternallyManagedButton.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginActions.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginSubtitle.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderDependencies.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsHeaderSignature.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginInfo.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/usePluginPageExtensions.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsDeprecatedWarning.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginDetailsPage.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport { MouseEvent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert, Button, CallToActionCard, Icon, IconName, LinkButton } from '@grafana/ui';\n\nexport interface Props {\n  title: string;\n  buttonIcon: IconName;\n  buttonLink?: string;\n  buttonTitle: string;\n  buttonDisabled?: boolean;\n  onClick?: (event: MouseEvent) => void;\n  proTip?: string;\n  proTipLink?: string;\n  proTipLinkTitle?: string;\n  proTipTarget?: string;\n  infoBox?: { __html: string };\n  infoBoxTitle?: string;\n}\n\nconst ctaStyle = css({\n  textAlign: 'center',\n});\n\nconst infoBoxStyles = css({\n  maxWidth: '700px',\n  margin: '0 auto',\n});\n\nconst EmptyListCTA = ({\n  title,\n  buttonIcon,\n  buttonLink,\n  buttonTitle,\n  buttonDisabled,\n  onClick,\n  proTip,\n  proTipLink,\n  proTipLinkTitle,\n  proTipTarget,\n  infoBox,\n  infoBoxTitle,\n}: Props) => {\n  const footer = () => {\n    return (\n      <>\n        {proTip ? (\n          <span key=\"proTipFooter\">\n            <Icon name=\"rocket\" />\n            <> ProTip: {proTip} </>\n            {proTipLink && (\n              <a href={proTipLink} target={proTipTarget} className=\"text-link\">\n                {proTipLinkTitle}\n              </a>\n            )}\n          </span>\n        ) : (\n          ''\n        )}\n        {infoBox ? (\n          <Alert severity=\"info\" title={infoBoxTitle ?? ''} className={infoBoxStyles}>\n            <div dangerouslySetInnerHTML={infoBox} />\n          </Alert>\n        ) : (\n          ''\n        )}\n      </>\n    );\n  };\n\n  const ctaElementClassName = !footer()\n    ? css({\n        marginBottom: '20px',\n      })\n    : '';\n\n  const ButtonEl = buttonLink ? LinkButton : Button;\n  const ctaElement = (\n    <ButtonEl\n      size=\"lg\"\n      onClick={onClick}\n      href={buttonLink}\n      icon={buttonIcon}\n      className={ctaElementClassName}\n      data-testid={selectors.components.CallToActionCard.buttonV2(buttonTitle)}\n      disabled={buttonDisabled}\n    >\n      {buttonTitle}\n    </ButtonEl>\n  );\n\n  return <CallToActionCard className={ctaStyle} message={title} footer={footer()} callToActionElement={ctaElement} />;\n};\n\nexport default EmptyListCTA;\n","import { Button, Icon } from '@grafana/ui';\nimport { PluginDashboard } from 'app/types';\n\nexport interface Props {\n  // List of plugin dashboards to show in the table\n  dashboards: PluginDashboard[];\n  // Callback used when the user clicks on importing a dashboard\n  onImport: (dashboard: PluginDashboard, overwrite: boolean) => void;\n  // Callback used when the user clicks on removing a dashboard\n  onRemove: (dashboard: PluginDashboard) => void;\n}\n\nexport function DashboardsTable({ dashboards, onImport, onRemove }: Props) {\n  function buttonText(dashboard: PluginDashboard) {\n    return dashboard.revision !== dashboard.importedRevision ? 'Update' : 'Re-import';\n  }\n\n  return (\n    <table className=\"filter-table\">\n      <tbody>\n        {dashboards.map((dashboard, index) => {\n          return (\n            <tr key={`${dashboard.dashboardId}-${index}`}>\n              <td className=\"width-1\">\n                <Icon name=\"apps\" />\n              </td>\n              <td>\n                {dashboard.imported ? (\n                  <a href={dashboard.importedUrl}>{dashboard.title}</a>\n                ) : (\n                  <span>{dashboard.title}</span>\n                )}\n              </td>\n              <td style={{ textAlign: 'right' }}>\n                {!dashboard.imported ? (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, false)}>\n                    Import\n                  </Button>\n                ) : (\n                  <Button variant=\"secondary\" size=\"sm\" onClick={() => onImport(dashboard, true)}>\n                    {buttonText(dashboard)}\n                  </Button>\n                )}\n                {dashboard.imported && (\n                  <Button\n                    aria-label=\"Delete dashboard\"\n                    icon=\"trash-alt\"\n                    variant=\"destructive\"\n                    size=\"sm\"\n                    onClick={() => onRemove(dashboard)}\n                  />\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default DashboardsTable;\n","import { createContext } from 'react';\n\nimport { DATASOURCES_ROUTES } from '../constants';\nimport { DataSourcesRoutes } from '../types';\n\n// The purpose of this context is to be able to override the data-sources routes (used for links for example) used under\n// the app/features/datasources modules, so we can reuse them more easily in different parts of the application (e.g. under Connections)\nexport const DataSourcesRoutesContext = createContext<DataSourcesRoutes>(DATASOURCES_ROUTES);\n","import { useContext, useEffect } from 'react';\n\nimport { DataSourcePluginMeta, DataSourceSettings } from '@grafana/data';\nimport { cleanUpAction } from 'app/core/actions/cleanUp';\nimport appEvents from 'app/core/app_events';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction, useDispatch, useSelector } from 'app/types';\nimport { ShowConfirmModalEvent } from 'app/types/events';\n\nimport { DataSourceRights } from '../types';\nimport { constructDataSourceExploreUrl } from '../utils';\n\nimport {\n  initDataSourceSettings,\n  testDataSource,\n  loadDataSource,\n  loadDataSources,\n  loadDataSourcePlugins,\n  addDataSource,\n  updateDataSource,\n  deleteLoadedDataSource,\n} from './actions';\nimport { DataSourcesRoutesContext } from './contexts';\nimport { initialDataSourceSettingsState } from './reducers';\nimport { getDataSource, getDataSourceMeta } from './selectors';\n\nexport const useInitDataSourceSettings = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(initDataSourceSettings(uid));\n\n    return function cleanUp() {\n      dispatch(\n        cleanUpAction({\n          cleanupAction: (state) => (state.dataSourceSettings = initialDataSourceSettingsState),\n        })\n      );\n    };\n  }, [uid, dispatch]);\n};\n\nexport const useTestDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return () => dispatch(testDataSource(uid, dataSourcesRoutes.Edit));\n};\n\nexport const useLoadDataSources = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.dataSources.isLoadingDataSources);\n  const dataSources = useSelector((state) => state.dataSources.dataSources);\n\n  useEffect(() => {\n    dispatch(loadDataSources());\n  }, [dispatch]);\n\n  return { isLoading, dataSources };\n};\n\nexport const useLoadDataSource = (uid: string) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSource(uid));\n  }, [dispatch, uid]);\n};\n\nexport const useLoadDataSourcePlugins = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadDataSourcePlugins());\n  }, [dispatch]);\n};\n\nexport const useAddDatasource = () => {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n\n  return (plugin: DataSourcePluginMeta) => {\n    dispatch(addDataSource(plugin, dataSourcesRoutes.Edit));\n  };\n};\n\nexport const useUpdateDatasource = () => {\n  const dispatch = useDispatch();\n\n  return async (dataSource: DataSourceSettings) => dispatch(updateDataSource(dataSource));\n};\n\nexport const useDeleteLoadedDataSource = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.dataSources.dataSource);\n\n  return () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: `Are you sure you want to delete the \"${name}\" data source?`,\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => dispatch(deleteLoadedDataSource()),\n      })\n    );\n  };\n};\n\nexport const useDataSource = (uid: string) => {\n  return useSelector((state) => getDataSource(state.dataSources, uid));\n};\n\nexport const useDataSourceExploreUrl = (uid: string) => {\n  const dataSource = useDataSource(uid);\n  return constructDataSourceExploreUrl(dataSource);\n};\n\nexport const useDataSourceMeta = (pluginType: string): DataSourcePluginMeta => {\n  return useSelector((state) => getDataSourceMeta(state.dataSources, pluginType));\n};\n\nexport const useDataSourceSettings = () => {\n  return useSelector((state) => state.dataSourceSettings);\n};\n\nexport const useDataSourceRights = (uid: string): DataSourceRights => {\n  const dataSource = useDataSource(uid);\n  const readOnly = dataSource.readOnly === true;\n  const hasWriteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesWrite, dataSource);\n  const hasDeleteRights = contextSrv.hasPermissionInMetadata(AccessControlAction.DataSourcesDelete, dataSource);\n\n  return {\n    readOnly,\n    hasWriteRights,\n    hasDeleteRights,\n  };\n};\n\nexport const useDataSourcesRoutes = () => {\n  return useContext(DataSourcesRoutesContext);\n};\n","import { DataSourceJsonData, DataSourceSettings, urlUtil, locationUtil } from '@grafana/data';\n\nexport const constructDataSourceExploreUrl = (dataSource: DataSourceSettings<DataSourceJsonData, {}>) => {\n  const exploreState = JSON.stringify({ datasource: dataSource.name, context: 'explore' });\n  const exploreUrl = urlUtil.renderUrl(locationUtil.assureBaseUrl('/explore'), { left: exploreState });\n\n  return exploreUrl;\n};\n","import * as React from 'react';\n\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    case null:\n    case undefined:\n      return 'Plugin disabled';\n    default:\n      return `Plugin disabled due to unknown error${error ? `: ${error}` : ''}`;\n  }\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import * as React from 'react';\n\nimport { Badge, useStyles2 } from '@grafana/ui';\n\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import * as React from 'react';\n\nimport { featureEnabled } from '@grafana/runtime';\nimport { Badge, PluginSignatureBadge, Stack, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\nimport { getBadgeColor } from './sharedStyles';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n\n  if (featureEnabled('enterprise.plugins')) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <Stack wrap={'wrap'}>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge\n        icon=\"lock\"\n        role=\"img\"\n        aria-label=\"lock icon\"\n        text=\"Enterprise\"\n        color=\"blue\"\n        className={customBadgeStyles}\n        title=\"Requires a Grafana Enterprise license\"\n      />\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  return <p className={styles.hasUpdate}>Update available!</p>;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      margin-bottom: 0;\n    `,\n  };\n};\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginAngularBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Angular\"\n      color=\"orange\"\n      tooltip=\"This plugin uses deprecated functionality, support for which is being removed.\"\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginDeprecatedBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Deprecated\"\n      color=\"orange\"\n      tooltip=\"This plugin is deprecated and no longer receives updates.\"\n    />\n  );\n}\n","import { Box, LoadingPlaceholder } from '@grafana/ui';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" direction=\"column\" justifyContent=\"center\" paddingTop={10}>\n      <LoadingPlaceholder text={text} />\n    </Box>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface Props {\n  sanitizedHTML: string;\n}\n\nexport const Changelog = ({ sanitizedHTML }: Props) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: sanitizedHTML ?? 'No changelog was found' }}\n      className={cx(styles.changelog)}\n    ></div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  changelog: css({\n    'h1:first-of-type': {\n      display: 'none',\n    },\n    'h2:first-of-type': {\n      marginTop: 0,\n    },\n    h2: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(1),\n    },\n    li: {\n      marginLeft: theme.spacing(4),\n    },\n    a: {\n      color: theme.colors.text.link,\n      '&:hover': {\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n      },\n    },\n  }),\n});\n","import { css } from '@emotion/css';\n\nimport { dateTimeFormatTimeAgo, GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { getLatestCompatibleVersion } from '../helpers';\nimport { Version } from '../types';\n\ninterface Props {\n  versions?: Version[];\n  installedVersion?: string;\n}\n\nexport const VersionList = ({ versions = [], installedVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const latestCompatibleVersion = getLatestCompatibleVersion(versions);\n\n  if (versions.length === 0) {\n    return <p>No version history was found.</p>;\n  }\n\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Last updated</th>\n          <th>Grafana Dependency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {versions.map((version) => {\n          const isInstalledVersion = installedVersion === version.version;\n          return (\n            <tr key={version.version}>\n              {/* Version number */}\n              {isInstalledVersion ? (\n                <td className={styles.currentVersion}>{version.version} (installed version)</td>\n              ) : version.version === latestCompatibleVersion?.version ? (\n                <td>{version.version} (latest compatible version)</td>\n              ) : (\n                <td>{version.version}</td>\n              )}\n\n              {/* Last updated */}\n              <td className={isInstalledVersion ? styles.currentVersion : ''}>\n                {dateTimeFormatTimeAgo(version.createdAt)}\n              </td>\n              {/* Dependency */}\n              <td className={isInstalledVersion ? styles.currentVersion : ''}>{version.grafanaDependency || 'N/A'}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    padding: ${theme.spacing(2, 4, 3)};\n  `,\n  table: css`\n    table-layout: fixed;\n    width: 100%;\n    td,\n    th {\n      padding: ${theme.spacing()} 0;\n    }\n    th {\n      font-size: ${theme.typography.h5.fontSize};\n    }\n  `,\n  currentVersion: css`\n    font-weight: ${theme.typography.fontWeightBold};\n  `,\n});\n","import { useAsync } from 'react-use';\n\nimport { config } from '@grafana/runtime';\n\nimport { loadPlugin } from '../../utils';\nimport { CatalogPlugin } from '../types';\n\nexport const usePluginConfig = (plugin?: CatalogPlugin) => {\n  return useAsync(async () => {\n    if (!plugin) {\n      return null;\n    }\n\n    const isPluginInstalled =\n      config.pluginAdminExternalManageEnabled && config.featureToggles.managedPluginsInstall\n        ? plugin.isFullyInstalled\n        : plugin.isInstalled;\n\n    if (isPluginInstalled && !plugin.isDisabled) {\n      return loadPlugin(plugin.id);\n    }\n    return null;\n  }, [plugin?.id, plugin?.isInstalled, plugin?.isDisabled]);\n};\n","// Libraries\nimport { css } from '@emotion/css';\nimport { cloneDeep, extend } from 'lodash';\nimport { PureComponent } from 'react';\n\nimport { PluginMeta, AppPlugin, deprecationWarning } from '@grafana/data';\nimport { AngularComponent, getAngularLoader, getBackendSrv } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\n\ninterface Props {\n  app: AppPlugin;\n}\n\ninterface State {\n  angularCtrl: AngularComponent | null;\n  refresh: number;\n}\n\nexport class AppConfigCtrlWrapper extends PureComponent<Props, State> {\n  element: HTMLElement | null = null;\n  //@ts-ignore\n  model: PluginMeta;\n\n  // Needed for angular scope\n  preUpdateHook = () => Promise.resolve();\n  postUpdateHook = () => Promise.resolve();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      angularCtrl: null,\n      refresh: 0,\n    };\n  }\n\n  componentDidMount() {\n    // Force a reload after the first mount -- is there a better way to do this?\n    setTimeout(() => {\n      this.setState({ refresh: this.state.refresh + 1 });\n    }, 5);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.element || this.state.angularCtrl) {\n      return;\n    }\n\n    // Set a copy of the meta\n    this.model = cloneDeep(this.props.app.meta);\n\n    const loader = getAngularLoader();\n    const template = '<plugin-component type=\"app-config-ctrl\"></plugin-component>';\n    const scopeProps = {\n      ctrl: this,\n      // used by angular injectorMonkeyPatch to detect this scenario\n      isAppConfigCtrl: true,\n    };\n    const angularCtrl = loader.load(this.element, scopeProps, template);\n\n    this.setState({ angularCtrl });\n  }\n\n  render() {\n    const model = this.model;\n\n    const withRightMargin = css({ marginRight: '8px' });\n\n    return (\n      <div>\n        <div ref={(element) => (this.element = element)} />\n        <br />\n        <br />\n        {model && (\n          <div className=\"gf-form\">\n            {!model.enabled && (\n              <Button variant=\"primary\" onClick={this.enable} className={withRightMargin}>\n                Enable\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"primary\" onClick={this.update} className={withRightMargin}>\n                Update\n              </Button>\n            )}\n            {model.enabled && (\n              <Button variant=\"destructive\" onClick={this.disable} className={withRightMargin}>\n                Disable\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  //-----------------------------------------------------------\n  // Copied from plugin_edit_ctrl\n  //-----------------------------------------------------------\n\n  update = () => {\n    const pluginId = this.model.id;\n\n    this.preUpdateHook()\n      .then(() => {\n        const updateCmd = extend(\n          {\n            enabled: this.model.enabled,\n            pinned: this.model.pinned,\n            jsonData: this.model.jsonData,\n            secureJsonData: this.model.secureJsonData,\n          },\n          {}\n        );\n        return getBackendSrv().post(`/api/plugins/${pluginId}/settings`, updateCmd);\n      })\n      .then(this.postUpdateHook)\n      .then((res) => {\n        window.location.href = window.location.href;\n      });\n  };\n\n  setPreUpdateHook = (callback: () => Promise<void>) => {\n    this.preUpdateHook = callback;\n  };\n\n  setPostUpdateHook = (callback: () => Promise<void>) => {\n    this.postUpdateHook = callback;\n  };\n\n  // Stub to avoid unknown function in legacy code\n  importDashboards = (): Promise<void> => {\n    deprecationWarning('AppConfig', 'importDashboards()');\n    return Promise.resolve();\n  };\n\n  enable = () => {\n    this.model.enabled = true;\n    this.model.pinned = true;\n    this.update();\n  };\n\n  disable = () => {\n    this.model.enabled = false;\n    this.model.pinned = false;\n    this.update();\n  };\n}\n","import { extend } from 'lodash';\nimport { PureComponent } from 'react';\n\nimport { AppEvents, PluginMeta, DataSourceApi } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { appEvents } from 'app/core/core';\nimport DashboardsTable from 'app/features/datasources/components/DashboardsTable';\nimport { PluginDashboard } from 'app/types';\n\ninterface Props {\n  plugin: PluginMeta;\n  datasource?: DataSourceApi;\n}\n\ninterface State {\n  dashboards: PluginDashboard[];\n  loading: boolean;\n}\n\nexport class PluginDashboards extends PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      dashboards: [],\n    };\n  }\n\n  async componentDidMount() {\n    const pluginId = this.props.plugin.id;\n    getBackendSrv()\n      .get(`/api/plugins/${pluginId}/dashboards`)\n      .then((dashboards) => {\n        this.setState({ dashboards, loading: false });\n      });\n  }\n\n  importAll = () => {\n    this.importNext(0);\n  };\n\n  private importNext = (index: number) => {\n    const { dashboards } = this.state;\n    return this.import(dashboards[index], true).then(() => {\n      if (index + 1 < dashboards.length) {\n        return new Promise<void>((resolve) => {\n          setTimeout(() => {\n            this.importNext(index + 1).then(() => {\n              resolve();\n            });\n          }, 500);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  };\n\n  import = (dash: PluginDashboard, overwrite: boolean) => {\n    const { plugin, datasource } = this.props;\n\n    const installCmd = {\n      pluginId: plugin.id,\n      path: dash.path,\n      overwrite: overwrite,\n      inputs: datasource\n        ? [\n            {\n              name: '*',\n              type: 'datasource',\n              pluginId: datasource.meta.id,\n              value: datasource.name,\n            },\n          ]\n        : [],\n    };\n\n    return getBackendSrv()\n      .post(`/api/dashboards/import`, installCmd)\n      .then((res: PluginDashboard) => {\n        appEvents.emit(AppEvents.alertSuccess, ['Dashboard Imported', dash.title]);\n        extend(dash, res);\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  remove = (dash: PluginDashboard) => {\n    getBackendSrv()\n      .delete('/api/dashboards/uid/' + dash.uid)\n      .then(() => {\n        dash.imported = false;\n        this.setState({ dashboards: [...this.state.dashboards] });\n      });\n  };\n\n  render() {\n    const { loading, dashboards } = this.state;\n    if (loading) {\n      return <div>loading...</div>;\n    }\n    if (!dashboards || !dashboards.length) {\n      return <div>No dashboards are included with this plugin</div>;\n    }\n\n    return <DashboardsTable dashboards={dashboards} onImport={this.import} onRemove={this.remove} />;\n  }\n}\n","import { css } from '@emotion/css';\nimport { useMemo } from 'react';\nimport { useAsync } from 'react-use';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { of } from 'rxjs';\n\nimport { GrafanaTheme2, PluginMeta, PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, Spinner, useStyles2 } from '@grafana/ui';\nimport EmptyListCTA from 'app/core/components/EmptyListCTA/EmptyListCTA';\nimport { SearchResultsTable } from 'app/features/search/page/components/SearchResultsTable';\nimport { getGrafanaSearcher, SearchQuery } from 'app/features/search/service';\n\ntype Props = {\n  plugin: PluginMeta;\n};\n\nexport function PluginUsage({ plugin }: Props) {\n  const styles = useStyles2(getStyles);\n\n  const searchQuery = useMemo<SearchQuery>(() => {\n    if (plugin.type === PluginType.datasource) {\n      return {\n        query: '*',\n        ds_type: plugin.id,\n        kind: ['dashboard'],\n      };\n    }\n    return {\n      query: '*',\n      panel_type: plugin.id,\n      kind: ['panel'],\n    };\n  }, [plugin]);\n\n  const results = useAsync(() => {\n    return getGrafanaSearcher().search(searchQuery);\n  }, [searchQuery]);\n\n  const found = results.value;\n  if (found?.totalRows) {\n    return (\n      <div className={styles.wrap}>\n        <div className={styles.info}>\n          {plugin.name} is used <b>{found.totalRows}</b> times.\n        </div>\n        <AutoSizer>\n          {({ width, height }) => {\n            return (\n              <SearchResultsTable\n                response={found}\n                width={width}\n                height={height}\n                clearSelection={() => {}}\n                keyboardEvents={of()}\n                onTagSelected={() => {}}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    );\n  }\n\n  if (results.loading) {\n    return <Spinner />;\n  }\n\n  if (!config.featureToggles.panelTitleSearch) {\n    return (\n      <Alert title=\"Missing feature toggle: panelTitleSearch\">\n        Plugin usage requires the new search index to find usage across dashboards\n      </Alert>\n    );\n  }\n\n  return (\n    <EmptyListCTA\n      title={`${plugin.name} is not used in any dashboards yet`}\n      buttonIcon=\"plus\"\n      buttonTitle=\"Create Dashboard\"\n      buttonLink={`dashboard/new?panelType=${plugin.id}&editPanel=1`}\n    />\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrap: css`\n      width: 100%;\n      height: 100%;\n    `,\n    info: css`\n      padding-bottom: 30px;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { useMemo } from 'react';\n\nimport { AppPlugin, GrafanaTheme2, PluginContextProvider, UrlQueryMap } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { CellProps, Column, InteractiveTable, Stack, useStyles2 } from '@grafana/ui';\n\nimport { Changelog } from '../components/Changelog';\nimport { VersionList } from '../components/VersionList';\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { CatalogPlugin, Permission, PluginTabIds } from '../types';\n\nimport { AppConfigCtrlWrapper } from './AppConfigWrapper';\nimport { PluginDashboards } from './PluginDashboards';\nimport { PluginUsage } from './PluginUsage';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  queryParams: UrlQueryMap;\n  pageId: string;\n};\n\ntype Cell<T extends keyof Permission = keyof Permission> = CellProps<Permission, Permission[T]>;\n\nexport function PluginDetailsBody({ plugin, queryParams, pageId }: Props): JSX.Element {\n  const styles = useStyles2(getStyles);\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  const columns: Array<Column<Permission>> = useMemo(\n    () => [\n      {\n        id: 'action',\n        header: 'Action',\n        cell: ({ cell: { value } }: Cell<'action'>) => value,\n      },\n      {\n        id: 'scope',\n        header: 'Scope',\n        cell: ({ cell: { value } }: Cell<'scope'>) => value,\n      },\n    ],\n    []\n  );\n\n  if (pageId === PluginTabIds.OVERVIEW) {\n    return (\n      <div\n        className={styles.readme}\n        dangerouslySetInnerHTML={{\n          __html: plugin.details?.readme ?? 'No plugin help or readme markdown file was found',\n        }}\n      />\n    );\n  }\n\n  if (pageId === PluginTabIds.VERSIONS) {\n    return (\n      <div>\n        <VersionList versions={plugin.details?.versions} installedVersion={plugin.installedVersion} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.CHANGELOG && plugin?.details?.changelog) {\n    return <Changelog sanitizedHTML={plugin?.details?.changelog} />;\n  }\n\n  if (pageId === PluginTabIds.CONFIG && pluginConfig?.angularConfigCtrl) {\n    return (\n      <div>\n        <AppConfigCtrlWrapper app={pluginConfig as AppPlugin} />\n      </div>\n    );\n  }\n\n  // Permissions will be returned in the iam field for installed plugins and in the details.iam field when fetching details from gcom\n  const permissions = plugin.iam?.permissions || plugin.details?.iam?.permissions;\n\n  const displayPermissions =\n    config.featureToggles.externalServiceAccounts &&\n    pageId === PluginTabIds.IAM &&\n    permissions &&\n    permissions.length > 0;\n\n  if (displayPermissions) {\n    return (\n      <>\n        <Stack direction=\"row\">\n          The {plugin.name} plugin needs a service account to be able to query Grafana. The following list contains the\n          permissions available to the service account:\n        </Stack>\n        <InteractiveTable\n          columns={columns}\n          data={permissions}\n          getRowId={(permission: Permission) => String(permission.action)}\n        />\n      </>\n    );\n  }\n\n  if (pluginConfig?.configPages) {\n    for (const configPage of pluginConfig.configPages) {\n      if (pageId === configPage.id) {\n        return (\n          <div>\n            <PluginContextProvider meta={pluginConfig.meta}>\n              <configPage.body plugin={pluginConfig} query={queryParams} />\n            </PluginContextProvider>\n          </div>\n        );\n      }\n    }\n  }\n\n  if (pageId === PluginTabIds.USAGE && pluginConfig) {\n    return (\n      <div>\n        <PluginUsage plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  if (pageId === PluginTabIds.DASHBOARDS && pluginConfig) {\n    return (\n      <div>\n        <PluginDashboards plugin={pluginConfig?.meta} />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p>Page not found.</p>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  readme: css({\n    '& img': {\n      maxWidth: '100%',\n    },\n    'h1, h2, h3': {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n    '*:first-child': {\n      marginTop: 0,\n    },\n    li: {\n      marginLeft: theme.spacing(2),\n      '& > p': {\n        margin: theme.spacing(1, 0),\n      },\n    },\n    a: {\n      color: theme.colors.text.link,\n      '&:hover': {\n        color: theme.colors.text.link,\n        textDecoration: 'underline',\n      },\n    },\n    table: {\n      tableLayout: 'fixed',\n      width: '100%',\n      'td, th': {\n        overflowX: 'auto',\n        padding: theme.spacing(0.5, 1),\n      },\n      'table, th, td': {\n        border: `1px solid ${theme.colors.border.medium}`,\n        borderCollapse: 'collapse',\n      },\n    },\n  }),\n});\n","import { ReactElement } from 'react';\n\nimport { PluginErrorCode } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDisabledError({ className, plugin }: Props): ReactElement | null {\n  if (!plugin.isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"error\"\n      title=\"Plugin disabled\"\n      className={className}\n      data-testid={selectors.pages.PluginPage.disabledInfo}\n    >\n      {renderDescriptionFromError(plugin.error)}\n      <p>Please contact your server administrator to get this resolved.</p>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/administration/cli/#plugins-commands\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about managing plugins\n      </a>\n    </Alert>\n  );\n}\n\nfunction renderDescriptionFromError(error?: PluginErrorCode): ReactElement {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that the content of this plugin does not match its signature. We can not guarantee the trustworthy\n          of this plugin and have therefore disabled it. We recommend you to reinstall the plugin to make sure you are\n          running a verified version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.invalidSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that it was invalid. We can not guarantee the trustworthy of this plugin and have therefore\n          disabled it. We recommend you to reinstall the plugin to make sure you are running a verified version of this\n          plugin.\n        </p>\n      );\n    case PluginErrorCode.missingSignature:\n      return (\n        <p>\n          Grafana Labs checks each plugin to verify that it has a valid digital signature. While doing this, we\n          discovered that there is no signature for this plugin. We can not guarantee the trustworthy of this plugin and\n          have therefore disabled it. We recommend you to reinstall the plugin to make sure you are running a verified\n          version of this plugin.\n        </p>\n      );\n    case PluginErrorCode.failedBackendStart:\n      return <p>This plugin failed to start. Server logs can provide more information.</p>;\n    case PluginErrorCode.angular:\n      // Error message already rendered by AngularDeprecationPluginNotice\n      return <></>;\n    default:\n      return (\n        <p>\n          We failed to run this plugin due to an unkown reason and have therefore disabled it. We recommend you to\n          reinstall the plugin to make sure you are running a working version of this plugin.\n        </p>\n      );\n  }\n}\n","import { PageInfoItem } from '@grafana/runtime/src/components/PluginPage';\nimport { Stack, Text, LinkButton, Box, TextLink } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\nimport { formatDate } from 'app/core/internationalization/dates';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  info: PageInfoItem[];\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsRightPanel(props: Props): React.ReactElement | null {\n  const { info, plugin } = props;\n  return (\n    <Stack direction=\"column\" gap={3} shrink={0} grow={0} maxWidth={'250px'}>\n      <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n        <Stack direction=\"column\" gap={2}>\n          {info.map((infoItem, index) => {\n            return (\n              <Stack key={index} wrap direction=\"column\" gap={0.5}>\n                <Text color=\"secondary\">{infoItem.label + ':'}</Text>\n                <div>{infoItem.value}</div>\n              </Stack>\n            );\n          })}\n          {plugin.updatedAt && (\n            <Stack direction=\"column\" gap={0.5}>\n              <Text color=\"secondary\">\n                <Trans i18nKey=\"plugins.details.labels.updatedAt\">Last updated: </Trans>\n              </Text>{' '}\n              <Text>{formatDate(new Date(plugin.updatedAt))}</Text>\n            </Stack>\n          )}\n        </Stack>\n      </Box>\n\n      {plugin?.details?.links && plugin.details?.links?.length > 0 && (\n        <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n          <Stack direction=\"column\" gap={2}>\n            <Text color=\"secondary\">\n              <Trans i18nKey=\"plugins.details.labels.links\">Links </Trans>\n            </Text>\n            {plugin.details.links.map((link, index) => (\n              <TextLink key={index} href={link.url} external>\n                {link.name}\n              </TextLink>\n            ))}\n          </Stack>\n        </Box>\n      )}\n\n      {!plugin?.isCore && (\n        <Box padding={2} borderColor=\"medium\" borderStyle=\"solid\">\n          <Stack direction=\"column\">\n            <Text color=\"secondary\">\n              <Trans i18nKey=\"plugins.details.labels.reportAbuse\">Report a concern </Trans>\n            </Text>\n            <LinkButton href=\"mailto:integrations@grafana.com\" variant=\"secondary\" fill=\"solid\">\n              <Trans i18nKey=\"plugins.details.labels.contactGrafanaLabs\">Contact Grafana Labs</Trans>\n            </LinkButton>\n          </Stack>\n        </Box>\n      )}\n    </Stack>\n  );\n}\n","import * as React from 'react';\n\nimport { PluginErrorCode, PluginSignatureStatus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\n// Designed to show signature information inside the active tab on the plugin's details page\nexport function PluginDetailsSignature({ className, plugin }: Props): React.ReactElement | null {\n  const isSignatureValid = plugin.signature === PluginSignatureStatus.valid;\n  const isCore = plugin.signature === PluginSignatureStatus.internal;\n  const isDisabled = plugin.isDisabled && isDisabledDueTooSignatureError(plugin.error);\n\n  // The basic information is already available in the header\n  if (isSignatureValid || isCore || isDisabled) {\n    return null;\n  }\n\n  return (\n    <Alert\n      severity=\"warning\"\n      title=\"Invalid plugin signature\"\n      data-testid={selectors.pages.PluginPage.signatureInfo}\n      className={className}\n    >\n      <p>\n        Grafana Labs checks each plugin to verify that it has a valid digital signature. Plugin signature verification\n        is part of our security measures to ensure plugins are safe and trustworthy. Grafana Labs can’t guarantee the\n        integrity of this unsigned plugin. Ask the plugin author to request it to be signed.\n      </p>\n\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        className=\"external-link\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Read more about plugins signing.\n      </a>\n    </Alert>\n  );\n}\n\nfunction isDisabledDueTooSignatureError(error: PluginErrorCode | undefined) {\n  // If the plugin is disabled due to signature error we rely on the disabled\n  // error message instad of the warning about the signature.\n\n  switch (error) {\n    case PluginErrorCode.invalidSignature:\n    case PluginErrorCode.missingSignature:\n    case PluginErrorCode.modifiedSignature:\n      return true;\n\n    default:\n      return false;\n  }\n}\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\n\nimport { GrafanaPlugin, NavModelItem, PluginIncludeType, PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { usePluginConfig } from '../hooks/usePluginConfig';\nimport { CatalogPlugin, PluginTabIds, PluginTabLabels } from '../types';\n\ntype ReturnType = {\n  error: Error | undefined;\n  loading: boolean;\n  navModel: NavModelItem;\n  activePageId: PluginTabIds | string;\n};\n\nexport const usePluginDetailsTabs = (plugin?: CatalogPlugin, pageId?: PluginTabIds): ReturnType => {\n  const { loading, error, value: pluginConfig } = usePluginConfig(plugin);\n  const { pathname } = useLocation();\n  const defaultTab = useDefaultPage(plugin, pluginConfig);\n  const isPublished = Boolean(plugin?.isPublished);\n\n  const currentPageId = pageId || defaultTab;\n  const navModelChildren = useMemo(() => {\n    const canConfigurePlugins = plugin && contextSrv.hasPermissionInMetadata(AccessControlAction.PluginsWrite, plugin);\n    const navModelChildren: NavModelItem[] = [];\n    if (isPublished) {\n      navModelChildren.push({\n        text: PluginTabLabels.VERSIONS,\n        id: PluginTabIds.VERSIONS,\n        icon: 'history',\n        url: `${pathname}?page=${PluginTabIds.VERSIONS}`,\n        active: PluginTabIds.VERSIONS === currentPageId,\n      });\n    }\n    if (isPublished && plugin?.details?.changelog) {\n      navModelChildren.push({\n        text: PluginTabLabels.CHANGELOG,\n        id: PluginTabIds.CHANGELOG,\n        icon: 'rocket',\n        url: `${pathname}?page=${PluginTabIds.CHANGELOG}`,\n        active: PluginTabIds.CHANGELOG === currentPageId,\n      });\n    }\n\n    // Not extending the tabs with the config pages if the plugin is not installed\n    if (!pluginConfig) {\n      return navModelChildren;\n    }\n\n    if (config.featureToggles.externalServiceAccounts && (plugin?.iam || plugin?.details?.iam)) {\n      navModelChildren.push({\n        text: PluginTabLabels.IAM,\n        icon: 'shield',\n        id: PluginTabIds.IAM,\n        url: `${pathname}?page=${PluginTabIds.IAM}`,\n        active: PluginTabIds.IAM === currentPageId,\n      });\n    }\n\n    if (\n      config.featureToggles.panelTitleSearch &&\n      (pluginConfig.meta.type === PluginType.panel || pluginConfig.meta.type === PluginType.datasource)\n    ) {\n      navModelChildren.push({\n        text: PluginTabLabels.USAGE,\n        icon: 'list-ul',\n        id: PluginTabIds.USAGE,\n        url: `${pathname}?page=${PluginTabIds.USAGE}`,\n        active: PluginTabIds.USAGE === currentPageId,\n      });\n    }\n\n    if (!canConfigurePlugins) {\n      return navModelChildren;\n    }\n\n    if (pluginConfig.meta.type === PluginType.app) {\n      if (pluginConfig.angularConfigCtrl) {\n        navModelChildren.push({\n          text: 'Config',\n          icon: 'cog',\n          id: PluginTabIds.CONFIG,\n          url: `${pathname}?page=${PluginTabIds.CONFIG}`,\n          active: PluginTabIds.CONFIG === currentPageId,\n        });\n      }\n\n      if (pluginConfig.configPages) {\n        for (const configPage of pluginConfig.configPages) {\n          navModelChildren.push({\n            text: configPage.title,\n            icon: configPage.icon,\n            id: configPage.id,\n            url: `${pathname}?page=${configPage.id}`,\n            active: configPage.id === currentPageId,\n          });\n        }\n      }\n\n      if (pluginConfig.meta.includes?.find((include) => include.type === PluginIncludeType.dashboard)) {\n        navModelChildren.push({\n          text: 'Dashboards',\n          icon: 'apps',\n          id: PluginTabIds.DASHBOARDS,\n          url: `${pathname}?page=${PluginTabIds.DASHBOARDS}`,\n          active: PluginTabIds.DASHBOARDS === currentPageId,\n        });\n      }\n    }\n\n    return navModelChildren;\n  }, [plugin, pluginConfig, pathname, isPublished, currentPageId]);\n\n  const navModel: NavModelItem = {\n    text: plugin?.name ?? '',\n    img: plugin?.info.logos.small,\n    children: [\n      {\n        text: PluginTabLabels.OVERVIEW,\n        icon: 'file-alt',\n        id: PluginTabIds.OVERVIEW,\n        url: `${pathname}?page=${PluginTabIds.OVERVIEW}`,\n        active: PluginTabIds.OVERVIEW === currentPageId,\n      },\n      ...navModelChildren,\n    ],\n  };\n\n  return {\n    error,\n    loading,\n    navModel,\n    activePageId: currentPageId,\n  };\n};\n\nfunction useDefaultPage(plugin: CatalogPlugin | undefined, pluginConfig: GrafanaPlugin | undefined | null) {\n  if (!plugin || !pluginConfig) {\n    return PluginTabIds.OVERVIEW;\n  }\n\n  const hasAccess = contextSrv.hasPermissionInMetadata(AccessControlAction.PluginsWrite, plugin);\n\n  if (!hasAccess || pluginConfig.meta.type !== PluginType.app) {\n    return PluginTabIds.OVERVIEW;\n  }\n\n  if (pluginConfig.angularConfigCtrl) {\n    return PluginTabIds.CONFIG;\n  }\n\n  if (pluginConfig.configPages?.length) {\n    return pluginConfig.configPages[0].id;\n  }\n\n  return PluginTabIds.OVERVIEW;\n}\n","import * as React from 'react';\n\nimport { PluginMeta } from '@grafana/data';\nimport { Button } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { updatePluginSettings } from '../../api';\nimport { usePluginConfig } from '../../hooks/usePluginConfig';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithApp({ plugin }: Props): React.ReactElement | null {\n  const { value: pluginConfig } = usePluginConfig(plugin);\n\n  if (!pluginConfig) {\n    return null;\n  }\n  // Enforce RBAC\n  if (!contextSrv.hasPermission(AccessControlAction.PluginsWrite)) {\n    return null;\n  }\n\n  const { enabled, jsonData } = pluginConfig?.meta;\n\n  const enable = () =>\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: true,\n      pinned: true,\n      jsonData,\n    });\n\n  const disable = () => {\n    updatePluginSettingsAndReload(plugin.id, {\n      enabled: false,\n      pinned: false,\n      jsonData,\n    });\n  };\n\n  return (\n    <>\n      {!enabled && (\n        <Button variant=\"primary\" onClick={enable}>\n          Enable\n        </Button>\n      )}\n\n      {enabled && (\n        <Button variant=\"destructive\" onClick={disable}>\n          Disable\n        </Button>\n      )}\n    </>\n  );\n}\n\nconst updatePluginSettingsAndReload = async (id: string, data: Partial<PluginMeta>) => {\n  try {\n    await updatePluginSettings(id, data);\n\n    // Reloading the page as the plugin meta changes made here wouldn't be propagated throughout the app.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n","import { config } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\nexport function isGrafanaAdmin(): boolean {\n  return config.bootData.user.isGrafanaAdmin;\n}\n\nexport function isOrgAdmin() {\n  return contextSrv.hasRole('Admin');\n}\n\nexport function isDataSourceEditor() {\n  return (\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite)\n  );\n}\n","import { useCallback } from 'react';\nimport * as React from 'react';\n\nimport { DataSourcePluginMeta } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button } from '@grafana/ui';\nimport { useDataSourcesRoutes, addDataSource } from 'app/features/datasources/state';\nimport { useDispatch } from 'app/types';\n\nimport { isDataSourceEditor } from '../../permissions';\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithDataSource({ plugin }: Props): React.ReactElement | null {\n  const dispatch = useDispatch();\n  const dataSourcesRoutes = useDataSourcesRoutes();\n  const onAddDataSource = useCallback(() => {\n    const meta = {\n      name: plugin.name,\n      id: plugin.id,\n    } as DataSourcePluginMeta;\n\n    dispatch(addDataSource(meta, dataSourcesRoutes.Edit));\n  }, [dispatch, plugin, dataSourcesRoutes]);\n\n  if (!isDataSourceEditor()) {\n    return null;\n  }\n\n  const disabledButton =\n    config.featureToggles.managedPluginsInstall && config.pluginAdminExternalManageEnabled && !plugin.isFullyInstalled;\n\n  return (\n    <Button\n      variant=\"primary\"\n      onClick={onAddDataSource}\n      disabled={disabledButton}\n      title={\n        disabledButton ? \"The plugin isn't usable yet, it may take some time to complete the installation.\" : undefined\n      }\n    >\n      Add new data source\n    </Button>\n  );\n}\n","import { ReactElement } from 'react';\n\nimport { PluginType } from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nimport { CatalogPlugin } from '../../types';\n\nimport { GetStartedWithApp } from './GetStartedWithApp';\nimport { GetStartedWithDataSource } from './GetStartedWithDataSource';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function GetStartedWithPlugin({ plugin }: Props): ReactElement | null {\n  const isInstalled =\n    config.featureToggles.managedPluginsInstall && config.pluginAdminExternalManageEnabled\n      ? plugin.isFullyInstalled\n      : plugin.isInstalled;\n\n  if (!isInstalled || plugin.isDisabled) {\n    return null;\n  }\n\n  switch (plugin.type) {\n    case PluginType.datasource:\n      return <GetStartedWithDataSource plugin={plugin} />;\n    case PluginType.app:\n      return <GetStartedWithApp plugin={plugin} />;\n    default:\n      return null;\n  }\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, PluginType } from '@grafana/data';\nimport { config, featureEnabled } from '@grafana/runtime';\nimport { HorizontalGroup, LinkButton, useStyles2, Alert } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nimport { getExternalManageLink } from '../../helpers';\nimport { useIsRemotePluginsAvailable } from '../../state/hooks';\nimport { CatalogPlugin, PluginStatus, Version } from '../../types';\n\ninterface Props {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n}\n\nexport const InstallControlsWarning = ({ plugin, pluginStatus, latestCompatibleVersion }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const hasPermission = contextSrv.hasPermission(AccessControlAction.PluginsInstall);\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const isCompatible = Boolean(latestCompatibleVersion);\n\n  if (plugin.type === PluginType.renderer) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"Renderer plugins cannot be managed by the Plugin Catalog.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (plugin.type === PluginType.secretsmanager) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"Secrets manager plugins cannot be managed by the Plugin Catalog.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (plugin.isEnterprise && !featureEnabled('enterprise.plugins')) {\n    return (\n      <Alert severity=\"warning\" title=\"\" className={styles.alert}>\n        <HorizontalGroup height=\"auto\" align=\"center\">\n          <span>No valid Grafana Enterprise license detected.</span>\n          <LinkButton\n            href={`${getExternalManageLink(plugin.id)}?utm_source=grafana_catalog_learn_more`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            size=\"sm\"\n            fill=\"text\"\n            icon=\"external-link-alt\"\n          >\n            Learn more\n          </LinkButton>\n        </HorizontalGroup>\n      </Alert>\n    );\n  }\n\n  if (plugin.isDev) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"This is a development build of the plugin and can&#39;t be uninstalled.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (!hasPermission && !isExternallyManaged) {\n    return <Alert severity=\"warning\" title={statusToMessage(pluginStatus)} className={styles.alert} />;\n  }\n\n  if (!plugin.isPublished) {\n    return (\n      <Alert severity=\"warning\" title=\"\" className={styles.alert}>\n        <div>\n          This plugin is not published to{' '}\n          <a href=\"https://www.grafana.com/plugins\" target=\"__blank\" rel=\"noreferrer\">\n            grafana.com/plugins\n          </a>{' '}\n          and can&#39;t be managed via the catalog.\n        </div>\n      </Alert>\n    );\n  }\n\n  if (!isCompatible) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"This plugin doesn&#39;t support your version of Grafana.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  if (!isRemotePluginsAvailable) {\n    return (\n      <Alert\n        severity=\"warning\"\n        title=\"The install controls have been disabled because the Grafana server cannot access grafana.com.\"\n        className={styles.alert}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css({\n      marginTop: `${theme.spacing(2)}`,\n    }),\n  };\n};\n\nfunction statusToMessage(status: PluginStatus): string {\n  switch (status) {\n    case PluginStatus.INSTALL:\n    case PluginStatus.REINSTALL:\n      return `You do not have permission to install this plugin.`;\n    case PluginStatus.UNINSTALL:\n      return `You do not have permission to uninstall this plugin.`;\n    case PluginStatus.UPDATE:\n      return `You do not have permission to update this plugin.`;\n    default:\n      return `You do not have permission to manage this plugin.`;\n  }\n}\n","import { reportInteraction } from '@grafana/runtime';\n\ntype PluginTrackingProps = {\n  // The ID of the plugin (e.g. grafana-azure-monitor-datasource)\n  plugin_id: string;\n  // The type of the plugin (e.g. 'app' or 'datasource')\n  plugin_type?: string;\n  // The path where the plugin details page was rendered (e.g. /plugins/grafana-azure-monitor-datasource )\n  path: string;\n};\n\nexport const trackPluginInstalled = (props: PluginTrackingProps) => {\n  reportInteraction('grafana_plugin_install_clicked', props);\n};\n\nexport const trackPluginUninstalled = (props: PluginTrackingProps) => {\n  reportInteraction('grafana_plugin_uninstall_clicked', props);\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\n\nimport { AppEvents } from '@grafana/data';\nimport { config, locationService, reportInteraction } from '@grafana/runtime';\nimport { Button, ConfirmModal, Stack } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport configCore from 'app/core/config';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { removePluginFromNavTree } from 'app/core/reducers/navBarTree';\nimport { useDispatch } from 'app/types';\n\nimport {\n  useInstallStatus,\n  useUninstallStatus,\n  useInstall,\n  useUninstall,\n  useUnsetInstall,\n  useFetchDetailsLazy,\n} from '../../state/hooks';\nimport { trackPluginInstalled, trackPluginUninstalled } from '../../tracking';\nimport { CatalogPlugin, PluginStatus, PluginTabIds, Version } from '../../types';\n\nconst PLUGIN_UPDATE_INTERACTION_EVENT_NAME = 'plugin_update_clicked';\n\ntype InstallControlsButtonProps = {\n  plugin: CatalogPlugin;\n  pluginStatus: PluginStatus;\n  latestCompatibleVersion?: Version;\n  hasInstallWarning?: boolean;\n  setNeedReload?: (needReload: boolean) => void;\n};\n\nexport function InstallControlsButton({\n  plugin,\n  pluginStatus,\n  latestCompatibleVersion,\n  hasInstallWarning,\n  setNeedReload,\n}: InstallControlsButtonProps) {\n  const dispatch = useDispatch();\n  const [queryParams] = useQueryParams();\n  const location = useLocation();\n  const { isInstalling, error: errorInstalling } = useInstallStatus();\n  const { isUninstalling, error: errorUninstalling } = useUninstallStatus();\n  const install = useInstall();\n  const uninstall = useUninstall();\n  const unsetInstall = useUnsetInstall();\n  const fetchDetails = useFetchDetailsLazy();\n  const [isConfirmModalVisible, setIsConfirmModalVisible] = useState(false);\n  const showConfirmModal = () => setIsConfirmModalVisible(true);\n  const hideConfirmModal = () => setIsConfirmModalVisible(false);\n  const uninstallBtnText = isUninstalling ? 'Uninstalling' : 'Uninstall';\n  const trackingProps = {\n    plugin_id: plugin.id,\n    plugin_type: plugin.type,\n    path: location.pathname,\n  };\n\n  useEffect(() => {\n    return () => {\n      // Remove possible installation errors\n      unsetInstall();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onInstall = async () => {\n    trackPluginInstalled(trackingProps);\n    const result = await install(plugin.id, latestCompatibleVersion?.version);\n    if (!errorInstalling && !('error' in result)) {\n      let successMessage = `Installed ${plugin.name}`;\n      if (config.pluginAdminExternalManageEnabled && configCore.featureToggles.managedPluginsInstall) {\n        successMessage = 'Install requested, this may take a few minutes.';\n      }\n\n      appEvents.emit(AppEvents.alertSuccess, [successMessage]);\n      if (plugin.type === 'app') {\n        setNeedReload?.(true);\n      }\n\n      await fetchDetails(plugin.id);\n    }\n  };\n\n  const onUninstall = async () => {\n    hideConfirmModal();\n    trackPluginUninstalled(trackingProps);\n    await uninstall(plugin.id);\n    if (!errorUninstalling) {\n      // If an app plugin is uninstalled we need to reset the active tab when the config / dashboards tabs are removed.\n      const activePageId = queryParams.page;\n      const isViewingAppConfigPage = activePageId !== PluginTabIds.OVERVIEW && activePageId !== PluginTabIds.VERSIONS;\n      if (isViewingAppConfigPage) {\n        locationService.replace(`${location.pathname}?page=${PluginTabIds.OVERVIEW}`);\n      }\n\n      let successMessage = `Uninstalled ${plugin.name}`;\n      if (config.pluginAdminExternalManageEnabled && configCore.featureToggles.managedPluginsInstall) {\n        successMessage = 'Uninstall requested, this may take a few minutes.';\n      }\n\n      appEvents.emit(AppEvents.alertSuccess, [successMessage]);\n      if (plugin.type === 'app') {\n        dispatch(removePluginFromNavTree({ pluginID: plugin.id }));\n        setNeedReload?.(false);\n      }\n    }\n  };\n\n  const onUpdate = async () => {\n    reportInteraction(PLUGIN_UPDATE_INTERACTION_EVENT_NAME);\n\n    await install(plugin.id, latestCompatibleVersion?.version, true);\n    if (!errorInstalling) {\n      appEvents.emit(AppEvents.alertSuccess, [`Updated ${plugin.name}`]);\n    }\n  };\n\n  let disableUninstall =\n    config.pluginAdminExternalManageEnabled && configCore.featureToggles.managedPluginsInstall\n      ? plugin.isUninstallingFromInstance\n      : isUninstalling;\n  let uninstallTitle = '';\n  if (plugin.isPreinstalled.found) {\n    disableUninstall = true;\n    uninstallTitle = 'Preinstalled plugin. Remove from Grafana config before uninstalling.';\n  }\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <>\n        <ConfirmModal\n          isOpen={isConfirmModalVisible}\n          title={`Uninstall ${plugin.name}`}\n          body=\"Are you sure you want to uninstall this plugin?\"\n          confirmText=\"Confirm\"\n          icon=\"exclamation-triangle\"\n          onConfirm={onUninstall}\n          onDismiss={hideConfirmModal}\n        />\n        <Stack alignItems=\"flex-start\" width=\"auto\" height=\"auto\">\n          <Button variant=\"destructive\" disabled={disableUninstall} onClick={showConfirmModal} title={uninstallTitle}>\n            {uninstallBtnText}\n          </Button>\n        </Stack>\n      </>\n    );\n  }\n\n  if (!plugin.isPublished || hasInstallWarning) {\n    // Cannot be updated or installed\n    return null;\n  }\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    const disableUpdate =\n      config.pluginAdminExternalManageEnabled && configCore.featureToggles.managedPluginsInstall\n        ? plugin.isUpdatingFromInstance\n        : isInstalling;\n\n    return (\n      <Stack alignItems=\"flex-start\" width=\"auto\" height=\"auto\">\n        {!plugin.isManaged && !plugin.isPreinstalled.withVersion && (\n          <Button disabled={disableUpdate} onClick={onUpdate}>\n            {isInstalling ? 'Updating' : 'Update'}\n          </Button>\n        )}\n        <Button variant=\"destructive\" disabled={disableUninstall} onClick={onUninstall} title={uninstallTitle}>\n          {uninstallBtnText}\n        </Button>\n      </Stack>\n    );\n  }\n  const shouldDisable = isInstalling || errorInstalling || (!config.angularSupportEnabled && plugin.angularDetected);\n  return (\n    <Button disabled={shouldDisable} onClick={onInstall}>\n      {isInstalling ? 'Installing' : 'Install'}\n    </Button>\n  );\n}\n","import { config } from '@grafana/runtime';\nimport { LinkButton, Stack } from '@grafana/ui';\n\nimport { getExternalManageLink } from '../../helpers';\nimport { PluginStatus } from '../../types';\n\ntype ExternallyManagedButtonProps = {\n  pluginId: string;\n  pluginStatus: PluginStatus;\n  angularDetected?: boolean;\n};\n\nexport function ExternallyManagedButton({ pluginId, pluginStatus, angularDetected }: ExternallyManagedButtonProps) {\n  const externalManageLink = `${getExternalManageLink(pluginId)}/?tab=installation`;\n\n  if (pluginStatus === PluginStatus.UPDATE) {\n    return (\n      <Stack height=\"auto\">\n        <LinkButton href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Update via grafana.com\n        </LinkButton>\n        <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          Uninstall via grafana.com\n        </LinkButton>\n      </Stack>\n    );\n  }\n\n  if (pluginStatus === PluginStatus.UNINSTALL) {\n    return (\n      <LinkButton variant=\"destructive\" href={externalManageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n        Uninstall via grafana.com\n      </LinkButton>\n    );\n  }\n\n  return (\n    <LinkButton\n      disabled={!config.angularSupportEnabled && angularDetected}\n      href={externalManageLink}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Install via grafana.com\n    </LinkButton>\n  );\n}\n","import { css } from '@emotion/css';\nimport { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Icon, Stack, useStyles2 } from '@grafana/ui';\nimport configCore from 'app/core/config';\n\nimport { GetStartedWithPlugin } from '../components/GetStartedWithPlugin';\nimport { InstallControlsButton } from '../components/InstallControls';\nimport { ExternallyManagedButton } from '../components/InstallControls/ExternallyManagedButton';\nimport { getLatestCompatibleVersion, hasInstallControlWarning, isInstallControlsEnabled } from '../helpers';\nimport { useIsRemotePluginsAvailable } from '../state/hooks';\nimport { CatalogPlugin, PluginStatus } from '../types';\n\ninterface Props {\n  plugin?: CatalogPlugin;\n}\n\nexport const PluginActions = ({ plugin }: Props) => {\n  const styles = useStyles2(getStyles);\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin?.details?.versions);\n  const [needReload, setNeedReload] = useState(false);\n\n  if (!plugin) {\n    return null;\n  }\n\n  const hasInstallWarning = hasInstallControlWarning(plugin, isRemotePluginsAvailable, latestCompatibleVersion);\n  const isExternallyManaged = config.pluginAdminExternalManageEnabled;\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n  const isInstallControlsDisabled =\n    plugin.isCore || plugin.isDisabled || plugin.isProvisioned || !isInstallControlsEnabled();\n\n  return (\n    <Stack direction=\"column\">\n      <Stack alignItems=\"center\">\n        {!isInstallControlsDisabled && (\n          <>\n            {isExternallyManaged && !hasInstallWarning && !configCore.featureToggles.managedPluginsInstall ? (\n              <ExternallyManagedButton\n                pluginId={plugin.id}\n                pluginStatus={pluginStatus}\n                angularDetected={plugin.angularDetected}\n              />\n            ) : (\n              <InstallControlsButton\n                plugin={plugin}\n                latestCompatibleVersion={latestCompatibleVersion}\n                pluginStatus={pluginStatus}\n                setNeedReload={setNeedReload}\n                hasInstallWarning={hasInstallWarning}\n              />\n            )}\n          </>\n        )}\n        <GetStartedWithPlugin plugin={plugin} />\n      </Stack>\n      {needReload && (\n        <Stack alignItems=\"center\">\n          <Icon name=\"exclamation-triangle\" />\n          <span className={styles.message}>Refresh the page to see the changes</span>\n        </Stack>\n      )}\n    </Stack>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    message: css`\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { Fragment } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, useStyles2 } from '@grafana/ui';\n\nimport { InstallControlsWarning } from '../components/InstallControls';\nimport { getLatestCompatibleVersion, hasInstallControlWarning } from '../helpers';\nimport { useInstallStatus, useIsRemotePluginsAvailable } from '../state/hooks';\nimport { CatalogPlugin, PluginStatus } from '../types';\n\ninterface Props {\n  plugin?: CatalogPlugin;\n}\n\nexport const PluginSubtitle = ({ plugin }: Props) => {\n  const isRemotePluginsAvailable = useIsRemotePluginsAvailable();\n  const styles = useStyles2(getStyles);\n  const { error: errorInstalling } = useInstallStatus();\n  if (!plugin) {\n    return null;\n  }\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin.details?.versions);\n  const pluginStatus = plugin.isInstalled\n    ? plugin.hasUpdate\n      ? PluginStatus.UPDATE\n      : PluginStatus.UNINSTALL\n    : PluginStatus.INSTALL;\n\n  return (\n    <div className={styles.subtitle}>\n      {errorInstalling && (\n        <Alert title={'message' in errorInstalling ? errorInstalling.message : ''}>\n          {typeof errorInstalling === 'string' ? errorInstalling : errorInstalling.error}\n        </Alert>\n      )}\n      {plugin?.description && <div>{plugin?.description}</div>}\n      {!config.featureToggles.pluginsDetailsRightPanel && !!plugin?.details?.links?.length && (\n        <span>\n          {plugin.details.links.map((link, index) => (\n            <Fragment key={index}>\n              {index > 0 && ' | '}\n              <a href={link.url} className=\"external-link\">\n                {link.name}\n              </a>\n            </Fragment>\n          ))}\n        </span>\n      )}\n      {hasInstallControlWarning(plugin, isRemotePluginsAvailable, latestCompatibleVersion) && (\n        <InstallControlsWarning\n          plugin={plugin}\n          pluginStatus={pluginStatus}\n          latestCompatibleVersion={latestCompatibleVersion}\n        />\n      )}\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    subtitle: css`\n      display: flex;\n      flex-direction: column;\n      gap: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, Icon, Stack } from '@grafana/ui';\n\nimport { CatalogPlugin, PluginIconName } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  grafanaDependency?: string;\n  className?: string;\n};\n\nexport function PluginDetailsHeaderDependencies({ plugin, grafanaDependency }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (hasNoDependencyInfo) {\n    return null;\n  }\n\n  return (\n    <Stack gap={1}>\n      {/* Grafana dependency */}\n      {Boolean(grafanaDependency) && (\n        <div className={styles.depBadge}>\n          <Icon name=\"grafana\" className={styles.icon} />\n          Grafana {grafanaDependency}\n        </div>\n      )}\n\n      {/* Plugin dependencies */}\n      {pluginDependencies && pluginDependencies.length > 0 && (\n        <div>\n          {pluginDependencies.map((p) => {\n            return (\n              <span className={styles.depBadge} key={p.name}>\n                <Icon name={PluginIconName[p.type]} className={styles.icon} />\n                {p.name} {p.version}\n              </span>\n            );\n          })}\n        </div>\n      )}\n    </Stack>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    dependencyTitle: css`\n      margin-right: ${theme.spacing(0.5)};\n\n      &::after {\n        content: '';\n        padding: 0;\n      }\n    `,\n    depBadge: css({\n      display: 'flex',\n      alignItems: 'flex-start',\n    }),\n    icon: css`\n      color: ${theme.colors.text.secondary};\n      margin-right: ${theme.spacing(0.5)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { PluginSignatureBadge, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\n// Designed to show plugin signature information in the header on the plugin's details page\nexport function PluginDetailsHeaderSignature({ plugin }: Props): React.ReactElement {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <a\n        href=\"https://grafana.com/docs/grafana/latest/plugins/plugin-signatures/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className={styles.link}\n      >\n        <PluginSignatureBadge\n          status={plugin.signature}\n          signatureType={plugin.signatureType}\n          signatureOrg={plugin.signatureOrg}\n        />\n      </a>\n    </div>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-wrap: wrap;\n      gap: ${theme.spacing(0.5)};\n    `,\n    link: css`\n      display: inline-flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2, PluginSignatureType } from '@grafana/data';\nimport { t } from 'app/core/internationalization';\n\nimport { PageInfoItem } from '../../../../core/components/Page/types';\nimport { PluginDisabledBadge } from '../components/Badges';\nimport { PluginDetailsHeaderDependencies } from '../components/PluginDetailsHeaderDependencies';\nimport { PluginDetailsHeaderSignature } from '../components/PluginDetailsHeaderSignature';\nimport { getLatestCompatibleVersion } from '../helpers';\nimport { CatalogPlugin } from '../types';\n\nexport const usePluginInfo = (plugin?: CatalogPlugin): PageInfoItem[] => {\n  const info: PageInfoItem[] = [];\n\n  if (!plugin) {\n    return info;\n  }\n\n  // Populate info\n  const latestCompatibleVersion = getLatestCompatibleVersion(plugin.details?.versions);\n  const useLatestCompatibleInfo = !plugin.isInstalled;\n  let version = plugin.installedVersion;\n  if (!version && useLatestCompatibleInfo && latestCompatibleVersion?.version) {\n    version = latestCompatibleVersion?.version;\n  }\n\n  if (version) {\n    if (plugin.isManaged) {\n      info.push({\n        label: t('plugins.details.labels.version', 'Version'),\n        value: 'Managed by Grafana',\n      });\n    } else {\n      info.push({\n        label: t('plugins.details.labels.version', 'Version'),\n        value: `${version}${plugin.isPreinstalled.withVersion ? ' (preinstalled)' : ''}`,\n      });\n    }\n  }\n\n  if (Boolean(plugin.orgName)) {\n    info.push({\n      label: t('plugins.details.labels.from', 'From'),\n      value: plugin.orgName,\n    });\n  }\n\n  const showDownloads =\n    !plugin.signatureType ||\n    plugin.signatureType === PluginSignatureType.community ||\n    plugin.signatureType === PluginSignatureType.commercial;\n  if (showDownloads && Boolean(plugin.downloads > 0)) {\n    info.push({\n      label: t('plugins.details.labels.downloads', 'Downloads'),\n      value: new Intl.NumberFormat().format(plugin.downloads),\n    });\n  }\n\n  const pluginDependencies = plugin.details?.pluginDependencies;\n  let grafanaDependency = plugin.details?.grafanaDependency;\n  if (useLatestCompatibleInfo && latestCompatibleVersion?.grafanaDependency) {\n    grafanaDependency = latestCompatibleVersion?.grafanaDependency;\n  }\n  const hasNoDependencyInfo = !grafanaDependency && (!pluginDependencies || !pluginDependencies.length);\n\n  if (!hasNoDependencyInfo) {\n    info.push({\n      label: t('plugins.details.labels.dependencies', 'Dependencies'),\n      value: <PluginDetailsHeaderDependencies plugin={plugin} grafanaDependency={grafanaDependency} />,\n    });\n  }\n\n  if (plugin.isDisabled) {\n    info.push({\n      label: t('plugins.details.labels.status', 'Status'),\n      value: <PluginDisabledBadge error={plugin.error!} />,\n    });\n  }\n\n  info.push({\n    label: t('plugins.details.labels.signature', 'Signature'),\n    value: <PluginDetailsHeaderSignature plugin={plugin} />,\n  });\n\n  return info;\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    subtitle: css`\n      display: flex;\n      flex-direction: column;\n      gap: ${theme.spacing(1)};\n    `,\n  };\n};\n","import * as React from 'react';\n\nimport { PageInfoItem } from '../../../../core/components/Page/types';\nimport { PluginActions } from '../components/PluginActions';\nimport { PluginSubtitle } from '../components/PluginSubtitle';\nimport { CatalogPlugin } from '../types';\n\nimport { usePluginInfo } from './usePluginInfo';\n\ntype ReturnType = {\n  actions: React.ReactNode;\n  info: PageInfoItem[];\n  subtitle: React.ReactNode;\n};\n\nexport const usePluginPageExtensions = (plugin?: CatalogPlugin): ReturnType => {\n  const info = usePluginInfo(plugin);\n\n  return {\n    actions: <PluginActions plugin={plugin} />,\n    info,\n    subtitle: <PluginSubtitle plugin={plugin} />,\n  };\n};\n","import { useState } from 'react';\nimport * as React from 'react';\n\nimport { renderMarkdown } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\ntype Props = {\n  className?: string;\n  plugin: CatalogPlugin;\n};\n\nexport function PluginDetailsDeprecatedWarning(props: Props): React.ReactElement | null {\n  const { className, plugin } = props;\n  const [dismissed, setDismissed] = useState(false);\n  const isWarningVisible = plugin.isDeprecated && !dismissed;\n\n  return isWarningVisible ? (\n    <Alert severity=\"warning\" title=\"Deprecated\" className={className} onRemove={() => setDismissed(true)}>\n      <p>\n        This {plugin.type} plugin is{' '}\n        <a\n          className=\"external-link\"\n          href=\"https://grafana.com/legal/plugin-deprecation/\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          deprecated\n        </a>{' '}\n        and has been removed from the catalog.\n      </p>\n\n      {/* Additional contextual deprecation message supporting markdown */}\n      {plugin.details?.statusContext && (\n        <div\n          className=\"markdown-html\"\n          dangerouslySetInnerHTML={{\n            __html: renderMarkdown(plugin.details.statusContext),\n          }}\n        />\n      )}\n    </Alert>\n  ) : null;\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\nimport { useLocation } from 'react-router-dom-v5-compat';\n\nimport { GrafanaTheme2, NavModelItem } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Alert, Box, Stack, TabContent, useStyles2 } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { AppNotificationSeverity } from 'app/types';\n\nimport { AngularDeprecationPluginNotice } from '../../angularDeprecation/AngularDeprecationPluginNotice';\nimport { Loader } from '../components/Loader';\nimport { PluginDetailsBody } from '../components/PluginDetailsBody';\nimport { PluginDetailsDisabledError } from '../components/PluginDetailsDisabledError';\nimport { PluginDetailsRightPanel } from '../components/PluginDetailsRightPanel';\nimport { PluginDetailsSignature } from '../components/PluginDetailsSignature';\nimport { usePluginDetailsTabs } from '../hooks/usePluginDetailsTabs';\nimport { usePluginPageExtensions } from '../hooks/usePluginPageExtensions';\nimport { useGetSingle, useFetchStatus, useFetchDetailsStatus } from '../state/hooks';\nimport { PluginTabIds } from '../types';\n\nimport { PluginDetailsDeprecatedWarning } from './PluginDetailsDeprecatedWarning';\n\nexport type Props = {\n  // The ID of the plugin\n  pluginId: string;\n  // The navigation ID used for displaying the sidebar navigation\n  navId?: string;\n  // Can be used to customise the title & subtitle for the not found page\n  notFoundNavModel?: NavModelItem;\n  // Can be used to customise the content shown when a plugin with the given ID cannot be found\n  notFoundComponent?: React.ReactElement;\n};\n\nexport function PluginDetailsPage({\n  pluginId,\n  navId = 'plugins',\n  notFoundComponent = <NotFoundPlugin />,\n  notFoundNavModel = {\n    text: 'Unknown plugin',\n    subTitle: 'The requested ID does not belong to any plugin',\n    active: true,\n  },\n}: Props) {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const plugin = useGetSingle(pluginId); // fetches the plugin settings for this Grafana instance\n  const { navModel, activePageId } = usePluginDetailsTabs(plugin, queryParams.get('page') as PluginTabIds);\n  const { actions, info, subtitle } = usePluginPageExtensions(plugin);\n  const { isLoading: isFetchLoading } = useFetchStatus();\n  const { isLoading: isFetchDetailsLoading } = useFetchDetailsStatus();\n  const styles = useStyles2(getStyles);\n\n  if (isFetchLoading || isFetchDetailsLoading) {\n    return (\n      <Page\n        navId={navId}\n        pageNav={{\n          text: '',\n          active: true,\n        }}\n      >\n        <Loader />\n      </Page>\n    );\n  }\n\n  if (!plugin) {\n    return (\n      <Page navId={navId} pageNav={notFoundNavModel}>\n        {notFoundComponent}\n      </Page>\n    );\n  }\n\n  const conditionalProps = !config.featureToggles.pluginsDetailsRightPanel ? { info: info } : {};\n\n  return (\n    <Page navId={navId} pageNav={navModel} actions={actions} subTitle={subtitle} {...conditionalProps}>\n      <Stack gap={4} justifyContent=\"space-between\" direction={{ xs: 'column-reverse', sm: 'row' }}>\n        <Page.Contents>\n          <TabContent className={styles.tabContent}>\n            {plugin.angularDetected && (\n              <AngularDeprecationPluginNotice\n                className={styles.alert}\n                angularSupportEnabled={config?.angularSupportEnabled}\n                pluginId={plugin.id}\n                pluginType={plugin.type}\n                showPluginDetailsLink={false}\n                interactionElementId=\"plugin-details-page\"\n              />\n            )}\n            <PluginDetailsSignature plugin={plugin} className={styles.alert} />\n            <PluginDetailsDisabledError plugin={plugin} className={styles.alert} />\n            <PluginDetailsDeprecatedWarning plugin={plugin} className={styles.alert} />\n            <PluginDetailsBody queryParams={Object.fromEntries(queryParams)} plugin={plugin} pageId={activePageId} />\n          </TabContent>\n        </Page.Contents>\n        {config.featureToggles.pluginsDetailsRightPanel && <PluginDetailsRightPanel info={info} plugin={plugin} />}\n      </Stack>\n    </Page>\n  );\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    alert: css({\n      marginBottom: theme.spacing(2),\n    }),\n    subtitle: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(1),\n    }),\n    // Needed due to block formatting context\n    tabContent: css({\n      paddingLeft: '5px',\n    }),\n  };\n};\n\nfunction NotFoundPlugin() {\n  return (\n    <Stack justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n      <Box>\n        <Alert severity={AppNotificationSeverity.Warning} title=\"Plugin not found\">\n          That plugin cannot be found. Please check the url is correct or <br />\n          go to the <a href=\"/plugins\">plugin catalog</a>.\n        </Alert>\n      </Box>\n    </Stack>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { PluginError, PluginType, unEscapeStringFromRegex } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\n\nimport { filterByKeyword, isPluginUpdateable } from '../helpers';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\n\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nexport type PluginFilters = {\n  // Searches for a string in certain fields (e.g. \"name\" or \"orgName\")\n  // (Note: this will be an escaped regex string as it comes from `FilterInput`)\n  keyword?: string;\n\n  // (Optional, only applied if set)\n  type?: PluginType;\n\n  // (Optional, only applied if set)\n  isInstalled?: boolean;\n\n  // (Optional, only applied if set)\n  isEnterprise?: boolean;\n\n  // (Optional, only applied if set)\n  hasUpdate?: boolean;\n};\n\nexport const selectPlugins = (filters: PluginFilters) =>\n  createSelector(selectAll, (plugins) => {\n    const keyword = filters.keyword ? unEscapeStringFromRegex(filters.keyword.toLowerCase()) : '';\n    const filteredPluginIds = keyword !== '' ? filterByKeyword(plugins, keyword) : null;\n\n    if (keyword) {\n      reportInteraction('plugins_search', { resultsCount: filteredPluginIds?.length });\n    }\n    return plugins.filter((plugin) => {\n      if (keyword && filteredPluginIds == null) {\n        return false;\n      }\n\n      if (keyword && !filteredPluginIds?.includes(plugin.id)) {\n        return false;\n      }\n\n      if (filters.type && plugin.type !== filters.type) {\n        return false;\n      }\n\n      if (filters.isInstalled !== undefined && plugin.isInstalled !== filters.isInstalled) {\n        return false;\n      }\n\n      if (filters.isEnterprise !== undefined && plugin.isEnterprise !== filters.isEnterprise) {\n        return false;\n      }\n\n      if (filters.hasUpdate !== undefined && (plugin.hasUpdate !== filters.hasUpdate || !isPluginUpdateable(plugin))) {\n        return false;\n      }\n\n      return true;\n    });\n  });\n\nexport const selectPluginErrors = (filterByPluginType?: PluginType) =>\n  createSelector(selectAll, (plugins) => {\n    const pluginErrors: PluginError[] = [];\n    for (const plugin of plugins) {\n      if (plugin.error && (!filterByPluginType || plugin.type === filterByPluginType)) {\n        pluginErrors.push({\n          pluginId: plugin.id,\n          errorCode: plugin.error,\n          pluginType: plugin.type,\n        });\n      }\n    }\n    return pluginErrors;\n  });\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect, useMemo } from 'react';\n\nimport { PluginError, PluginType } from '@grafana/data';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { sortPlugins, Sorters, isPluginUpdateable } from '../helpers';\nimport { CatalogPlugin } from '../types';\n\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall, fetchAllLocal, unsetInstall } from './actions';\nimport {\n  selectPlugins,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectPluginErrors,\n  type PluginFilters,\n} from './selectors';\n\nexport const useGetAll = (filters: PluginFilters, sortBy: Sorters = Sorters.nameAsc) => {\n  useFetchAll();\n\n  const selector = useMemo(() => selectPlugins(filters), [filters]);\n  const plugins = useSelector(selector);\n  // As the locally installed plugins load quicker than the remote ones, we only show a loading state until these are being loaded\n  // (In case the remote ones are not loaded within a reasonable timeout, we will merge those with the locally installed plugins once they are loaded)\n  const { isLoading, error } = useLocalFetchStatus();\n  const sortedPlugins = sortPlugins(plugins, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedPlugins,\n  };\n};\n\nexport const useGetUpdatable = () => {\n  const { isLoading } = useFetchStatus();\n  const { plugins: installed } = useGetAll({ isInstalled: true });\n  const updatablePlugins = installed.filter(isPluginUpdateable);\n  return {\n    isLoading,\n    updatablePlugins,\n  };\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetSingleLocalWithoutDetails = (id: string): CatalogPlugin | undefined => {\n  useFetchAllLocal();\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetErrors = (filterByPluginType?: PluginType): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors(filterByPluginType));\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUnsetInstall = () => {\n  const dispatch = useDispatch();\n\n  return () => dispatch(unsetInstall());\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useLocalFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const error = useSelector(selectRequestError('plugins/fetchLocal'));\n\n  return { isLoading, error };\n};\n\nexport const useFetchStatus = () => {\n  const isAllLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const isLocalLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const isRemoteLoading = useSelector(selectIsRequestPending('plugins/fetchRemote'));\n  const isLoading = isAllLoading || isLocalLoading || isRemoteLoading;\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAllLocal = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAllLocal.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAllLocal());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useFetchDetailsLazy = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(fetchDetails(id));\n};\n"],"names":["ctaStyle","infoBoxStyles","title","buttonIcon","buttonLink","buttonTitle","buttonDisabled","onClick","proTip","proTipLink","proTipLinkTitle","proTipTarget","infoBox","infoBoxTitle","footer","ctaElementClassName","ButtonEl","ctaElement","DashboardsTable","dashboards","onImport","onRemove","buttonText","dashboard","index","DataSourcesRoutesContext","useInitDataSourceSettings","uid","dispatch","state","useTestDataSource","dataSourcesRoutes","useDataSourcesRoutes","useLoadDataSources","isLoading","dataSources","useLoadDataSource","useLoadDataSourcePlugins","useAddDatasource","plugin","useUpdateDatasource","dataSource","useDeleteLoadedDataSource","name","useDataSource","useDataSourceExploreUrl","useDataSourceMeta","pluginType","useDataSourceSettings","useDataSourceRights","readOnly","hasWriteRights","hasDeleteRights","constructDataSourceExploreUrl","exploreState","PluginDisabledBadge","error","tooltip","errorCodeToTooltip","Badge","getBadgeColor","theme","PluginInstalledBadge","customBadgeStyles","PluginEnterpriseBadge","Stack","PluginSignatureBadge","PluginUpdateAvailableBadge","styles","getStyles","PluginAngularBadge","PluginDeprecatedBadge","Loader","text","Changelog","sanitizedHTML","VersionList","versions","installedVersion","latestCompatibleVersion","version","isInstalledVersion","usePluginConfig","useAsync","AppConfigCtrlWrapper","props","pluginId","updateCmd","res","callback","deprecationWarning","prevProps","loader","template","scopeProps","angularCtrl","model","withRightMargin","element","Button","PluginDashboards","resolve","dash","overwrite","datasource","installCmd","loading","PluginUsage","searchQuery","results","found","width","height","SearchResultsTable","of","Spinner","EmptyListCTA","Alert","PluginDetailsBody","queryParams","pageId","pluginConfig","columns","value","permissions","InteractiveTable","permission","configPage","PluginContextProvider","PluginDetailsDisabledError","className","selectors","renderDescriptionFromError","PluginDetailsRightPanel","info","Box","infoItem","Text","link","TextLink","PluginDetailsSignature","isSignatureValid","isCore","isDisabled","isDisabledDueTooSignatureError","usePluginDetailsTabs","pathname","defaultTab","useDefaultPage","isPublished","currentPageId","navModelChildren","canConfigurePlugins","include","navModel","GetStartedWithApp","enabled","jsonData","enable","updatePluginSettingsAndReload","disable","id","data","e","isGrafanaAdmin","isOrgAdmin","isDataSourceEditor","GetStartedWithDataSource","onAddDataSource","meta","disabledButton","GetStartedWithPlugin","InstallControlsWarning","pluginStatus","isExternallyManaged","hasPermission","isRemotePluginsAvailable","isCompatible","statusToMessage","status","trackPluginInstalled","trackPluginUninstalled","PLUGIN_UPDATE_INTERACTION_EVENT_NAME","InstallControlsButton","hasInstallWarning","setNeedReload","useQueryParams","location","isInstalling","errorInstalling","isUninstalling","errorUninstalling","install","uninstall","unsetInstall","fetchDetails","isConfirmModalVisible","setIsConfirmModalVisible","showConfirmModal","hideConfirmModal","uninstallBtnText","trackingProps","onInstall","result","successMessage","onUninstall","activePageId","onUpdate","disableUninstall","uninstallTitle","ConfirmModal","disableUpdate","shouldDisable","ExternallyManagedButton","angularDetected","externalManageLink","PluginActions","needReload","isInstallControlsDisabled","Icon","PluginSubtitle","PluginDetailsHeaderDependencies","grafanaDependency","pluginDependencies","p","PluginDetailsHeaderSignature","usePluginInfo","useLatestCompatibleInfo","usePluginPageExtensions","PluginDetailsDeprecatedWarning","dismissed","setDismissed","PluginDetailsPage","navId","notFoundComponent","NotFoundPlugin","notFoundNavModel","actions","subtitle","isFetchLoading","isFetchDetailsLoading","Page","conditionalProps","TabContent","AngularDeprecationPluginNotice","selectRoot","selectItems","items","selectAll","selectPlugins","filters","plugins","keyword","filteredPluginIds","selectPluginErrors","filterByPluginType","pluginErrors","selectRequest","actionType","requests","selectIsRequestPending","request","selectRequestError","useGetAll","sortBy","useFetchAll","selector","useLocalFetchStatus","sortedPlugins","useGetUpdatable","useFetchStatus","installed","updatablePlugins","useGetSingle","useFetchDetails","useGetSingleLocalWithoutDetails","useFetchAllLocal","useGetErrors","useInstall","isUpdating","useUnsetInstall","useUninstall","useIsRemotePluginsAvailable","isAllLoading","isLocalLoading","isRemoteLoading","useFetchDetailsStatus","useInstallStatus","useUninstallStatus","isNotFetched","shouldFetch","useFetchDetailsLazy"],"sourceRoot":""}