{"version":3,"file":"LicensePage.7ca845843bfb586f3aa1.js","mappings":"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","sources":["webpack://grafana/./public/app/extensions/licensing/CustomerSupportButton.tsx","webpack://grafana/./public/app/extensions/licensing/LicenseCard.tsx","webpack://grafana/./public/app/extensions/licensing/LicenseTokenUpload.tsx","webpack://grafana/./public/app/extensions/licensing/utils.ts","webpack://grafana/./public/app/extensions/licensing/LicenseInfo.tsx","webpack://grafana/./public/app/extensions/licensing/LicensePage.tsx","webpack://grafana/./public/app/features/admin/ServerStatsCard.tsx","webpack://grafana/./public/app/features/admin/state/apis.tsx","webpack://grafana/./public/app/features/admin/ServerStats.tsx","webpack://grafana/./public/app/features/admin/LicenseChrome.tsx","webpack://grafana/./public/app/features/admin/UpgradePage.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Loader.tsx"],"sourcesContent":["import { LinkButton } from '@grafana/ui';\n\nexport interface Props {\n  orgSlug?: string;\n  licenseId?: string;\n}\n\nexport const CustomerSupportButton = ({ orgSlug, licenseId }: Props) => {\n  let href = 'https://grafana.com/contact';\n  if (orgSlug && licenseId) {\n    href = `https://grafana.com/orgs/${orgSlug}/tickets?support=licensing&licenseId=${licenseId}`;\n  }\n  return (\n    <LinkButton href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      Contact customer support\n    </LinkButton>\n  );\n};\n","import { css, cx } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, CardContainer, Icon, IconName, stylesFactory, Tooltip, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { CustomerSupportButton } from './CustomerSupportButton';\n\nexport type CardState = 'warning' | 'error' | 'info' | '';\nexport interface Props {\n  title?: string;\n  footer?: JSX.Element;\n  state?: CardState;\n  status?: string;\n  children: JSX.Element;\n  className?: string;\n}\n\nexport const LicenseCard = ({ title, children, footer, state, status, className }: Props) => {\n  const theme = useTheme2();\n  const styles = getStyles(theme, state);\n  return (\n    <CardContainer className={cx(styles.container, className)} disableHover>\n      <div className={styles.inner}>\n        {(title || status) && (\n          <div className={styles.row}>\n            {title && <h3 className={styles.title}>{title}</h3>}\n            {status && <CardStatus state={state} status={status} />}\n          </div>\n        )}\n        <div className={styles.content}>{children}</div>\n        {footer && <div className={styles.footer}>{footer}</div>}\n      </div>\n    </CardContainer>\n  );\n};\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2, state?: CardState) => {\n  return {\n    container: css`\n      padding: ${theme.spacing(2)};\n      margin-bottom: 0;\n      ${state && `border: 1px solid ${theme.colors[state].border}`};\n    `,\n    inner: css`\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n    `,\n    title: css`\n      font-size: ${theme.typography.h3.fontSize};\n      color: ${theme.colors.text.secondary};\n      margin-bottom: 0;\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin-bottom: ${theme.spacing(2)};\n      align-items: center;\n    `,\n    content: css`\n      display: flex;\n      flex-direction: column;\n      flex: 1 0 auto;\n      width: 100%;\n    `,\n    footer: css`\n      display: flex;\n      flex-direction: column;\n      align-items: self-start;\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n});\n\nexport type CardStatusProps = {\n  state?: CardState;\n  status?: string;\n};\n\nexport const CardStatus = ({ state, status }: CardStatusProps) => {\n  const iconMap = new Map<CardState, IconName>([\n    ['warning', 'bell'],\n    ['error', 'exclamation-triangle'],\n  ]);\n  const theme = useTheme2();\n  const styles = getStatusStyles(theme, state);\n\n  if (state && iconMap.has(state)) {\n    return (\n      <div role={'alert'} className={styles.container}>\n        <Icon name={iconMap.get(state)!} />\n        {status}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst getStatusStyles = (theme: GrafanaTheme2, state?: CardState) => {\n  return {\n    container: css`\n      background-color: ${theme.colors.background.primary};\n      color: ${state && theme.colors[state].text};\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n  };\n};\n\ntype CardAlertProps = {\n  state?: CardState;\n  title: string;\n  orgSlug: string;\n  licenseId: string;\n};\n\nexport const CardAlert = ({ state, title, orgSlug, licenseId }: CardAlertProps) => {\n  const styles = useStyles2(getAlertStyles);\n  return state ? (\n    <Alert title={title} severity={state} className={styles.container}>\n      <CustomerSupportButton orgSlug={orgSlug} licenseId={licenseId} />\n    </Alert>\n  ) : null;\n};\n\nconst getAlertStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      background: ${theme.colors.secondary.main};\n      margin-bottom: ${theme.spacing(3)};\n    `,\n  };\n};\n\ntype CardContentItem = {\n  name: string;\n  value: string | number | JSX.Element;\n  highlight?: boolean;\n  tooltip?: string;\n  indentLevel?: number; // Add indentLevel\n};\n\nexport const CardContent = ({ content, state }: { content: Array<CardContentItem | null>; state?: CardState }) => {\n  const theme = useTheme2();\n  const styles = getContentStyles(theme, state);\n\n  return (\n    <>\n      {content.map((item) => {\n        if (!item) {\n          return null;\n        }\n        const indentStyle = { marginLeft: `${item.indentLevel || 0}em` }; // Use indentLevel to control indentation\n        return (\n          <div key={item.name} className={styles.row}>\n            <span style={indentStyle}>\n              {item.name}\n              {item.tooltip && (\n                <Tooltip placement=\"top\" content={item.tooltip} theme={'info'}>\n                  <Icon name=\"info-circle\" size=\"sm\" />\n                </Tooltip>\n              )}\n            </span>\n            <span className={item.highlight ? styles.highlight : ''}>{item.value}</span>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nconst getContentStyles = (theme: GrafanaTheme2, state?: CardState) => {\n  return {\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      margin-bottom: ${theme.spacing(2)};\n      align-items: center;\n      svg {\n        margin-left: ${theme.spacing(0.5)};\n        cursor: pointer;\n      }\n    `,\n    highlight: css`\n      background-color: ${theme.colors.background.primary};\n      color: ${state && theme.colors[state].text};\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      margin-right: -${theme.spacing(1)};\n\n      svg {\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { FormEvent } from 'react';\n\nimport { Button, FileUpload, stylesFactory } from '@grafana/ui';\n\ninterface Props {\n  isUploading: boolean;\n  title?: string;\n  onFileUpload: (event: FormEvent<HTMLInputElement>) => void;\n  isDisabled?: boolean;\n  licensedUrl?: string;\n}\n\nexport const LicenseTokenUpload = ({ isUploading, title, onFileUpload, isDisabled, licensedUrl }: Props) => {\n  const styles = getStyles();\n\n  return (\n    <>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {isUploading ? (\n        <Button disabled={true}>Uploading…</Button>\n      ) : isDisabled ? (\n        <Button disabled={true}>Upload a new token</Button>\n      ) : (\n        <FileUpload onFileUpload={onFileUpload} accept=\".jwt\">\n          Upload a new token\n        </FileUpload>\n      )}\n      {licensedUrl && (\n        <p className={styles.instanceUrl}>\n          Instance URL: <code>{licensedUrl}</code>\n        </p>\n      )}\n    </>\n  );\n};\n\nconst getStyles = stylesFactory(() => {\n  return {\n    title: css`\n      margin-top: 30px;\n      margin-bottom: 20px;\n    `,\n    instanceUrl: css`\n      margin-top: 10px;\n    `,\n  };\n});\n","import { dateTime } from '@grafana/data';\nimport { config } from '@grafana/runtime';\n\nimport { CardState } from './LicenseCard';\nimport { ERROR_RATE, WARNING_RATE, LIMIT_BY_USERS } from './constants';\nimport { ActiveUserStats, LicenseToken } from './types';\n\ntype Status = { state: CardState; status: string; title: string; message: string };\n\nexport const getUserStatMessage = (includedUsers: number, activeUsers?: number): string => {\n  return (activeUsers ? `${activeUsers} of ` : '') + (includedUsers > 0 ? includedUsers : 'unlimited');\n};\n\nconst tokenExpired = (token: LicenseToken) => {\n  return dateTime(token.exp * 1000) < dateTime();\n};\n\nconst tokenWillExpireSoon = (token: LicenseToken) => {\n  return dateTime(token.exp * 1000) < dateTime().add((config as any).licensing.tokenExpiryWarnDays, 'd');\n};\n\nconst tokenWillExpireInDays = (token: LicenseToken) => {\n  return Math.ceil((token.exp - dateTime().unix()) / 3600 / 24);\n};\n\nexport const getTokenStatus = (token: LicenseToken | null): Status => {\n  if (!token) {\n    return { state: '', status: '', title: '', message: '' };\n  }\n\n  if (tokenExpired(token)) {\n    return {\n      state: 'error',\n      status: 'Expired',\n      title: 'Token expired',\n      message: 'Contact support to renew your token, or visit the Cloud portal to learn more.',\n    };\n  }\n\n  if (tokenWillExpireSoon(token)) {\n    return {\n      state: 'warning',\n      status: ` Expiring in ${tokenWillExpireInDays(token)} day(s)`,\n      title: 'Token expires soon',\n      message: `Your token expires in ${tokenWillExpireInDays(token)} day(s). Contact support to renew your token.`,\n    };\n  }\n\n  return { state: '', status: '', title: '', message: '' };\n};\n\nconst trialExpired = (token: LicenseToken) => {\n  return token.trial_exp && dateTime(token.trial_exp * 1000) < dateTime();\n};\n\nconst trialWillExpireInDays = (token: LicenseToken) => {\n  if (!token.trial_exp) {\n    return 0;\n  }\n  return Math.ceil((token.trial_exp - dateTime().unix()) / 3600 / 24);\n};\n\nexport const calculateActiveUsers = (stats: ActiveUserStats | null | undefined,\n  token: LicenseToken | null): number => {\n  const { active_users = 0, active_anonymous_devices = 0 } = stats || {};\n  const activeUsers = active_users + Math.floor(active_anonymous_devices / (token?.anonymousRatio || 1));\n  return activeUsers;\n}\n\nexport const getTrialStatus = (token: LicenseToken | null): Status => {\n  if (!token || !token.trial || !token.trial_exp) {\n    return { state: '', status: '', title: '', message: '' };\n  }\n\n  if (trialExpired(token)) {\n    return {\n      state: 'error',\n      status: 'Expired',\n      title: 'Trial expired',\n      message: 'Your trial period has expired, please contact sales to purchase a license.',\n    };\n  }\n\n  return {\n    state: 'info',\n    status: ` Trial expiring in ${trialWillExpireInDays(token)} day(s)`,\n    title: 'Trial active',\n    message: `Your trial expires in ${trialWillExpireInDays(\n      token\n    )} day(s), please contact sales to purchase a license.`,\n  };\n};\n\nexport const getRate = (total: number, value = 0) => {\n  return (100 * value) / total;\n};\n\nexport const getUtilStatus = (token: LicenseToken | null, stats?: ActiveUserStats | null): Status => {\n  let state: CardState = '';\n  let status = '';\n  let title = '';\n  let message = '';\n\n  if (!token) {\n    return {\n      state,\n      status,\n      title,\n      message,\n    };\n  }\n\n  if (token.limit_by === LIMIT_BY_USERS) {\n    const activeUsers = calculateActiveUsers(stats, token)\n    const totalUsers = token.included_users;\n    let userRate = 0;\n    if (typeof activeUsers === 'number') {\n      userRate = getRate(totalUsers, activeUsers);\n    }\n\n    if (userRate > ERROR_RATE) {\n      state = 'error';\n      status = 'Quota exceeded: active users';\n      title = 'User limit exceeded';\n      message = `There are more than ${totalUsers} active users using Grafana.`;\n      message += ' Contact support to increase the quotas.';\n    } else if (userRate >= WARNING_RATE) {\n      state = 'warning';\n      if (userRate >= ERROR_RATE) {\n        status = 'Limit reached';\n        title = 'User utilization limit reached';\n        message = `You are at your limit of ${totalUsers} active users.`;\n      } else {\n        status = 'Reaching limit';\n        title = 'User utilization reaching limit';\n        message = `There are ${activeUsers} active users.`;\n        message += ` You are approaching your limit of ${totalUsers} active users.`;\n      }\n      status += ': active users';\n      message += ' Contact support to increase the quotas.';\n    }\n  }\n\n  return {\n    state,\n    status,\n    title,\n    message,\n  };\n};\n","import { css } from '@emotion/css';\nimport { FormEvent, useState } from 'react';\n\nimport { dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\nimport { config, locationService } from '@grafana/runtime';\nimport { Alert, Button, LinkButton, useStyles2, Icon } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { UpgradeInfo } from 'app/features/admin/UpgradePage';\nimport { Loader } from 'app/features/plugins/admin/components/Loader';\n\nimport { AccessControlAction } from '../types';\n\nimport { CustomerSupportButton } from './CustomerSupportButton';\nimport { CardAlert, CardContent, CardState, LicenseCard } from './LicenseCard';\nimport { LicenseTokenUpload } from './LicenseTokenUpload';\nimport { EXPIRED, VALID, WARNING_RATE, LIMIT_BY_USERS, AWS_MARKEPLACE_ISSUER } from './constants';\nimport { postLicenseToken, renewLicenseToken } from './state/api';\nimport { ActiveUserStats, LicenseToken } from './types';\nimport { calculateActiveUsers, getRate, getTokenStatus, getTrialStatus, getUserStatMessage, getUtilStatus } from './utils';\n\nexport interface Props {\n  token: LicenseToken | null;\n  stats: ActiveUserStats | null;\n  tokenRenewed?: boolean;\n  tokenUpdated?: boolean;\n  isLoading?: boolean;\n  licensedUrl?: string;\n}\n\nexport const LicenseInfo = ({ token, stats, tokenRenewed, tokenUpdated, isLoading, licensedUrl }: Props) => {\n  const [isUploading, setIsUploading] = useState(false);\n  const [isRenewing, setIsRenewing] = useState(false);\n  const tokenState = getTokenStatus(token).state;\n  const utilState = getUtilStatus(token, stats).state;\n  const isLicensingEditor = contextSrv.hasPermission(AccessControlAction.LicensingWrite);\n\n  const styles = useStyles2(getStyles);\n  const activeUsers = calculateActiveUsers(stats, token);\n  const anonymousRatio = token?.anonymousRatio || 1;\n\n  const onFileUpload = (event: FormEvent<HTMLInputElement>) => {\n    const file = event.currentTarget?.files?.[0];\n\n    if (file) {\n      locationService.partial({ tokenUpdated: null, tokenRenewed: null });\n      const reader = new FileReader();\n      const readerOnLoad = () => {\n        return async (e: any) => {\n          setIsUploading(true);\n          try {\n            await postLicenseToken(e.target.result);\n            locationService.partial({ tokenUpdated: true });\n            setTimeout(() => {\n              // reload from server to pick up the new token\n              location.reload();\n            }, 1000);\n          } catch (error) {\n            setIsUploading(false);\n            throw error;\n          }\n        };\n      };\n      reader.onload = readerOnLoad();\n      reader.readAsText(file);\n    }\n  };\n\n  const onRenewClick = async () => {\n    locationService.partial({ tokenUpdated: null, tokenRenewed: null });\n\n    setIsRenewing(true);\n\n    try {\n      await renewLicenseToken();\n      locationService.partial({ tokenRenewed: true });\n      setTimeout(() => {\n        // reload from server to pick up the new token\n        location.reload();\n      }, 1000);\n    } catch (error) {\n      setIsRenewing(false);\n      throw error;\n    }\n  };\n\n  if (!contextSrv.hasPermission(AccessControlAction.LicensingRead)) {\n    return null;\n  }\n\n  if (isLoading) {\n    return <Loader text={'Loading licensing info...'} />;\n  }\n\n  let editionNotice = 'You are running Grafana Enterprise without a license. The Enterprise features are disabled.';\n  if (token && ![VALID, EXPIRED].includes(token.status)) {\n    editionNotice = 'There is a problem with your Enterprise license token. The Enterprise features are disabled.';\n  }\n\n\n  return !token || ![VALID, EXPIRED].includes(token.status) ? (\n    <>\n      <UpgradeInfo editionNotice={editionNotice} />\n      <div className={styles.uploadWrapper}>\n        <LicenseTokenUpload\n          title=\"Have a license?\"\n          onFileUpload={onFileUpload}\n          isUploading={isUploading}\n          isDisabled={!isLicensingEditor}\n          licensedUrl={licensedUrl}\n        />\n      </div>\n    </>\n  ) : (\n    <div>\n      <h2 className={styles.title}>License details</h2>\n      <PageAlert {...getUtilStatus(token, stats)} orgSlug={token.slug} licenseId={token.lid} />\n      <PageAlert {...getTokenStatus(token)} orgSlug={token.slug} licenseId={token.lid} />\n      <PageAlert {...getTrialStatus(token)} orgSlug={token.slug} licenseId={token.lid} />\n      {tokenUpdated && (\n        <Alert\n          title=\"License token uploaded. Restart Grafana for the changes to take effect.\"\n          severity=\"success\"\n          onRemove={() => locationService.partial({ tokenUpdated: null })}\n        />\n      )}\n      {tokenRenewed && (\n        <Alert\n          title=\"License token renewed.\"\n          severity=\"success\"\n          onRemove={() => locationService.partial({ tokenRenewed: null })}\n        />\n      )}\n      <div className={styles.row}>\n        <LicenseCard\n          title={'License'}\n          className={styles.licenseCard}\n          footer={\n            <LinkButton\n              variant=\"secondary\"\n              href={token.details_url || `${token.iss}/licenses/${token.lid}`}\n              aria-label=\"View details about your license in Grafana Cloud\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              License details\n            </LinkButton>\n          }\n        >\n          <CardContent\n            content={[\n              {\n                name: token.prod?.length <= 1 ? 'Product' : 'Products',\n                value:\n                  token.prod?.length <= 1 ? (\n                    token.prod[0] || 'None'\n                  ) : (\n                    <ul>\n                      {token.prod?.map((product) => (\n                        <li key={product}>{product}</li>\n                      ))}\n                    </ul>\n                  ),\n              },\n              token.iss === AWS_MARKEPLACE_ISSUER && token.account\n                ? { name: 'AWS Account', value: token.account }\n                : { name: 'Company', value: token.company },\n              { name: 'License ID', value: token.lid },\n              token.iss === AWS_MARKEPLACE_ISSUER\n                ? null\n                : {\n                    name: 'URL',\n                    value: token.sub,\n                    tooltip:\n                      'License URL is the root URL of your Grafana instance. The license will not work on an instance of Grafana with a different root URL.',\n                  },\n              { name: 'Purchase date', value: dateTimeFormat(token.nbf * 1000) },\n              token.iss === AWS_MARKEPLACE_ISSUER\n                ? null\n                : {\n                    name: 'License expires',\n                    value: dateTimeFormat(token.lexp * 1000),\n                    highlight: !!getTokenStatus(token)?.state,\n                    tooltip:\n                      'The license expiration date is the date when the current license is no longer active. As the license expiration date approaches, Grafana Enterprise displays a banner.',\n                  },\n              token.iss === AWS_MARKEPLACE_ISSUER\n                ? null\n                : {\n                    name: 'Usage billing',\n                    value: token.usage_billing ? 'On' : 'Off',\n                    tooltip:\n                      'You can request Grafana Labs to turn on usage billing to allow an unlimited number of active users. When usage billing is enabled, Grafana does not enforce active user limits or display warning banners. Instead, you are charged for active users above the limit, according to your customer contract.',\n                  },\n            ]}\n          />\n        </LicenseCard>\n        <LicenseCard\n          {...getTokenStatus(token)}\n          title={'Token'}\n          footer={\n            <div className={styles.row}>\n              {token.iss !== AWS_MARKEPLACE_ISSUER && (\n                <LicenseTokenUpload\n                  onFileUpload={onFileUpload}\n                  isUploading={isUploading}\n                  isDisabled={!isLicensingEditor}\n                />\n              )}\n              {isRenewing ? (\n                <span> (Renewing...)</span>\n              ) : (\n                <Button variant=\"secondary\" onClick={onRenewClick} disabled={!isLicensingEditor}>\n                  Renew token\n                </Button>\n              )}\n            </div>\n          }\n        >\n          <>\n            {tokenState && (\n              <CardAlert\n                title={'Contact support to renew your token, or visit the Cloud portal to learn more.'}\n                state={tokenState}\n                orgSlug={token.slug}\n                licenseId={token.lid}\n              />\n            )}\n            <div className={styles.message}>\n              <Icon name={'document-info'} />\n              Read about{' '}\n              <a\n                href={'https://grafana.com/docs/grafana/latest/enterprise/license/license-expiration/'}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                license expiration\n              </a>{' '}\n              and{' '}\n              <a\n                href={'https://grafana.com/docs/grafana/latest/enterprise/license/activate-license/'}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                license activation\n              </a>\n              .\n            </div>\n            <CardContent\n              content={[\n                { name: 'Token ID', value: token.jti },\n                { name: 'Token issued', value: dateTimeFormat(token.iat * 1000) },\n                {\n                  name: 'Token expires',\n                  value: dateTimeFormat(token.exp * 1000),\n                  highlight: !!getTokenStatus(token)?.state,\n                  tooltip:\n                    'Grafana automatically updates the token before it expires. If your token is not updating, contact support.',\n                },\n              ]}\n              state={tokenState}\n            />\n          </>\n        </LicenseCard>\n        <LicenseCard\n          {...getUtilStatus(token, stats)}\n          title={'Utilization'}\n          footer={\n            <small className={styles.footerText}>\n              Utilization of licenced users is determined based on signed-in users&apos; activity in the past 30 days.\n            </small>\n          }\n        >\n          <>\n            <div className={styles.message}>\n              <Icon name={'document-info'} />\n              Read about{' '}\n              <a\n                href={\n                  'https://grafana.com/docs/grafana/latest/enterprise/license/license-restrictions/#active-users-limit'\n                }\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                active user limits\n              </a>{' '}\n              and{' '}\n              <a\n                href={\n                  'https://grafana.com/docs/grafana/latest/enterprise/license/license-restrictions/#concurrent-sessions-limit'\n                }\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                concurrent session limits\n              </a>\n              .\n            </div>\n\n            {token.limit_by === LIMIT_BY_USERS && (\n              <CardContent\n                content={[\n                  {\n                    name: 'Active licensed users',\n                    value: getUserStatMessage(token.included_users, activeUsers),\n                    highlight: getRate(token.included_users, activeUsers) >= WARNING_RATE,\n                  },\n                  ...(config.bootData.settings.anonymousEnabled?\n                  [{\n                    name: 'Authenticated users',\n                    value: stats?.active_users || 0,\n                    indentLevel: 1,\n                  },\n                  {\n                    name: 'Anonymous users',\n                    value: Math.floor(( stats?.active_anonymous_devices || 0 )/anonymousRatio),\n                    tooltip: `For every ${anonymousRatio} anonymous ${anonymousRatio > 1 ? 'devices' : 'device'}, Grafana counts 1 user.`,\n                    indentLevel: 1,\n                  },]\n                  : []),\n                ]}\n                state={utilState}\n              />\n            )}\n          </>\n        </LicenseCard>\n      </div>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css`\n      margin: ${theme.spacing(4)} 0;\n    `,\n    infoText: css`\n      font-size: ${theme.typography.size.sm};\n    `,\n    uploadWrapper: css`\n      margin-left: 79px;\n    `,\n    row: css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      flex-wrap: wrap;\n      gap: ${theme.spacing(2)};\n\n      & > div {\n        flex: 1 1 340px;\n      }\n    `,\n    footerText: css`\n      margin-bottom: ${theme.spacing(2)};\n    `,\n    licenseCard: css`\n      background: url('/public/img/licensing/card-bg-${theme.isLight ? 'light' : 'dark'}.svg') center no-repeat;\n      background-size: cover;\n    `,\n    message: css`\n      height: 70px;\n      a {\n        color: ${theme.colors.text.link};\n\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      svg {\n        margin-right: ${theme.spacing(0.5)};\n      }\n    `,\n  };\n};\n\ntype PageAlertProps = {\n  state?: CardState;\n  message?: string;\n  title: string;\n  orgSlug: string;\n  licenseId: string;\n};\n\nconst PageAlert = ({ state, message, title, orgSlug, licenseId }: PageAlertProps) => {\n  const styles = useStyles2(getPageAlertStyles);\n  if (!state) {\n    return null;\n  }\n\n  return (\n    <Alert title={title} severity={state || undefined}>\n      <div className={styles.container}>\n        <div>\n          <p>{message}</p>\n          <a\n            className={styles.link}\n            href={'https://grafana.com/docs/grafana/latest/enterprise/license/license-restrictions/'}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn about Enterprise licenses\n          </a>\n        </div>\n        <CustomerSupportButton orgSlug={orgSlug} licenseId={licenseId} />\n      </div>\n    </Alert>\n  );\n};\n\nconst getPageAlertStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: space-between;\n      width: 100%;\n    `,\n    link: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      text-decoration: underline;\n      color: ${theme.colors.text.secondary};\n\n      &:hover {\n        color: ${theme.colors.text.primary};\n      }\n    `,\n  };\n};\n","import { useEffect, useState } from 'react';\n\nimport { config } from '@grafana/runtime';\nimport { Page } from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { ServerStats } from 'app/features/admin/ServerStats';\n\nimport { AccessControlAction } from '../types';\n\nimport { LicenseInfo } from './LicenseInfo';\nimport { getLicenseToken, refreshLicenseStats } from './state/api';\nimport { ActiveUserStats, LicenseToken } from './types';\n\nimport { initLicenseWarnings } from './index';\n\ninterface QueryParams {\n  tokenUpdated?: boolean;\n  tokenRenewed?: boolean;\n}\n\ninterface Props extends GrafanaRouteComponentProps<{}, QueryParams> {}\n\nexport const LicensePage = ({ queryParams }: Props) => {\n  const [token, setToken] = useState<LicenseToken | null>(null);\n  const [stats, setStats] = useState<ActiveUserStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { tokenUpdated, tokenRenewed } = queryParams;\n\n  useEffect(() => {\n    if (!contextSrv.hasPermission(AccessControlAction.LicensingRead)) {\n      return;\n    }\n\n    setIsLoading(true);\n    const getData = async () => {\n      const token = await getLicenseToken().catch(() => null);\n      const stats = await refreshLicenseStats().catch(() => null);\n      setToken(token);\n      setStats(stats);\n      setIsLoading(false);\n    };\n    getData();\n\n    return initLicenseWarnings;\n  }, []);\n\n  return (\n    <Page navId=\"licensing\">\n      <Page.Contents>\n        <ServerStats />\n        <LicenseInfo\n          token={token}\n          stats={stats}\n          tokenUpdated={tokenUpdated}\n          tokenRenewed={tokenRenewed}\n          isLoading={isLoading}\n          licensedUrl={(config as any).licenseInfo?.appUrl}\n        />\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default LicensePage;\n","import { css, cx } from '@emotion/css';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Stack, useStyles2, Tooltip, Icon } from '@grafana/ui';\n\ninterface StatItem {\n  name: string;\n  value: string | number | undefined;\n  tooltip?: string;\n  highlight?: boolean;\n  indent?: boolean;\n}\n\nexport interface Props {\n  content: StatItem[];\n  isLoading?: boolean;\n  footer?: JSX.Element | boolean;\n}\n\nexport const ServerStatsCard = ({ content, footer, isLoading }: Props) => {\n  const styles = useStyles2(getStyles);\n  return (\n    <Card className={styles.container}>\n      {content.map((item, index) => (\n        <Stack key={index} justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack alignItems={'center'}>\n            <span className={cx({ [styles.indent]: !!item.indent })}>{item.name}</span>\n            {item.tooltip && (\n              <Tooltip content={String(item.tooltip)} placement=\"auto-start\">\n                <Icon name=\"info-circle\" className={styles.tooltip} />\n              </Tooltip>\n            )}\n          </Stack>\n          {isLoading ? (\n            <Skeleton width={60} />\n          ) : (\n            <span className={item.highlight ? styles.highlight : ''}>{item.value}</span>\n          )}\n        </Stack>\n      ))}\n      {footer && <div>{footer}</div>}\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.spacing(2),\n      padding: theme.spacing(2),\n    }),\n    indent: css({\n      marginLeft: theme.spacing(2),\n    }),\n    tooltip: css({\n      color: theme.colors.secondary.text,\n    }),\n    highlight: css({\n      color: theme.colors.warning.text,\n      padding: `${theme.spacing(0.5)} ${theme.spacing(1)}`,\n      marginRight: `-${theme.spacing(1)}`,\n    }),\n  };\n};\n","import { getBackendSrv } from '@grafana/runtime';\n\ninterface AnonServerStat {\n  activeDevices?: number;\n}\n\nexport interface ServerStat extends AnonServerStat {\n  activeAdmins: number;\n  activeEditors: number;\n  activeSessions: number;\n  activeUsers: number;\n  activeViewers: number;\n  admins: number;\n  alerts: number;\n  dashboards: number;\n  datasources: number;\n  editors: number;\n  orgs: number;\n  playlists: number;\n  snapshots: number;\n  stars: number;\n  tags: number;\n  users: number;\n  viewers: number;\n}\n\nexport const getServerStats = async (): Promise<ServerStat | null> => {\n  return getBackendSrv()\n    .get('api/admin/stats')\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n};\n","import { css } from '@emotion/css';\nimport { useEffect, useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { config, GrafanaBootConfig } from '@grafana/runtime';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\nimport { AccessControlAction } from 'app/types';\n\nimport { contextSrv } from '../../core/services/context_srv';\n\nimport { ServerStatsCard } from './ServerStatsCard';\nimport { getServerStats, ServerStat } from './state/apis';\n\nexport const ServerStats = () => {\n  const [stats, setStats] = useState<ServerStat | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const styles = useStyles2(getStyles);\n\n  const hasAccessToDataSources = contextSrv.hasPermission(AccessControlAction.DataSourcesRead);\n  const hasAccessToAdminUsers = contextSrv.hasPermission(AccessControlAction.UsersRead);\n\n  useEffect(() => {\n    if (contextSrv.hasPermission(AccessControlAction.ActionServerStatsRead)) {\n      getServerStats().then((stats) => {\n        setStats(stats);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n\n  if (!contextSrv.hasPermission(AccessControlAction.ActionServerStatsRead)) {\n    return null;\n  }\n\n  return (\n    <>\n      <h2 className={styles.title}>Instance statistics</h2>\n      {!isLoading && !stats ? (\n        <p className={styles.notFound}>No stats found.</p>\n      ) : (\n        <div className={styles.row}>\n          <ServerStatsCard\n            isLoading={isLoading}\n            content={[\n              { name: 'Dashboards (starred)', value: `${stats?.dashboards} (${stats?.stars})` },\n              { name: 'Tags', value: stats?.tags },\n              { name: 'Playlists', value: stats?.playlists },\n              { name: 'Snapshots', value: stats?.snapshots },\n            ]}\n            footer={\n              <LinkButton href={'/dashboards'} variant={'secondary'}>\n                Manage dashboards\n              </LinkButton>\n            }\n          />\n\n          <div className={styles.doubleRow}>\n            <ServerStatsCard\n              isLoading={isLoading}\n              content={[{ name: 'Data sources', value: stats?.datasources }]}\n              footer={\n                hasAccessToDataSources && (\n                  <LinkButton href={'/datasources'} variant={'secondary'}>\n                    Manage data sources\n                  </LinkButton>\n                )\n              }\n            />\n            <ServerStatsCard\n              isLoading={isLoading}\n              content={[{ name: 'Alerts', value: stats?.alerts }]}\n              footer={\n                <LinkButton href={'/alerting/list'} variant={'secondary'}>\n                  Manage alerts\n                </LinkButton>\n              }\n            />\n          </div>\n          <ServerStatsCard\n            isLoading={isLoading}\n            content={[\n              { name: 'Organisations', value: stats?.orgs },\n              { name: 'Users total', value: stats?.users },\n              { name: 'Active sessions', value: stats?.activeSessions },\n              { name: 'Active users in last 30 days', value: stats?.activeUsers },\n              ...getAnonymousStatsContent(stats, config),\n            ]}\n            footer={\n              hasAccessToAdminUsers && (\n                <LinkButton href={'/admin/users'} variant={'secondary'}>\n                  Manage users\n                </LinkButton>\n              )\n            }\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nconst getAnonymousStatsContent = (stats: ServerStat | null, config: GrafanaBootConfig) => {\n  if (!config.anonymousEnabled || !stats?.activeDevices) {\n    return [];\n  }\n  if (!config.anonymousDeviceLimit) {\n    return [\n      {\n        name: 'Active anonymous devices',\n        value: `${stats.activeDevices}`,\n        tooltip: 'Detected devices that are not logged in, in last 30 days.',\n      },\n    ];\n  } else {\n    return [\n      {\n        name: 'Active anonymous devices',\n        value: `${stats.activeDevices} / ${config.anonymousDeviceLimit}`,\n        tooltip: 'Detected devices that are not logged in, in last 30 days.',\n        highlight: stats.activeDevices > config.anonymousDeviceLimit,\n      },\n    ];\n  }\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    title: css({\n      marginBottom: theme.spacing(4),\n    }),\n    row: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '100%',\n\n      '& > div:not(:last-of-type)': {\n        marginRight: theme.spacing(2),\n      },\n\n      '& > div': {\n        width: '33.3%',\n      },\n    }),\n    doubleRow: css({\n      display: 'flex',\n      flexDirection: 'column',\n\n      '& > div:first-of-type': {\n        marginBottom: theme.spacing(2),\n      },\n    }),\n    notFound: css({\n      fontSize: theme.typography.h6.fontSize,\n      textAlign: 'center',\n      height: '290px',\n    }),\n  };\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2, useTheme2 } from '@grafana/ui';\n\nconst title = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const backgroundUrl = theme.isDark ? 'public/img/licensing/header_dark.svg' : 'public/img/licensing/header_light.svg';\n  const footerBg = theme.isDark ? theme.v1.palette.dark9 : theme.v1.palette.gray6;\n\n  return {\n    container: css`\n      padding: 36px 79px;\n      background: ${theme.components.panel.background};\n    `,\n    footer: css`\n      text-align: center;\n      padding: 16px;\n      background: ${footerBg};\n    `,\n    header: css`\n      height: 137px;\n      padding: 40px 0 0 79px;\n      position: relative;\n      background: url('${backgroundUrl}') right;\n    `,\n  };\n};\n\ninterface Props {\n  header: string;\n  subheader?: string;\n  editionNotice?: string;\n  children?: React.ReactNode;\n}\n\nexport function LicenseChrome({ header, editionNotice, subheader, children }: Props) {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <div className={styles.header}>\n        <h2 style={title}>{header}</h2>\n        {subheader && <h3>{subheader}</h3>}\n\n        <Circle\n          size=\"128px\"\n          style={{\n            boxShadow: '0px 0px 24px rgba(24, 58, 110, 0.45)',\n            background: '#0A1C36',\n            position: 'absolute',\n            top: '19px',\n            left: '71%',\n          }}\n        >\n          <img\n            src=\"public/img/grafana_icon.svg\"\n            alt=\"Grafana\"\n            width=\"80px\"\n            style={{ position: 'absolute', left: '23px', top: '20px' }}\n          />\n        </Circle>\n      </div>\n\n      <div className={styles.container}>{children}</div>\n\n      {editionNotice && <div className={styles.footer}>{editionNotice}</div>}\n    </>\n  );\n}\n\ninterface CircleProps {\n  size: string;\n  style?: React.CSSProperties;\n}\n\nexport const Circle = ({ size, style, children }: React.PropsWithChildren<CircleProps>) => {\n  const theme = useTheme2();\n  return (\n    <div\n      style={{\n        width: size,\n        height: size,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        borderRadius: theme.shape.radius.circle,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { css } from '@emotion/css';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { GrafanaTheme2, NavModel } from '@grafana/data';\nimport { LinkButton, useStyles2 } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { getNavModel } from '../../core/selectors/navModel';\nimport { StoreState } from '../../types';\n\nimport { LicenseChrome } from './LicenseChrome';\nimport { ServerStats } from './ServerStats';\n\ninterface Props {\n  navModel: NavModel;\n}\n\nexport function UpgradePage({ navModel }: Props) {\n  return (\n    <Page navModel={navModel}>\n      <Page.Contents>\n        <ServerStats />\n        <UpgradeInfo\n          editionNotice=\"You are running the open-source version of Grafana.\n        You have to install the Enterprise edition in order enable Enterprise features.\"\n        />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst titleStyles = { fontWeight: 500, fontSize: '26px', lineHeight: '123%' };\n\ninterface UpgradeInfoProps {\n  editionNotice?: string;\n}\n\nexport const UpgradeInfo = ({ editionNotice }: UpgradeInfoProps) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <h2 className={styles.title}>Enterprise license</h2>\n      <LicenseChrome header=\"Grafana Enterprise\" subheader=\"Get your free trial\" editionNotice={editionNotice}>\n        <div className={styles.column}>\n          <FeatureInfo />\n          <ServiceInfo />\n        </div>\n      </LicenseChrome>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    column: css`\n      display: grid;\n      grid-template-columns: 100%;\n      column-gap: 20px;\n      row-gap: 40px;\n\n      @media (min-width: 1050px) {\n        grid-template-columns: 50% 50%;\n      }\n    `,\n    title: css`\n      margin: ${theme.spacing(4)} 0;\n    `,\n  };\n};\n\nconst GetEnterprise = () => {\n  return (\n    <div style={{ marginTop: '40px', marginBottom: '30px' }}>\n      <h2 style={titleStyles}>Get Grafana Enterprise</h2>\n      <CallToAction />\n      <p style={{ paddingTop: '12px' }}>\n        You can use the trial version for free for 30 days. We will remind you about it five days before the trial\n        period ends.\n      </p>\n    </div>\n  );\n};\n\nconst CallToAction = () => {\n  return (\n    <LinkButton\n      variant=\"primary\"\n      size=\"lg\"\n      href=\"https://grafana.com/contact?about=grafana-enterprise&utm_source=grafana-upgrade-page\"\n    >\n      Contact us and get a free trial\n    </LinkButton>\n  );\n};\n\nconst ServiceInfo = () => {\n  return (\n    <div>\n      <h4>At your service</h4>\n\n      <List>\n        <Item title=\"Enterprise Plugins\" image=\"public/img/licensing/plugin_enterprise.svg\" />\n        <Item title=\"Critical SLA: 2 hours\" image=\"public/img/licensing/sla.svg\" />\n        <Item title=\"Unlimited Expert Support\" image=\"public/img/licensing/customer_support.svg\">\n          24 x 7 x 365 support via\n          <List nested={true}>\n            <Item title=\"Email\" />\n            <Item title=\"Private Slack channel\" />\n            <Item title=\"Phone\" />\n          </List>\n        </Item>\n        <Item title=\"Hand-in-hand support\" image=\"public/img/licensing/handinhand_support.svg\">\n          in the upgrade process\n        </Item>\n      </List>\n\n      <div style={{ marginTop: '20px' }}>\n        <strong>Also included:</strong>\n        <br />\n        Indemnification, working with Grafana Labs on future prioritization, and training from the core Grafana team.\n      </div>\n\n      <GetEnterprise />\n    </div>\n  );\n};\n\nconst FeatureInfo = () => {\n  return (\n    <div style={{ paddingRight: '11px' }}>\n      <h4>Enhanced functionality</h4>\n      <FeatureListing />\n    </div>\n  );\n};\n\nconst FeatureListing = () => {\n  return (\n    <List>\n      <Item title=\"Data source permissions\" />\n      <Item title=\"Reporting\" />\n      <Item title=\"SAML authentication\" />\n      <Item title=\"Enhanced LDAP integration\" />\n      <Item title=\"Team Sync\">LDAP, GitHub OAuth, Auth Proxy, Okta</Item>\n      <Item title=\"White labeling\" />\n      <Item title=\"Auditing\" />\n      <Item title=\"Settings updates at runtime\" />\n      <Item title=\"Grafana usage insights\">\n        <List nested={true}>\n          <Item title=\"Sort dashboards by popularity in search\" />\n          <Item title=\"Find unused dashboards\" />\n          <Item title=\"Dashboard usage stats drawer\" />\n          <Item title=\"Dashboard presence indicators\" />\n        </List>\n      </Item>\n      <Item title=\"Enterprise plugins\">\n        <List nested={true}>\n          <Item title=\"Oracle\" />\n          <Item title=\"Splunk\" />\n          <Item title=\"Service Now\" />\n          <Item title=\"Dynatrace\" />\n          <Item title=\"New Relic\" />\n          <Item title=\"DataDog\" />\n          <Item title=\"AppDynamics\" />\n          <Item title=\"SAP HANA®\" />\n          <Item title=\"Gitlab\" />\n          <Item title=\"Honeycomb\" />\n          <Item title=\"Jira\" />\n          <Item title=\"MongoDB\" />\n          <Item title=\"Salesforce\" />\n          <Item title=\"Snowflake\" />\n          <Item title=\"Wavefront\" />\n        </List>\n      </Item>\n    </List>\n  );\n};\n\ninterface ListProps {\n  nested?: boolean;\n}\n\nconst List = ({ children, nested }: React.PropsWithChildren<ListProps>) => {\n  const listStyle = css`\n    display: flex;\n    flex-direction: column;\n    padding-top: 8px;\n\n    > div {\n      margin-bottom: ${nested ? 0 : 8}px;\n    }\n  `;\n\n  return <div className={listStyle}>{children}</div>;\n};\n\ninterface ItemProps {\n  title: string;\n  image?: string;\n}\n\nconst Item = ({ children, title, image }: React.PropsWithChildren<ItemProps>) => {\n  const imageUrl = image ? image : 'public/img/licensing/checkmark.svg';\n  const itemStyle = css`\n    display: flex;\n\n    > img {\n      display: block;\n      height: 22px;\n      flex-grow: 0;\n      padding-right: 12px;\n    }\n  `;\n  const titleStyle = css`\n    font-weight: 500;\n    line-height: 1.7;\n  `;\n\n  return (\n    <div className={itemStyle}>\n      <img src={imageUrl} alt=\"\" />\n      <div>\n        <div className={titleStyle}>{title}</div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StoreState) => ({\n  navModel: getNavModel(state.navIndex, 'upgrading'),\n});\n\nexport default connect(mapStateToProps)(UpgradePage);\n","import { Box, LoadingPlaceholder } from '@grafana/ui';\n\nexport interface Props {\n  text?: string;\n}\n\nexport const Loader = ({ text = 'Loading...' }: Props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\" direction=\"column\" justifyContent=\"center\" paddingTop={10}>\n      <LoadingPlaceholder text={text} />\n    </Box>\n  );\n};\n"],"names":["CustomerSupportButton","orgSlug","licenseId","href","LicenseCard","title","children","footer","state","status","className","theme","styles","getStyles","CardContainer","CardStatus","stylesFactory","iconMap","getStatusStyles","Icon","CardAlert","getAlertStyles","Alert","CardContent","content","getContentStyles","item","indentStyle","Tooltip","LicenseTokenUpload","isUploading","onFileUpload","isDisabled","licensedUrl","Button","FileUpload","getUserStatMessage","includedUsers","activeUsers","tokenExpired","token","tokenWillExpireSoon","config","tokenWillExpireInDays","getTokenStatus","trialExpired","trialWillExpireInDays","calculateActiveUsers","stats","active_users","active_anonymous_devices","getTrialStatus","getRate","total","value","getUtilStatus","message","totalUsers","userRate","LicenseInfo","tokenRenewed","tokenUpdated","isLoading","setIsUploading","isRenewing","setIsRenewing","tokenState","utilState","isLicensingEditor","anonymousRatio","event","file","reader","readerOnLoad","e","error","onRenewClick","Loader","editionNotice","PageAlert","product","getPageAlertStyles","LicensePage","queryParams","setToken","setStats","setIsLoading","Page","ServerStats","ServerStatsCard","Card","index","Stack","getServerStats","err","hasAccessToDataSources","hasAccessToAdminUsers","getAnonymousStatsContent","backgroundUrl","footerBg","LicenseChrome","header","subheader","Circle","size","style","UpgradePage","navModel","UpgradeInfo","titleStyles","FeatureInfo","ServiceInfo","GetEnterprise","CallToAction","List","Item","FeatureListing","nested","listStyle","image","imageUrl","itemStyle","titleStyle","mapStateToProps","text"],"sourceRoot":""}